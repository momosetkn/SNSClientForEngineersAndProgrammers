{"version":3,"sources":["reportWebVitals.ts","DragDropOverlay.tsx","Compose.tsx","Api.ts","Log.tsx","MainPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DragDropOverlay","onDropFile","useState","drag","setDrag","file","setFile","useEffect","undefined","document","addEventListener","ev","preventDefault","dataTransfer","items","i","length","kind","getAsFile","files","console","log","name","fromElement","StyledMain","enabled","styled","div","x","composeHeight","Compose","value","onChange","onSubmit","userList","send","setSend","inputRef","useRef","handleKeyup","useCallback","e","ctrlKey","key","a","text","trim","initialComposeValue","current","removeEventListener","handleChangeComposeValue","event","target","className","type","placeholder","replyToTextId","replyToUserId","map","user","id","_user_id","slice","StyledTextCounter","error","ref","rows","cols","icon","faPaperPlane","title","onClick","index","faTimesCircle","filter","_","end_point","uploadImages","bindTextId","fileUploader","convertBase64Promise","Promise","r","fr","FileReader","onload","result","readAsDataURL","base64","params","bind_text_id","fetch","method","headers","Authorization","body","JSON","stringify","res","json","all","Array","from","Log","userMap","onClose","Number","MIN_SAFE_INTEGER","updateTimeTrigger","setUpdateTimeTrigger","open","replyDestination","setReplyDestination","useContext","ComposeContext","composeValue","setComposeValue","imageMap","ImageMapContext","loadImages","LoadImagesContext","time","useMemo","now","Date","date","_created_at","diff","getTime","timeDiff","Math","floor","localizedTime","toLocaleString","setInterval","prev","getUser","userId","handleChangeImageFile","handleClickReply","in_reply_to_text_id","StyledMeta","description","dateTime","in_reply_to_user_id","StyledText","image","src","alt","faReply","textId","htmlFor","faImages","accept","multiple","hidden","StyledReplyDestinationText","y","createContext","lists","query","encodeURI","MainPage","setUserList","imageList","setImageList","loadLogTrigger","setLoadLogTrigger","reduce","acc","cur","loadUser","handleSubmit","replaceAll","String","raw","postTextRes","Provider","list","Logs","texts","setTexts","loadLog","StyledLogs","ReactDOM","render","StrictMode","exact","path","getElementById"],"mappings":"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","file":"static/js/main.68801afe.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from \"styled-components\";\nimport {useEffect, useState} from \"react\";\n\nexport const DragDropOverlay = ({onDropFile}:{onDropFile: (file: File) => void}) => {\n  const [drag, setDrag] = useState(false);\n  // addEventListenerを都度貼り替えるのが面倒なため、state経由でuseEffectを発火させ、onDropFileさせる\n  const [file, setFile] = useState<File | undefined>();\n\n  useEffect(() => {\n    if(file){\n      onDropFile(file);\n      setFile(undefined);\n    }\n  }, [file, onDropFile]);\n\n  useEffect(() => {\n    const handleDrop =  (ev: any) => {\n      setDrag(false);\n      ev.preventDefault();\n\n      if (ev.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          if (ev.dataTransfer.items[i].kind === 'file') {\n            const file = ev.dataTransfer.items[i].getAsFile();\n            setFile(file);\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + ev.dataTransfer.files[i].name);\n        }\n      }\n    };\n\n    const dragEnterHandler = (ev: any) =>  {\n      ev.preventDefault();\n      setDrag(true);\n    };\n\n    const dragOverHandler = (ev: any) =>  ev.preventDefault();\n\n    const handleDragLeave = (ev: any) =>  {\n      ev.preventDefault();\n      console.log('leave', ev);\n      if (!ev.fromElement){\n        setDrag(false);\n      }\n    };\n\n    document.addEventListener('drop', handleDrop);\n    document.addEventListener('dragenter', dragEnterHandler);\n    document.addEventListener('dragover', dragOverHandler);//kesu nokosu\n    document.addEventListener('dragleave', handleDragLeave);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <StyledMain enabled={drag} />\n  );\n};\n\nconst styledDragDropOverlayMargin = 16;\nconst styledDragDropOverlayBorderSize = 4;\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  width: calc(100vw - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  height: calc(100vh - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  top: 0px;\n  margin: ${styledDragDropOverlayMargin}px;\n  border-radius: 32px;\n  background: gray;\n  border: ${styledDragDropOverlayBorderSize}px dashed black;\n  opacity: 0.5;\n  display:   ${(x) =>  x.enabled ? 'block' : 'none'};\n`;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { User } from \"./Api\";\nimport { ComposeValue, initialComposeValue } from \"./MainPage\";\nimport { faPaperPlane, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { DragDropOverlay } from \"./DragDropOverlay\";\n\nexport const composeHeight = '100px';\n\nexport const Compose = ({\n  value,\n  onChange,\n  onSubmit,\n  userList\n}: {\n  value: ComposeValue,\n  onChange: (value: ComposeValue) => void,\n  onSubmit: (value: ComposeValue) => void;\n  userList: User[]\n}) => {\n  const [send, setSend] = useState(false);\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleKeyup = useCallback((e: KeyboardEvent) => {\n    // Ctrl + Enterで送信\n    if (e.ctrlKey && e.key === 'Enter' && !send) {\n      // ここで送信処理はせず、sendフラグの変更をuseEffectで察知させて、送ることで、古いデータを送らないようにする\n      setSend(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDropFile = (file: File) => {\n    onChange({...value, files: [...(value.files || []), file]});\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (send && value.text.trim()) {\n        setSend(false);\n        onSubmit(value);\n        onChange(initialComposeValue);\n      }\n    })();\n  }, [send, value, onChange, onSubmit]);\n  useEffect(() => {\n    if (inputRef.current) {\n      console.log('effect');\n      inputRef.current.removeEventListener(\"keyup\", handleKeyup, false);\n      inputRef.current.addEventListener(\"keyup\", handleKeyup, false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputRef.current]);\n\n  const handleChangeComposeValue = (event: any) => {\n    onChange({\n      ...value,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <StyledMain>\n      <form>\n        <div className=\"flex\">\n          <input\n            type=\"text\"\n            name=\"replyToTextId\"\n            placeholder=\"ツイートへの返信\"\n            value={value.replyToTextId}\n            onChange={handleChangeComposeValue}\n          />\n          <select\n            name=\"replyToUserId\"\n            value={value.replyToUserId}\n            onChange={handleChangeComposeValue}\n          >\n            <option value=\"\">-</option>\n            {userList.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name || `匿名(${user._user_id.slice(0, 2)})`}\n              </option>\n            ))}\n          </select>\n          <StyledTextCounter error={value.text.trim().length > 280}>\n            {`${value.text.trim().length}/280`}\n          </StyledTextCounter>\n        </div>\n        <div className=\"flex\">\n          <textarea\n            name=\"text\"\n            ref={inputRef}\n            placeholder=\"今なにしてる？\"\n            rows={4}\n            cols={50}\n            value={value.text}\n            onChange={e => onChange({...value, text: e.target.value})}\n          />\n          <FontAwesomeIcon\n            className=\"clickable\"\n            icon={faPaperPlane}\n            title=\"post\"\n            onClick={(e) => {e.preventDefault();setSend(true);}}\n          />\n          <div>\n            {value.files?.map((file, index) => (\n              <div>\n                {file.name}\n                <FontAwesomeIcon\n                  className=\"clickable ml1\"\n                  icon={faTimesCircle}\n                  onClick={() => onChange({...value, files: value.files?.filter((_, i) => i !== index)})}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </form>\n      <DragDropOverlay onDropFile={handleDropFile}/>\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  height: ${composeHeight};\n`;\n\nconst StyledTextCounter = styled.div<{error: boolean}>`\n  color: ${(x) => x.error ? 'red': 'black'};\n`;\n","export const end_point = \"https://versatileapi.herokuapp.com/api\";\n\ntype Base = {\n  id: string;\n  _created_at: string;\n  _updated_at: string;\n  _user_id: string;\n}\n\nexport type Text = Base & {\n  text: string;\n  in_reply_to_user_id?: string; //返信対象のUserId\n  in_reply_to_text_id?: string; //返信対象のTextId\n}\n\nexport type Image = Base & {\n  base64: string;\n  bind_text_id: string;\n}\n\nexport type User = Base & {\n  description: string;\n  name: string;\n}\n\nexport type Response = {\n  id: string;\n}\n\nexport const uploadImages = async ({files, bindTextId}:{files: File[] | FileList, bindTextId: string}) => {\n  const fileUploader = async (file: File) => {\n    const convertBase64Promise = new Promise((r) => {\n      const fr = new FileReader();\n      fr.onload = (e) => {\n        r(e.target?.result);\n      };\n      fr.readAsDataURL(file);\n    });\n    const base64 = (await convertBase64Promise) as any as string;\n    if (base64.length > 100_000) {\n      console.error(`base64 size is ${base64.length}`);\n    }\n    const params = {\n      base64,\n      bind_text_id: bindTextId,\n    }\n    await fetch(`${end_point}/image`, {\n      method: \"POST\",\n      headers: {Authorization: \"evolution\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json()).then(x => console.log(x));\n  };\n\n  await Promise.all(Array.from(files).map(fileUploader));\n};\n","import React, { ChangeEvent, useContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { User, Text, end_point, uploadImages } from \"./Api\";\nimport { faImages, faReply, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './index.css';\nimport styled from \"styled-components\";\nimport { ComposeContext, ImageMapContext, LoadImagesContext } from \"./MainPage\";\n\nexport const Log = ({\n  text,\n  userMap,\n  onClose,\n}: {\n  text: Text;\n  userMap: Record<string, User>,\n  onClose?: () => void\n}) => {\n  const [updateTimeTrigger, setUpdateTimeTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [replyDestination, setReplyDestination] = useState<{\n    text?: Text;\n    open: boolean;\n  }>({open: false});\n\n  const { composeValue, setComposeValue } = useContext(ComposeContext);\n  const imageMap = useContext(ImageMapContext);\n  const loadImages = useContext(LoadImagesContext);\n\n  const time = useMemo(() => {\n    const now = new Date();\n    const date = new Date(text._created_at);\n    const diff = (now.getTime() - date.getTime()) / 1_000;\n    let timeDiff = \"\";\n    if (diff < 60) {\n      timeDiff = `${Math.floor(diff)}秒前`;\n    } else if (diff / 60 < 60) {\n      timeDiff = `${Math.floor(diff / 60)}分前`;\n    } else if (diff / 60 / 60 < 24) {\n      timeDiff = `${Math.floor(diff / 60 / 60)}時間前`;\n    } else {\n      timeDiff = `${Math.floor(diff / 60 / 60 / 24)}日前`;\n    }\n    return {\n      timeDiff,\n      time: text._created_at,\n      localizedTime: date.toLocaleString(\"ja-JP\"),\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text, userMap, updateTimeTrigger]);\n\n  useEffect(() => {\n    setInterval(() => setUpdateTimeTrigger(prev => prev + 1), 5_000);\n  }, []);\n\n  const getUser = (userId: string) => {\n    return userMap[userId]?.name || `匿名(${userId.slice(0, 2)})`;\n  };\n\n  const handleReplyTo = (x: { textId: string, userId: string }) => {\n    setComposeValue({...composeValue, replyToTextId: x.textId,  replyToUserId: x.userId})\n  };\n\n  const handleChangeImageFile = async (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n\n    await uploadImages({files: e.target.files, bindTextId: text.id});\n\n    loadImages();\n  };\n\n  const handleClickReply = async () => {\n      if(!text.in_reply_to_text_id) return;\n\n      if(replyDestination.text){\n        setReplyDestination(prev => ({\n          ...prev,\n          open: true,\n        }))\n        return;\n      }\n      await fetch(`${end_point}/text/${text.in_reply_to_text_id}`)\n        .then((res) => (res.json()))\n        .then(x => {\n          setReplyDestination({\n            text: x,\n            open: true,\n          })\n        });\n    };\n\n  return (\n    <StyledMain>\n      <StyledMeta>\n        <div\n          title={userMap[text._user_id]?.description || text._user_id}>\n          {getUser(text._user_id)}\n        </div>\n        <div>\n          <time dateTime={time.time} title={time.localizedTime}>\n            {time.timeDiff}\n          </time>\n          {onClose ?\n            <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={onClose}/>\n            : null\n          }\n        </div>\n      </StyledMeta>\n      <div>\n        <div onClick={handleClickReply} >\n          {text.in_reply_to_text_id ? `ReplyTo: ${text.in_reply_to_text_id} `: ''}\n        </div>\n        <div>\n          {text.in_reply_to_user_id ? `@${getUser(text.in_reply_to_user_id)} `: ''}\n        </div>\n        <StyledText>\n          {text.text}\n        </StyledText>\n      </div>\n      {imageMap[text.id]?.length ?\n        imageMap[text.id].map(image => (\n          <div>\n            <img\n              src={image.base64}\n              alt={`${getUser(text._user_id)}さんが貼り付けた画像`}\n              title={`${getUser(image._user_id)}さんが貼り付けた画像`}\n            />\n          </div>\n        ))\n        : null\n      }\n      <div className=\"flex mt1\">\n        <FontAwesomeIcon\n          className=\"clickable\"\n          icon={faReply}\n          title=\"reply\"\n          onClick={() => handleReplyTo({textId: text.id, userId: text._user_id})}\n        />\n        <label htmlFor={`image_upload_${text.id}`}>\n          <FontAwesomeIcon\n            className=\"clickable ml2\"\n            icon={faImages}\n            title=\"images\"\n          />\n          <input\n            id={`image_upload_${text.id}`}\n            type=\"file\"\n            accept=\"image/*\"\n            multiple\n            hidden\n            onChange={handleChangeImageFile}\n          />\n        </label>\n      </div>\n      {\n        replyDestination.open && replyDestination.text?\n          (\n            <StyledReplyDestinationText\n              x={onClose ? 0 : 8}\n              y={16}\n            >\n              <Log\n                text={replyDestination.text}\n                userMap={userMap}\n                onClose={() => setReplyDestination(prev => ({...prev, open: false}))}\n              />\n            </StyledReplyDestinationText>\n          )\n          : null\n      }\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  border: 1px solid #ccc;\n  padding: 8px;\n`;\n\nconst StyledMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledText = styled.div`\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  padding-top: 2px;\n`;\n\nconst StyledReplyDestinationText = styled.div<{x: number, y: number}>`\n  margin-left: ${({x}) => x}px;\n  margin-top: ${({y}) => y}px;\n`;\n","import React, { createContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { Compose, composeHeight } from \"./Compose\";\nimport { end_point, User, Text, Image, uploadImages, Response } from \"./Api\";\nimport {Log} from \"./Log\";\nimport './index.css';\nimport styled from \"styled-components\";\n\nexport type ComposeValue = { text: string, replyToTextId: string, replyToUserId: string; files?: File[]}\n\nexport const initialComposeValue: ComposeValue = {text: \"\", replyToTextId: \"\", replyToUserId: \"\"};\n\nexport const ComposeContext =\n  createContext<{ composeValue: ComposeValue, setComposeValue: (value: ComposeValue) => void }>(\n    {composeValue: initialComposeValue, setComposeValue: (value: ComposeValue) => {}}\n  );\n\nexport const ImageMapContext = createContext<Record<string, Image[]>>({});\n\nexport const LoadImagesContext = createContext<() => void>(() => {});\n\nconst lists = [\n  {\n    name: 'All',\n    query: encodeURI(\"$filter=_user_id ne 'd9ecf9245defb6b07cb86fe92a6fde9e735fc9f9'&$orderby=_created_at desc&$limit=20\"),\n  },\n  {\n    name: 'To me',\n    query: encodeURI(\"$filter=in_reply_to_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc&$limit=20\")\n  },\n  {\n    name: 'Self',\n    query: encodeURI(\"$filter=_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc&$limit=20\")\n  },\n]\n\nexport const MainPage = () => {\n  const [userList, setUserList] = useState<User[]>([]);\n  const [imageList, setImageList] = useState<Image[]>([]);\n  const [composeValue, setComposeValue] = useState<ComposeValue>(initialComposeValue);\n  const [loadLogTrigger, setLoadLogTrigger] = useState(Number.MIN_SAFE_INTEGER);\n\n  const userMap: Record<string, User> = useMemo(() => userList.reduce((acc: any, cur: { id: any; }) => ({\n    ...acc,\n    [cur.id]: cur\n  }), {}), [userList]);\n\n  const imageMap: Record<string, Image[]> = useMemo(() => imageList.reduce((acc: any, cur: Image) => ({\n    ...acc,\n    [cur.bind_text_id]: [...(acc[cur.bind_text_id] || []), cur],\n  }), {}), [imageList]);\n\n  const loadUser = () => {\n    fetch(`${end_point}/user/all`)\n      .then((res) => (res.json()))\n      .then(setUserList);\n  };\n\n  const loadImages = () => {\n    fetch(`${end_point}/image/all`)\n      .then((res) => (res.json()))\n      .then(setImageList);\n  };\n\n  const handleSubmit = async ({text, replyToUserId, replyToTextId, files}: ComposeValue) => {\n    const params = {\n      text,\n      ...(replyToUserId ? {in_reply_to_user_id: replyToUserId}: {}),\n      ...(replyToTextId ? {in_reply_to_text_id: replyToTextId}: {}),\n    };\n    // 以下コードにて、'を\"へ置換してるっぽいので、エスケープさせる（\\\"と認識させて、文字列の終端と認識されちゃうのを防止）\n    // https://github.com/HawkClaws/versatileapi/blob/6f7c8db356455f890662b525106d2e1270fa58e8/versatileapi/src/main/java/com/flex/versatileapi/service/VersatileService.java#L154\n    const postTextRes: Response = await fetch(`${end_point}/text`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(params).replaceAll(\"'\", String.raw`\\'`)\n    }).then((res) => res.json());\n    files && await uploadImages({files, bindTextId: postTextRes.id});\n\n    loadImages();\n    setLoadLogTrigger(prev => prev+1);\n  };\n\n  useEffect(() => {\n    loadUser();\n    setInterval(loadUser, 60_000 * 10);//10分\n\n    loadImages();\n    setInterval(loadImages, 10_000);\n  }, []);\n\n  return (\n    <div>\n      <Compose value={composeValue} onChange={setComposeValue} onSubmit={handleSubmit} userList={userList} />\n      <LoadImagesContext.Provider value={loadImages}>\n        <ImageMapContext.Provider value={imageMap}>\n          <ComposeContext.Provider value={{composeValue, setComposeValue}}>\n            <div className=\"flex\">\n              {lists.map(list => (\n                <Logs\n                  key={list.name}\n                  name={list.name}\n                  query={list.query}\n                  userMap={userMap}\n                  loadLogTrigger={loadLogTrigger}\n                />\n              ))}\n            </div>\n          </ComposeContext.Provider>\n        </ImageMapContext.Provider>\n      </LoadImagesContext.Provider>\n    </div>\n  );\n};\n\nconst Logs = ({\n  name,\n  query,\n  userMap,\n  loadLogTrigger,\n} : {\n  name: string,\n  query: string,\n  userMap: Record<string, User>,\n  loadLogTrigger?: number,\n}) => {\n  const [texts, setTexts] = useState<Text[]>([]);\n\n  const loadLog = () => {\n    fetch(`${end_point}/text/all?${query}`)\n      .then((res) => (res.json()))\n      .then(setTexts);\n  };\n\n  useEffect(() => {\n    loadLog();\n    setInterval(loadLog, 10_000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => loadLog(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [loadLogTrigger]);\n\n  return (\n    <StyledLogs>\n      <h3 className=\"m0\">\n        {name}\n      </h3>\n      {texts.map(text => (\n        <Log\n          key={text.id}\n          text={text}\n          userMap={userMap}\n        />\n      ))}\n    </StyledLogs>\n  );\n}\n\nconst StyledLogs = styled.div`\n  width: 320px;\n  height: calc(100vh - ${composeHeight});\n  overflow-y: auto;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { MainPage } from \"./MainPage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}