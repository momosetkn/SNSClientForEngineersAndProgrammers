{"version":3,"sources":["reportWebVitals.ts","DragDropOverlay.tsx","Constants.ts","Api.ts","SettingsOverlay.tsx","Util.ts","Compose.tsx","Log.tsx","Logs.tsx","PreviewImagesOverlay.tsx","NotificationBar.tsx","MainPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DragDropOverlay","onDropFile","useState","drag","setDrag","file","setFile","useEffect","undefined","document","addEventListener","ev","preventDefault","dataTransfer","items","i","length","kind","getAsFile","files","console","log","name","fromElement","StyledMain","enabled","styled","div","x","zIndexes","appName","localStorageKey","myUser","pains","colors","end_point","imageMaxSize","uploadImages","a","base64s","bindTextId","fileUploader","base64","Error","params","bind_text_id","fetch","method","headers","Authorization","body","JSON","stringify","res","json","Promise","all","Array","from","map","httpToJson","ok","text","SettingsOverlay","open","onClose","description","state","update","userMap","useContext","ImageMapContext","apply","value","Object","entries","id","dummyMyUser","_user_id","myUserValue","e","key","localStorageMyUser","localStorage","getItem","parse","setItem","StyledBackground","StyledImageOverlay","StyledHeaderContainer","className","icon","faTimesCircle","onClick","StyledForm","htmlFor","type","onChange","prev","target","cols","rows","asyncConvertBase64","result","r","fr","FileReader","onload","readAsDataURL","error","eq","b","is","aEntries","bEntries","every","aKey","aValue","Compose","onSubmit","userList","sendStatus","setSendStatus","settingsOverlayOpen","setSettingsOverlayOpen","setNotificationContent","inputRef","useRef","handleKeyup","useCallback","ctrlKey","handleDropFile","trim","initialComposeValue","current","removeEventListener","handleChangeComposeValue","event","loading","placeholder","replyToTextId","disabled","replyToUserId","user","slice","StyledTextCounter","ref","faPaperPlane","title","index","filter","_","faCog","form","Log","Number","MIN_SAFE_INTEGER","updateTimeTrigger","setUpdateTimeTrigger","replyDestination","setReplyDestination","likeCount","setLikeCount","ComposeContext","composeValue","setComposeValue","imageMap","likeMap","loadImages","LoadImagesContext","setPreviewImages","SetPreviewImagesContext","time","useMemo","now","Date","date","_created_at","diff","getTime","timeDiff","Math","floor","localizedTime","toLocaleString","setInterval","like_count","getUser","userId","handleClickLike","textId","catch","err","response","status","like","nextLikeCount","handleChangeImageFile","handleClickReply","in_reply_to_text_id","child","StyledMeta","dateTime","StyledReplyTo","in_reply_to_user_id","StyledText","image","StyledImg","src","alt","images","StyledActions","faReply","faHeart","faImages","accept","multiple","hidden","StyledReplyDestinationText","y","img","Logs","onChangePain","loadLogTrigger","texts","setTexts","editingPainValue","setEditingPainValue","internalLoadLogTrigger","setInternalLoadLogTrigger","openTitle","setOpenTitle","titleHeight","loadLog","p","handleChange","handleChangeInt","parseInt","pollingIntervalTime","clearInterval","encodeURI","query","limit","StyledLogs","StyledLogsTitle","StyledTitleHeader","onBlur","StyledTexts","PreviewImagesOverlay","viewingIndex","setViewingIndex","imageSize","setImageSize","keyup","setKeyup","offsetX","setOffsetX","imgElementRef","max","min","imageSrc","complete","width","naturalWidth","height","naturalHeight","getElementsByTagName","style","overflow","window","pageXOffset","left","StyledPoints","StyledPoint","NotificationTypeTable","notification","warning","NotificationBar","content","notificationMessages","setNotificationMessages","counter","setCounter","toString","setTimeout","StyledMain2","notificationMessage","v","createContext","initialPains","MainPage","setUserList","imageList","setImageList","likeList","setLikeList","setLoadLogTrigger","previewImages","openPreviewImagesOverlay","setOpenPreviewImagesOverlay","notificationContent","setPains","reduce","acc","cur","loadUser","loadImagesLimit","newImageList","newImageListIndex","findIndex","newImage","loadLikes","handleSubmit","postTextRes","Provider","list","find","pain","newList","handleChangePain","ReactDOM","render","StrictMode","exact","path","getElementById"],"mappings":"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","file":"static/js/main.ab369bab.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from \"styled-components\";\nimport {useEffect, useState} from \"react\";\n\nexport const DragDropOverlay = ({onDropFile}:{onDropFile: (file: File) => void}) => {\n  const [drag, setDrag] = useState(false);\n  // addEventListenerを都度貼り替えるのが面倒なため、state経由でuseEffectを発火させ、onDropFileさせる\n  const [file, setFile] = useState<File | undefined>();\n\n  useEffect(() => {\n    if(file){\n      onDropFile(file);\n      setFile(undefined);\n    }\n  }, [file, onDropFile]);\n\n  useEffect(() => {\n    const handleDrop =  (ev: any) => {\n      setDrag(false);\n      ev.preventDefault();\n\n      if (ev.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          if (ev.dataTransfer.items[i].kind === 'file') {\n            const file = ev.dataTransfer.items[i].getAsFile();\n            setFile(file);\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + ev.dataTransfer.files[i].name);\n        }\n      }\n    };\n\n    const dragEnterHandler = (ev: any) =>  {\n      ev.preventDefault();\n      setDrag(true);\n    };\n\n    const dragOverHandler = (ev: any) =>  ev.preventDefault();\n\n    const handleDragLeave = (ev: any) =>  {\n      ev.preventDefault();\n      console.log('leave', ev);\n      if (!ev.fromElement){\n        setDrag(false);\n      }\n    };\n\n    document.addEventListener('drop', handleDrop);\n    document.addEventListener('dragenter', dragEnterHandler);\n    document.addEventListener('dragover', dragOverHandler);//kesu nokosu\n    document.addEventListener('dragleave', handleDragLeave);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <StyledMain enabled={drag} />\n  );\n};\n\nconst styledDragDropOverlayMargin = 16;\nconst styledDragDropOverlayBorderSize = 4;\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  width: calc(100vw - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  height: calc(100vh - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  top: 0px;\n  margin: ${styledDragDropOverlayMargin}px;\n  border-radius: 32px;\n  background: gray;\n  border: ${styledDragDropOverlayBorderSize}px dashed black;\n  opacity: 0.5;\n  display:   ${(x) =>  x.enabled ? 'block' : 'none'};\n`;\n","export const zIndexes = {\n  dragDrop: 100,\n  previewImages: 300,\n  previewImagesBackground: 200,\n  settings: 250,\n  notificationBar: 500,\n};\n\nconst appName = 'SNSClientForEngineersAndProgrammers';\n\nexport const localStorageKey = {\n  myUser: `${appName}_myUser`,\n  pains: `${appName}_pains`,\n};\n\nexport const colors = {\n  border: '#ccc',\n  background: '#fff',\n  action: '#555',\n};\n","export const end_point = \"https://versatileapi.herokuapp.com/api\";\n\ntype Base = {\n  id: string;\n  _created_at: string;\n  _updated_at: string;\n  _user_id: string;\n}\n\nexport type Text = Base & {\n  text: string;\n  in_reply_to_user_id?: string; //返信対象のUserId\n  in_reply_to_text_id?: string; //返信対象のTextId\n}\n\nexport type Image = Base & {\n  base64: string;\n  bind_text_id: string;\n}\n\nexport type User = Base & {\n  description: string;\n  name: string;\n}\n\nexport type Like = {\n  id: string;\n  _updated_at: string;\n  like_count: number;\n}\n\nexport type Return = {\n  id: string;\n}\n\nexport const imageMaxSize = 100_000;\n\nexport const uploadImages = async ({base64s, bindTextId}:{base64s: string[], bindTextId: string}) => {\n  const fileUploader = async (base64: string) => {\n\n    if (base64.length > imageMaxSize) throw new Error();\n    const params = {\n      base64,\n      bind_text_id: bindTextId,\n    }\n    await fetch(`${end_point}/image`, {\n      method: \"POST\",\n      headers: {Authorization: \"evolution\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json()).then(x => console.log(x));\n  };\n\n  await Promise.all(Array.from(base64s).map(fileUploader));\n};\n\nexport const httpToJson = (res: Response) => res.ok ? res.json() : res.text();","import styled from \"styled-components\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {colors, localStorageKey, zIndexes} from \"./Constants\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {end_point, httpToJson, Return, User} from \"./Api\";\nimport {ImageMapContext} from \"./MainPage\";\n\ntype State = {\n  name: string,\n  description: string,\n};\n\nexport const SettingsOverlay = ({open, onClose}: {open: boolean; onClose: () => void}) => {\n  const [state, update] = useState<State>({\n    name: '',\n    description: '',\n  });\n\n  const { userMap } = useContext(ImageMapContext);\n\n  const apply = async (value: State) => {\n    return await fetch(`${end_point}/user/create_user`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(value)\n    }).then(httpToJson);\n  };\n\n  const handleClose = () => {\n    apply(state);\n    onClose();\n  };\n\n  useEffect(() => {\n    (async () => {\n      // ユーザー情報のサーバーからの取得（localStorageから取得できなかったときに発動）\n      if(!Object.entries(userMap).length) return;\n\n      // localStorageから取得できてれば、ここを通らない。\n      if(state.name || state.description) return;\n\n      const res: Return = await apply({name: '', description: ''});\n      const dummyMyUser: User = await fetch(`${end_point}/user/${res.id}`, {\n        headers: {Authorization: \"HelloWorld\"},\n      }).then(httpToJson);\n\n      const myUser = userMap[dummyMyUser._user_id];\n      if(!myUser) return;\n\n      const myUserValue = {\n        name: myUser.name,\n        description: myUser.description,\n      };\n      update(myUserValue);\n      await apply(myUserValue);\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userMap]);\n\n  useEffect(() => {\n    const handleKeyup = (e: KeyboardEvent) => {\n      e.preventDefault();\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    document.addEventListener('keyup', handleKeyup, false);\n\n    // ユーザー初期値\n    const localStorageMyUser = localStorage.getItem(localStorageKey.myUser);\n    if (localStorageMyUser) {\n      update(JSON.parse(localStorageMyUser));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if(!state.name) return;\n    if(!state.description) return;\n\n    localStorage.setItem(localStorageKey.myUser, JSON.stringify(state));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n\n  return (\n    <>\n      {open ?\n        <StyledMain enabled={open} >\n          <StyledBackground />\n          <StyledImageOverlay>\n            <StyledHeaderContainer>\n              <div>Settings</div>\n              <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={handleClose}/>\n            </StyledHeaderContainer>\n            <StyledForm>\n              <div>\n                <label htmlFor=\"SettingsOverlay_name\">name</label>\n                <input\n                  name=\"name\"\n                  id=\"SettingsOverlay_name\"\n                  type=\"text\"\n                  value={state.name}\n                  onChange={e => {\n                    update(prev => ({...prev, name: e.target.value}));\n                  }}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"SettingsOverlay_description\">description</label>\n                <textarea\n                  name=\"description\"\n                  id=\"SettingsOverlay_description\"\n                  cols={30}\n                  rows={5}\n                  value={state.description}\n                  onChange={e => {\n                    update(prev => ({...prev, description: e.target.value}));\n                  }}\n                />\n              </div>\n            </StyledForm>\n          </StyledImageOverlay>\n        </StyledMain> : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.settings};\n  background: ${colors.background};\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nconst StyledHeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst StyledForm = styled.div`\n  & label {\n    display: block;\n    margin-top: 8px;\n  }\n`;\n","import {imageMaxSize} from \"./Api\";\n\nexport const asyncConvertBase64 = async (file: File) => {\n  const result = new Promise((r) => {\n    const fr = new FileReader();\n    fr.onload = (e) => {\n      r(e.target?.result);\n    };\n    fr.readAsDataURL(file);\n  });\n  const base64 = (await result) as any as string;\n  if (base64.length > imageMaxSize) {\n    console.error(`base64 size is ${base64.length}`);\n    return null\n  }\n  return base64;\n}\n\nexport const eq = (a: any, b: any): boolean => {\n  if (Object.is(a, b)) return true;\n  if (typeof a !== 'object') return false;\n  if (typeof b !== 'object') return false;\n  const aEntries = Object.entries(a);\n  const bEntries = Object.entries(b);\n  if (aEntries.length !== bEntries.length) return false;\n  return aEntries.every(([aKey, aValue]) => eq(aValue, b[aKey]));\n};\n","import React, {useCallback, useContext, useEffect, useRef, useState} from \"react\";\nimport { User } from \"./Api\";\nimport {ComposeValue, ImageMapContext, initialComposeValue} from \"./MainPage\";\nimport {faCog, faPaperPlane, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { DragDropOverlay } from \"./DragDropOverlay\";\nimport {SettingsOverlay} from \"./SettingsOverlay\";\nimport {asyncConvertBase64} from \"./Util\";\n\nexport const composeHeight = 100;\n\nexport const Compose = ({\n  value,\n  onChange,\n  onSubmit,\n  userList\n}: {\n  value: ComposeValue,\n  onChange: (value: ComposeValue) => void,\n  onSubmit: (value: ComposeValue) => void;\n  userList: User[]\n}) => {\n  const [sendStatus, setSendStatus] = useState<'waiting' | 'send' | 'sending'>('waiting');\n  const [settingsOverlayOpen, setSettingsOverlayOpen] = useState(false);\n\n  const { setNotificationContent } =  useContext(ImageMapContext);\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleKeyup = useCallback((e: KeyboardEvent) => {\n    // Ctrl + Enterで送信\n    if (e.ctrlKey && e.key === 'Enter' && sendStatus === 'waiting') {\n      // ここで送信処理はせず、sendフラグの変更をuseEffectで察知させて、送ることで、古いデータを送らないようにする\n      setSendStatus('send');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDropFile = async (file: File) => {\n    const base64 = await asyncConvertBase64(file);\n    if (!base64) {\n      console.error('画像が大きすぎます');\n      setNotificationContent({text: '画像が大きすぎます', type: \"error\"});\n      return;\n    }\n    onChange({...value, files: [...(value.files || []), file]});\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (sendStatus === 'send' && value.text.trim()) {\n        // 他と競合して、同時に発火するのを防ぐため、一番先に実行されたものはステータスを変更しておく。\n        setSendStatus('sending');\n        try {\n          await onSubmit(value);\n          onChange(initialComposeValue);\n        } catch (e) {\n          setNotificationContent({text: 'エラー発生'});\n          console.error(e);\n        } finally {\n          setSendStatus('waiting');\n        }\n      }\n    })();\n  }, [sendStatus, value, onChange, onSubmit, setNotificationContent]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.removeEventListener(\"keyup\", handleKeyup, false);\n      inputRef.current.addEventListener(\"keyup\", handleKeyup, false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputRef.current]);\n\n  const handleChangeComposeValue = (event: any) => {\n    onChange({\n      ...value,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const loading = sendStatus !== 'waiting';\n\n  return (\n    <StyledMain>\n      <StyledForm>\n        <div className=\"flex\">\n          <input\n            type=\"text\"\n            name=\"replyToTextId\"\n            placeholder=\"ツイートへの返信\"\n            value={value.replyToTextId}\n            onChange={handleChangeComposeValue}\n            disabled={loading}\n          />\n          <select\n            name=\"replyToUserId\"\n            value={value.replyToUserId}\n            onChange={handleChangeComposeValue}\n            disabled={loading}\n          >\n            <option value=\"\">-</option>\n            {userList.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name || `匿名(${user._user_id.slice(0, 2)})`}\n              </option>\n            ))}\n          </select>\n          <StyledTextCounter error={value.text.trim().length > 280}>\n            {`${value.text.trim().length}/280`}\n          </StyledTextCounter>\n        </div>\n        <div className=\"flex\">\n          <textarea\n            name=\"text\"\n            ref={inputRef}\n            placeholder=\"今なにしてる？\"\n            rows={4}\n            cols={50}\n            value={value.text}\n            onChange={e => onChange({...value, text: e.target.value})}\n            disabled={loading}\n          />\n          <FontAwesomeIcon\n            className={!loading ? 'clickable' : ''}\n            icon={faPaperPlane}\n            title=\"post\"\n            onClick={(e) => {e.preventDefault();!loading && setSendStatus('send');}}\n          />\n          <div>\n            {value.files?.map((file, index) => (\n              <div>\n                {file.name}\n                <FontAwesomeIcon\n                  className=\"clickable ml1\"\n                  icon={faTimesCircle}\n                  onClick={() => onChange({...value, files: value.files?.filter((_, i) => i !== index)})}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </StyledForm>\n      <FontAwesomeIcon className=\"clickable ml1\" icon={faCog} onClick={() => setSettingsOverlayOpen(true)}/>\n      <SettingsOverlay open={settingsOverlayOpen} onClose={() => setSettingsOverlayOpen(false)}/>\n      <DragDropOverlay onDropFile={handleDropFile}/>\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  height: ${composeHeight}px;\n  display: flex;\n`;\n\nconst StyledForm = styled.form`\n  width: 500px;\n`;\n\nconst StyledTextCounter = styled.div<{error: boolean}>`\n  color: ${(x) => x.error ? 'red': 'black'};\n`;\n","import React, { ChangeEvent, useContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport {Text, end_point, uploadImages, Like, httpToJson} from \"./Api\";\nimport {faHeart, faImages, faReply, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './index.css';\nimport styled from \"styled-components\";\nimport {\n  ComposeContext,\n  ImageMapContext,\n  LoadImagesContext,\n  SetPreviewImagesContext\n} from \"./MainPage\";\nimport {asyncConvertBase64} from \"./Util\";\nimport {colors} from \"./Constants\";\n\nexport const Log = ({\n  text,\n  onClose,\n}: {\n  text: Text;\n  onClose?: () => void\n}) => {\n  const [updateTimeTrigger, setUpdateTimeTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [replyDestination, setReplyDestination] = useState<{\n    text?: Text;\n    open: boolean;\n  }>({open: false});\n  const [likeCount, setLikeCount] = useState(0);\n\n  const { composeValue, setComposeValue } = useContext(ComposeContext);\n  const {imageMap, likeMap, userMap, setNotificationContent} = useContext(ImageMapContext);\n  const loadImages = useContext(LoadImagesContext);\n  const setPreviewImages = useContext(SetPreviewImagesContext);\n\n  const time = useMemo(() => {\n    const now = new Date();\n    const date = new Date(text._created_at);\n    const diff = (now.getTime() - date.getTime()) / 1_000;\n    let timeDiff;\n    if (diff < 60) {\n      timeDiff = `${Math.floor(diff)}秒前`;\n    } else if (diff / 60 < 60) {\n      timeDiff = `${Math.floor(diff / 60)}分前`;\n    } else if (diff / 60 / 60 < 24) {\n      timeDiff = `${Math.floor(diff / 60 / 60)}時間前`;\n    } else {\n      timeDiff = `${Math.floor(diff / 60 / 60 / 24)}日前`;\n    }\n    return {\n      timeDiff,\n      time: text._created_at,\n      localizedTime: date.toLocaleString(\"ja-JP\"),\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text, userMap, updateTimeTrigger]);\n\n  useEffect(() => {\n    setInterval(() => setUpdateTimeTrigger(prev => prev + 1), 5_000);\n  }, []);\n\n  useEffect(() => {\n    setLikeCount(likeMap[text.id]?.like_count || 0);\n  }, [likeMap, text.id]);\n\n  const getUser = (userId: string) => {\n    return userMap[userId]?.name || `匿名(${userId.slice(0, 2)})`;\n  };\n\n  const handleReplyTo = (x: { textId: string, userId: string }) => {\n    setComposeValue({...composeValue, replyToTextId: x.textId,  replyToUserId: x.userId})\n  };\n\n  const handleClickLike = async ({textId}: { textId: string }) => {\n    const like: Like | undefined = await fetch(`${end_point}/like/${textId}`)\n      .then(httpToJson).catch(err => {\n        if (err?.response?.status === 404) {\n          // 0件なので無視\n        } else {\n          throw err;\n        }\n      });\n\n    const nextLikeCount = (like?.like_count || 0) + 1;\n    const params = {\n      like_count: nextLikeCount\n    };\n    await fetch(`${end_point}/like/${textId}`, {\n      method: \"PUT\",\n      headers: {Authorization: \"LOVE\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json())\n      .then((_) => {\n        setLikeCount(nextLikeCount);\n      });\n  };\n\n  const handleChangeImageFile = async (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n\n    for(const file of Array.from(e.target.files)){\n      const base64 = await asyncConvertBase64(file);\n      if(!base64) {\n        console.error('画像が大きすぎます');\n        setNotificationContent({text: '画像が大きすぎます', type: \"error\"})\n        continue;\n      }\n      await uploadImages({base64s: [base64], bindTextId: text.id});\n    }\n\n    loadImages();\n  };\n\n  const handleClickReply = async () => {\n      if(!text.in_reply_to_text_id) return;\n\n      if(replyDestination.text){\n        setReplyDestination(prev => ({\n          ...prev,\n          open: true,\n        }))\n        return;\n      }\n      await fetch(`${end_point}/text/${text.in_reply_to_text_id}`)\n        .then((res) => (res.json()))\n        .then(x => {\n          setReplyDestination({\n            text: x,\n            open: true,\n          })\n        });\n    };\n\n  return (\n    <StyledMain child={!!onClose}>\n      <StyledMeta>\n        <div\n          title={userMap[text._user_id]?.description || text._user_id}>\n          {getUser(text._user_id)}\n        </div>\n        <div>\n          <time dateTime={time.time} title={time.localizedTime}>\n            {time.timeDiff}\n          </time>\n          {onClose ?\n            <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={onClose}/>\n            : null\n          }\n        </div>\n      </StyledMeta>\n      <div>\n        <StyledReplyTo onClick={handleClickReply} >\n          {text.in_reply_to_text_id ? `To: ${text.in_reply_to_text_id} `: ''}\n        </StyledReplyTo>\n        <div>\n          {text.in_reply_to_user_id ? `@${getUser(text.in_reply_to_user_id)} `: ''}\n        </div>\n        <StyledText>\n          {text.text}\n        </StyledText>\n      </div>\n      {imageMap[text.id]?.length ?\n        imageMap[text.id].map((image, index) => (\n          <div key={image.id}>\n            <StyledImg\n              className=\"clickable\"\n              src={image.base64}\n              alt={`${getUser(text._user_id)}さんが貼り付けた画像`}\n              title={`${getUser(image._user_id)}さんが貼り付けた画像`}\n              onClick={() => setPreviewImages({images: imageMap[text.id].map(x => x.base64), index})}\n            />\n          </div>\n        ))\n        : null\n      }\n      <StyledActions>\n        <FontAwesomeIcon\n          className=\"clickable\"\n          icon={faReply}\n          title=\"Reply\"\n          onClick={() => handleReplyTo({textId: text.id, userId: text._user_id})}\n        />\n        <div\n          className=\"clickable ml2\"\n          onClick={() => handleClickLike({textId: text.id})}\n        >\n          <FontAwesomeIcon\n            icon={faHeart}\n            title=\"Like\"\n          />\n          <span>{likeCount}</span>\n        </div>\n        <label htmlFor={`image_upload_${text.id}`}>\n          <FontAwesomeIcon\n            className=\"clickable ml2\"\n            icon={faImages}\n            title=\"Images\"\n          />\n          <input\n            id={`image_upload_${text.id}`}\n            type=\"file\"\n            accept=\"image/*\"\n            multiple\n            hidden\n            onChange={handleChangeImageFile}\n          />\n        </label>\n      </StyledActions>\n      {\n        replyDestination.open && replyDestination.text?\n          (\n            <StyledReplyDestinationText\n              x={onClose ? 0 : 8}\n              y={16}\n            >\n              <Log\n                text={replyDestination.text}\n                onClose={() => setReplyDestination(prev => ({...prev, open: false}))}\n              />\n            </StyledReplyDestinationText>\n          )\n          : null\n      }\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div<{child: boolean}>`\n  ${x => x.child ? \n  `border-top: 1px solid ${colors.border};` \n  : `border-bottom: 1px solid ${colors.border};`}\n  padding: 8px;\n`;\n\nconst StyledMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledReplyTo = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst StyledText = styled.div`\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  padding-top: 2px;\n`;\n\nconst StyledActions = styled.div`\n  display: flex;\n  margin-top: 8px;\n  color: ${colors.action};\n`;\n\nconst StyledImg = styled.img`\n  width: 100%;\n`;\n\nconst StyledReplyDestinationText = styled.div<{x: number, y: number}>`\n  margin-left: ${({x}) => x}px;\n  margin-top: ${({y}) => y}px;\n`;\n","import {end_point, httpToJson, Text} from \"./Api\";\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Log} from \"./Log\";\nimport styled from \"styled-components\";\nimport {composeHeight} from \"./Compose\";\nimport {PainValue} from \"./MainPage\";\nimport {eq} from \"./Util\";\nimport {colors} from \"./Constants\";\n\nconst titleHeaderHeight = 22;\n\nexport const Logs = ({\n  value,\n  onChangePain,\n  loadLogTrigger,\n} : {\n  value: PainValue,\n  onChangePain: (value: PainValue) => void,\n  loadLogTrigger?: number,\n}) => {\n  const [texts, setTexts] = useState<Text[]>([]);\n  const [editingPainValue, setEditingPainValue] = useState(value);\n  // Logs個別のトリガー\n  const [internalLoadLogTrigger, setInternalLoadLogTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [openTitle, setOpenTitle] = useState(false);\n\n  const titleHeight = (openTitle ? 300 : 0 ) + titleHeaderHeight;\n\n  const handleClickLoadMore = () => {\n    onChangePain({...value, limit: value.limit + 20});\n  };\n\n  const loadLog = () => setInternalLoadLogTrigger(p => p + 1);\n\n  const handleClickTitleHeader = () => {\n    setOpenTitle(prev => !prev);\n    if (!eq(editingPainValue, value)) onChangePain(editingPainValue);\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setEditingPainValue((prev) => ({\n      ...prev,\n      [event.target.name]: event.target.value,\n    }))\n  };\n\n  const handleChangeInt = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setEditingPainValue((prev) => ({\n      ...prev,\n      [event.target.name]: parseInt(event.target.value),\n    }))\n  };\n\n  useEffect(() => {\n    const id = setInterval(() => setInternalLoadLogTrigger(prev => prev + 1),\n      (editingPainValue.pollingIntervalTime || 1) * 1_000);\n\n    return () => clearInterval(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editingPainValue.pollingIntervalTime]);\n\n  useEffect(() => {\n    fetch(`${end_point}/text/all?${encodeURI(editingPainValue.query)}&$limit=${editingPainValue.limit}`)\n      .then(httpToJson)\n      .then(setTexts).catch(console.error);\n  },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [loadLogTrigger, internalLoadLogTrigger]);\n\n  useEffect(() => setEditingPainValue(value),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [value]);\n\n  return (\n    <StyledLogs>\n      <StyledLogsTitle\n        titleHeight={titleHeight}\n      >\n        <StyledTitleHeader\n          className=\"clickable\"\n          onClick={handleClickTitleHeader}\n        >\n          {value.name}\n        </StyledTitleHeader>\n        <StyledForm className=\"p2\">\n          <div>\n            <label htmlFor={`${value.name}_Logs_name`}>name</label>\n            <input\n              name=\"name\"\n              id={`${value.name}_Logs_name`}\n              type=\"text\"\n              value={editingPainValue.name}\n              onChange={handleChange}\n              onBlur={loadLog}\n            />\n          </div>\n          <div>\n            <label htmlFor={`${value.name}_Logs_query`}>query</label>\n            <textarea\n              name=\"query\"\n              id={`${value.name}_Logs_query`}\n              cols={30}\n              rows={5}\n              value={editingPainValue.query}\n              onChange={handleChange}\n              onBlur={loadLog}\n            />\n          </div>\n          <div>\n            <label htmlFor={`${value.name}_Logs_limit`}>limit</label>\n            <input\n              name=\"limit\"\n              id={`${value.name}_Logs_limit`}\n              type=\"number\"\n              value={editingPainValue.limit}\n              onChange={handleChangeInt}\n              onBlur={loadLog}\n            />\n          </div>\n          <div>\n            <label htmlFor={`${value.name}_Logs_pollingIntervalTime`}>polling interval time</label>\n            <input\n              name=\"pollingIntervalTime\"\n              id={`${value.name}_Logs_pollingIntervalTime`}\n              type=\"number\"\n              value={editingPainValue.pollingIntervalTime}\n              onChange={handleChangeInt}\n              onBlur={loadLog}\n            />\n          </div>\n        </StyledForm>\n      </StyledLogsTitle>\n      <StyledTexts titleHeight={titleHeight}>\n        {texts.map(text => (\n          <Log\n            key={text.id}\n            text={text}\n          />\n        ))}\n        <div className=\"clickable\" onClick={handleClickLoadMore}>load more</div>\n      </StyledTexts>\n    </StyledLogs>\n  );\n}\n\nconst margin = 8;\n\nconst StyledLogs = styled.div`\n  width: 320px;\n  margin: ${margin}px 0 ${margin}px ${margin}px;\n  border: 1px solid ${colors.border};\n`;\n\nconst StyledLogsTitle = styled.div<{titleHeight: number}>`\n  height: ${(x) => x.titleHeight}px;\n  overflow: hidden;\n  transition: all 300ms 0s ease;\n  border-bottom: 1px solid ${colors.border};\n`;\n\nconst StyledTitleHeader = styled.div`\n  height: ${titleHeaderHeight}px;\n`;\n\nconst StyledForm = styled.div`\n  & label {\n    display: block;\n    margin-top: 8px;\n  }\n`;\n\nconst StyledTexts = styled.div<{titleHeight: number}>`\n  // margin上下とborder1px上下\n  height: calc(100vh - ${(x) => composeHeight + x.titleHeight + (margin + 1) * 2}px);\n  overflow-y: auto;\n  ::-webkit-scrollbar{\n    width: 8px;\n  }\n  ::-webkit-scrollbar-track{\n    background: ${colors.background};\n    border: none;\n    // box-shadow: inset 0 0 2px #777; \n  }\n  ::-webkit-scrollbar-thumb{\n    background: ${colors.border};\n    box-shadow: none;\n  }\n`;\n","import styled from \"styled-components\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {zIndexes} from \"./Constants\";\n\nexport const PreviewImagesOverlay = ({open, onClose, images, index}: {open: boolean; onClose: () => void; images: string[], index: number}) => {\n  const [viewingIndex, setViewingIndex] = useState(index);\n  const [imageSize, setImageSize] = useState<{width: number, height: number} | undefined>();\n  const [keyup, setKeyup] = useState<string | undefined>();\n  const [offsetX, setOffsetX] = useState<number>(0);\n  const imgElementRef = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    setViewingIndex(index);\n  }, [index]);\n\n  useEffect(() => {\n    if (keyup === 'Escape') {\n      onClose();\n    } else if (keyup === 'ArrowLeft') {\n      setViewingIndex(prev => Math.max(prev - 1, 0));\n    } else if (keyup === 'ArrowRight') {\n      setViewingIndex(prev => Math.min(prev + 1, images.length - 1));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keyup, setViewingIndex]);\n\n  useEffect(() => {\n    const handleKeyup = (e: KeyboardEvent) => {\n      e.preventDefault();\n      setKeyup(e.key);\n    };\n    document.addEventListener('keyup', handleKeyup, false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const imageSrc = images[viewingIndex];\n\n  useEffect(() => {\n    if(imgElementRef.current && imgElementRef.current.complete ){\n      setImageSize({\n        width: imgElementRef.current.naturalWidth,\n        height: imgElementRef.current.naturalHeight,\n      });\n    } else {\n      setImageSize(undefined);\n    }\n  }, [imageSrc, imgElementRef.current?.complete]);\n\n  useEffect(() => {\n    const bodyElement = document.getElementsByTagName('body')[0];\n    bodyElement.style.overflow = open ? 'hidden' : 'initial';\n    if(open){\n      setOffsetX(window.pageXOffset);\n    }\n  }, [open]);\n\n  return (\n    <>\n      {open ?\n        <StyledMain left={offsetX}>\n          <StyledBackground onClick={() => onClose()} />\n          <StyledImageOverlay>\n            <img ref={imgElementRef} src={imageSrc} {...imageSize}  alt=\"画像\" />\n            {images.length > 0 &&\n              <StyledPoints>\n                {[...Array(images.length)].map((_, i) => (\n                  <StyledPoint key={i} current={i === viewingIndex} />\n                ))}\n              </StyledPoints>\n            }\n          </StyledImageOverlay>\n        </StyledMain>\n        : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{left: number}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n  left: ${(x) => x.left}px;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.previewImages};\n`;\n\nconst StyledPoints = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledPoint = styled.div<{current: boolean}>`\n  height: 30px;\n  width: 12px;\n  color: ${(x) => x.current ? 'black' : '#ccc'};\n  ::after {\n    content: '●';\n  }\n`;\n","import styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { zIndexes } from \"./Constants\";\n\nexport type NotificationContent = { text: string, type?: NotificationType };\n\ntype NotificationType = 'notification' | 'warning'  | 'error';\nconst NotificationTypeTable: Record<NotificationType, string> = {\n  notification : 'black',\n  warning: 'FFA500',\n  error: 'red',\n}\n\nconst notificationTypeMapping: (value?: NotificationType) => string = v => NotificationTypeTable[v || 'notification'];\n\ntype Props = { content?: NotificationContent };\n\nexport const NotificationBar = ({content}: Props) => {\n  const [notificationMessages, setNotificationMessages] = useState<({ id: string; content: NotificationContent })[]>([]);\n  const [counter, setCounter] = useState(Number.MIN_SAFE_INTEGER);\n\n  useEffect(() => {\n    if(!content) return;\n\n    const id = counter.toString();\n    setNotificationMessages(prev => [...prev, {...{content}, id}]);\n\n    setTimeout(() => {\n      setNotificationMessages(prev => prev.filter(x => x.id !== id));\n    }, 50_000);\n    setCounter(p => p + 1);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content]);\n\n  return (\n    <StyledMain2>\n      {notificationMessages.map((notificationMessage, index) => (\n        <StyledMain key={notificationMessage.id} type={notificationMessage.content?.type} >\n          {notificationMessage.content.text}\n        </StyledMain>\n      ))}\n    </StyledMain2>\n  );\n};\n\nconst StyledMain2 = styled.div`\n  position: absolute;\n  bottom: 50px;\n  left: 40px;\n`;\n\nconst StyledMain = styled.div<{type?: NotificationType}>`\n  z-index: ${zIndexes.notificationBar};\n  background: ${x => notificationTypeMapping(x.type)};\n  color: white;\n  border-radius: 10px;\n  margin-top: 16px;\n  padding: 8px 16px;\n  color: white;\n`;\n","import React, { createContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { Compose } from \"./Compose\";\nimport {end_point, User, Image, uploadImages, Return, Like, httpToJson} from \"./Api\";\nimport './index.css';\nimport styled from \"styled-components\";\nimport {Logs} from \"./Logs\";\nimport {PreviewImagesOverlay} from \"./PreviewImagesOverlay\";\nimport {NotificationBar, NotificationContent} from \"./NotificationBar\";\nimport {asyncConvertBase64} from \"./Util\";\nimport {localStorageKey} from \"./Constants\";\n\nexport type ComposeValue = { text: string, replyToTextId: string, replyToUserId: string; files?: File[]}\n\nexport const initialComposeValue: ComposeValue = {text: \"\", replyToTextId: \"\", replyToUserId: \"\"};\n\nexport const ComposeContext =\n  createContext<{ composeValue: ComposeValue, setComposeValue: (value: ComposeValue) => void }>(\n    {composeValue: initialComposeValue, setComposeValue: (_: ComposeValue) => {}}\n  );\n\n// TODO rename\nexport const ImageMapContext = createContext<{\n  imageMap: Record<string, Image[]>,\n  likeMap: Record<string, Like>,\n  userMap: Record<string, User>,\n  setNotificationContent: (value: NotificationContent) => void,\n}>({\n  imageMap: {},\n  likeMap: {},\n  userMap: {},\n  setNotificationContent: (_: NotificationContent) => {},\n});\n\nexport const LoadImagesContext = createContext<() => void>(() => {});\n\nexport const SetPreviewImagesContext = createContext<(params: {images: string[], index: number}) => void>(() => {});\n\nexport type PainValue = {\n  name: string;\n  query: string;\n  limit: number;\n  pollingIntervalTime: number;\n};\n\nconst initialPains = [\n  {\n    name: 'All',\n    query: \"$filter=_user_id ne 'd9ecf9245defb6b07cb86fe92a6fde9e735fc9f9'&$orderby=_created_at desc\",\n    limit: 20,\n    pollingIntervalTime: 20,\n  },\n  {\n    name: 'To me',\n    query: \"$filter=in_reply_to_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc\",\n    limit: 20,\n    pollingIntervalTime: 20,\n  },\n  {\n    name: 'Self',\n    query: \"$filter=_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc\",\n    limit: 20,\n    pollingIntervalTime: 20,\n  },\n];\n\nexport const MainPage = () => {\n  const [userList, setUserList] = useState<User[]>([]);\n  const [imageList, setImageList] = useState<Image[]>([]);\n  const [likeList, setLikeList] = useState<Like[]>([]);\n  const [composeValue, setComposeValue] = useState<ComposeValue>(initialComposeValue);\n  const [loadLogTrigger, setLoadLogTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [previewImages, setPreviewImages] = useState<{images: string[], index: number}>({images: [], index: 0});\n  const [openPreviewImagesOverlay, setOpenPreviewImagesOverlay] = useState(false);\n  const [notificationContent, setNotificationContent] = useState<NotificationContent>();\n  // TODO: localstorage?\n  const [pains, setPains] = useState<PainValue[]>([]);\n\n  const userMap: Record<string, User> = useMemo(() => userList.reduce((acc: any, cur: User) => ({\n    ...acc,\n    [cur._user_id]: acc[cur._user_id] || cur,\n  }), {}), [userList]);\n\n  const imageMap: Record<string, Image[]> = useMemo(() => imageList.reduce((acc: any, cur: Image) => ({\n    ...acc,\n    [cur.bind_text_id]: [...(acc[cur.bind_text_id] || []), cur],\n  }), {}), [imageList]);\n\n  const likeMap: Record<string, Like> = useMemo(() => likeList.reduce((acc: any, cur: Like) => ({\n    ...acc,\n    [cur.id]: cur,\n  }), {}), [likeList]);\n\n  const loadUser = () => {\n    fetch(`${end_point}/user/all?$orderby=_created_at desc`)\n      .then(httpToJson)\n      .then(setUserList);\n  };\n\n  const loadImages = async () => {\n    const loadImagesLimit = async (limit: number) => {\n      const newImageList: Image[] = await fetch(`${end_point}/image/all?$orderby=_created_at desc&$limit=${limit}`).then(httpToJson);\n\n      if(imageList.length ===0){\n        setImageList(newImageList);\n        return;\n      }\n\n      const newImageListIndex = newImageList.findIndex(newImage => newImage.id === imageList[0]?.id);\n      if(newImageListIndex !== -1){\n        setImageList(prev => [...newImageList.slice(0, newImageListIndex), ...prev]);\n        return;\n      }\n      await loadImagesLimit(limit + 100);\n    }\n    await loadImagesLimit(20);\n  };\n\n  const loadLikes = () => {\n    fetch(`${end_point}/like/all`)\n      .then(httpToJson)\n      .then(setLikeList);\n  };\n\n  const handleChangePain = (value: PainValue, index: number) => {\n    const sameNamePain = pains.find((pain, i) => pain.name === value.name && i !== index);\n    if(sameNamePain) {\n      setNotificationContent({text: \"同一のpain名は設定できません\", type: 'error'});\n      return;\n    }\n    setPains(prev => {\n      const newList = [...prev];\n      newList[index] = value;\n      return newList\n    })\n  };\n\n  const handleSubmit = async ({text, replyToUserId, replyToTextId, files}: ComposeValue) => {\n    const params = {\n      text,\n      ...(replyToUserId ? {in_reply_to_user_id: replyToUserId}: {}),\n      ...(replyToTextId ? {in_reply_to_text_id: replyToTextId}: {}),\n    };\n    const postTextRes: Return = await fetch(`${end_point}/text`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(params)\n    }).then(httpToJson);\n    if (files) {\n      for (const file of files) {\n        const base64 = await asyncConvertBase64(file);\n        if (!base64) {\n          console.error('画像が大きすぎます');\n          setNotificationContent({text: '画像が大きすぎます', type: \"error\"});\n          continue;\n        }\n        await uploadImages({base64s: [base64], bindTextId: postTextRes.id});\n      }\n      await loadImages();\n    }\n\n    setLoadLogTrigger(prev => prev+1);\n  };\n\n  useEffect(() => {\n    loadUser();\n    setInterval(loadUser, 60_000 * 10);//10分\n\n    loadImages();\n    setInterval(loadImages, 10_000);\n\n    loadLikes();\n    setInterval(loadLikes, 60_000);//1minute\n\n    const value = localStorage.getItem(localStorageKey.pains)\n    setPains(value ? JSON.parse(value) : initialPains);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if(previewImages.images.length){\n      setOpenPreviewImagesOverlay(true);\n    }\n  }, [previewImages]);\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey.pains, JSON.stringify(pains))\n  }, [pains]);\n\n  return (\n    <StyledMain>\n      <SetPreviewImagesContext.Provider value={setPreviewImages}>\n        <LoadImagesContext.Provider value={loadImages} >\n          <ImageMapContext.Provider value={{imageMap, likeMap, userMap, setNotificationContent }}>\n            <ComposeContext.Provider value={{composeValue, setComposeValue}}>\n              <Compose value={composeValue} onChange={setComposeValue} onSubmit={handleSubmit} userList={userList} />\n              <div className=\"flex\">\n                {pains.map((list, index) => (\n                  <Logs\n                    key={list.name}\n                    value={list}\n                    loadLogTrigger={loadLogTrigger}\n                    onChangePain={value => handleChangePain(value, index)}\n                  />\n                ))}\n              </div>\n            </ComposeContext.Provider>\n          </ImageMapContext.Provider>\n        </LoadImagesContext.Provider>\n      </SetPreviewImagesContext.Provider>\n      <PreviewImagesOverlay\n        open={openPreviewImagesOverlay}\n        onClose={() => setOpenPreviewImagesOverlay(false)}\n        images={previewImages.images}\n        index={previewImages.index}\n      />\n      <NotificationBar content={notificationContent} />\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  ::-webkit-scrollbar {\n    display:none;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { MainPage } from \"./MainPage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}