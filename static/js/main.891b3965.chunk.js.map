{"version":3,"sources":["reportWebVitals.ts","DragDropOverlay.tsx","Constants.ts","Api.ts","SettingsOverlay.tsx","Util.ts","Compose.tsx","Log.tsx","Logs.tsx","PreviewImagesOverlay.tsx","NotificationBar.tsx","MainPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DragDropOverlay","onDropFiles","useState","drag","setDrag","files","setFiles","useEffect","undefined","document","addEventListener","ev","preventDefault","dataTransfer","items","Array","from","i","length","console","log","name","fromElement","StyledMain","enabled","styled","div","x","zIndexes","appName","localStorageKey","myUser","pains","colors","end_point","imageMaxSize","uploadImages","a","base64s","bindTextId","fileUploader","base64","Error","params","bind_text_id","fetch","method","headers","Authorization","body","JSON","stringify","res","json","Promise","all","map","httpToJson","ok","text","SettingsOverlay","open","onClose","description","state","update","userMap","useContext","ImageMapContext","apply","value","Object","entries","id","dummyMyUser","_user_id","myUserValue","e","key","localStorageMyUser","localStorage","getItem","parse","setItem","StyledBackground","StyledImageOverlay","StyledHeaderContainer","className","icon","faTimesCircle","onClick","StyledForm","htmlFor","type","onChange","prev","target","cols","rows","asyncConvertBase64","file","result","r","fr","FileReader","onload","readAsDataURL","error","eq","b","is","aEntries","bEntries","every","aKey","aValue","Compose","onSubmit","userList","sendStatus","setSendStatus","settingsOverlayOpen","setSettingsOverlayOpen","setNotificationContent","inputRef","useRef","handleKeyup","useCallback","ctrlKey","handleDropFiles","trim","initialComposeValue","current","removeEventListener","handleChangeComposeValue","event","loading","placeholder","replyToTextId","disabled","replyToUserId","user","slice","StyledTextCounter","ref","faPaperPlane","title","index","Math","floor","size","filter","_","faCog","form","Log","Number","MIN_SAFE_INTEGER","updateTimeTrigger","setUpdateTimeTrigger","replyDestination","setReplyDestination","likeCount","setLikeCount","ComposeContext","composeValue","setComposeValue","imageMap","likeMap","loadImages","LoadImagesContext","setPreviewImages","SetPreviewImagesContext","time","useMemo","now","Date","date","_created_at","diff","getTime","timeDiff","localizedTime","toLocaleString","setInterval","clearInterval","like_count","getUser","userId","handleClickLike","textId","catch","err","response","status","like","nextLikeCount","handleChangeImageFile","handleClickReply","in_reply_to_text_id","child","StyledMeta","dateTime","StyledReplyTo","in_reply_to_user_id","StyledText","image","StyledImg","src","alt","images","StyledActions","faReply","faHeart","faImages","accept","multiple","hidden","StyledReplyDestinationText","y","img","Logs","onChangePain","loadLogTrigger","texts","setTexts","editingPainValue","setEditingPainValue","internalLoadLogTrigger","setInternalLoadLogTrigger","openTitle","setOpenTitle","titleHeight","loadLog","p","handleChange","handleChangeInt","parseInt","pollingIntervalTime","q","encodeURI","query","replaceAll","limit","StyledLogs","StyledLogsTitle","StyledTitleHeader","onBlur","StyledTexts","PreviewImagesOverlay","viewingIndex","setViewingIndex","imageSize","setImageSize","keyup","setKeyup","offsetX","setOffsetX","imgElementRef","max","min","imageSrc","complete","width","naturalWidth","height","naturalHeight","getElementsByTagName","style","overflow","window","pageXOffset","left","StyledPoints","StyledPoint","NotificationTypeTable","notification","warning","NotificationBar","content","notificationMessages","setNotificationMessages","counter","setCounter","toString","setTimeout","StyledMain2","notificationMessage","v","createContext","initialPains","MainPage","setUserList","imageList","setImageList","likeList","setLikeList","setLoadLogTrigger","previewImages","openPreviewImagesOverlay","setOpenPreviewImagesOverlay","notificationContent","setPains","reduce","acc","cur","loadUser","loadImagesLimit","newImageList","newImageListIndex","findIndex","newImage","loadLikes","handleSubmit","postTextRes","Provider","list","find","pain","newList","handleChangePain","ReactDOM","render","StrictMode","exact","path","getElementById"],"mappings":"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","file":"static/js/main.891b3965.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from \"styled-components\";\nimport {useEffect, useState} from \"react\";\n\nexport const DragDropOverlay = ({onDropFiles}:{onDropFiles: (files: File[]) => void}) => {\n  const [drag, setDrag] = useState(false);\n  // addEventListenerを都度貼り替えるのが面倒なため、state経由でuseEffectを発火させ、onDropFileさせる\n  const [files, setFiles] = useState<File[] | undefined>();\n\n  useEffect(() => {\n    if(files){\n      onDropFiles(files);\n      setFiles(undefined);\n    }\n  }, [files, onDropFiles]);\n\n  useEffect(() => {\n    const handleDrop =  (ev: any) => {\n      setDrag(false);\n      ev.preventDefault();\n\n      if (ev.dataTransfer.items) {\n        setFiles(Array.from(ev.dataTransfer.files));\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + ev.dataTransfer.files[i].name);\n        }\n      }\n    };\n\n    const dragEnterHandler = (ev: any) =>  {\n      ev.preventDefault();\n      setDrag(true);\n    };\n\n    const dragOverHandler = (ev: any) =>  {\n      console.log('dragover');\n      // Dropしたときにブラウザで画像を開いてしまうため、これを入れる\n      ev.preventDefault();\n    }\n\n    const handleDragLeave = (ev: any) =>  {\n      ev.preventDefault();\n      console.log('dragleave', ev);\n      if (!ev.fromElement){\n        console.log('dragleave out of browser');\n        // ドラッグがブラウザの範囲外に行ったときに発動\n        setDrag(false);\n      }\n    };\n\n    document.addEventListener('drop', handleDrop);\n    document.addEventListener('dragenter', dragEnterHandler);\n    document.addEventListener('dragover', dragOverHandler);\n    document.addEventListener('dragleave', handleDragLeave);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <StyledMain enabled={drag} />\n  );\n};\n\nconst styledDragDropOverlayMargin = 16;\nconst styledDragDropOverlayBorderSize = 4;\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  width: calc(100vw - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  height: calc(100vh - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  top: 0px;\n  margin: ${styledDragDropOverlayMargin}px;\n  border-radius: 32px;\n  background: gray;\n  border: ${styledDragDropOverlayBorderSize}px dashed black;\n  opacity: 0.5;\n  display:   ${(x) =>  x.enabled ? 'block' : 'none'};\n`;\n","export const zIndexes = {\n  dragDrop: 100,\n  previewImages: 300,\n  previewImagesBackground: 200,\n  settings: 250,\n  notificationBar: 500,\n};\n\nconst appName = 'SNSClientForEngineersAndProgrammers';\n\nexport const localStorageKey = {\n  myUser: `${appName}_myUser`,\n  pains: `${appName}_pains`,\n};\n\nexport const colors = {\n  border: '#ccc',\n  background: '#fff',\n  action: '#555',\n};\n","export const end_point = \"https://versatileapi.herokuapp.com/api\";\n\ntype Base = {\n  id: string;\n  _created_at: string;\n  _updated_at: string;\n  _user_id: string;\n}\n\nexport type Text = Base & {\n  text: string;\n  in_reply_to_user_id?: string; //返信対象のUserId\n  in_reply_to_text_id?: string; //返信対象のTextId\n}\n\nexport type Image = Base & {\n  base64: string;\n  bind_text_id: string;\n}\n\nexport type User = Base & {\n  description: string;\n  name: string;\n}\n\nexport type Like = {\n  id: string;\n  _updated_at: string;\n  like_count: number;\n}\n\nexport type Return = {\n  id: string;\n}\n\nexport const imageMaxSize = 100_000;\n\nexport const uploadImages = async ({base64s, bindTextId}:{base64s: string[], bindTextId: string}) => {\n  const fileUploader = async (base64: string) => {\n\n    if (base64.length > imageMaxSize) throw new Error();\n    const params = {\n      base64,\n      bind_text_id: bindTextId,\n    }\n    await fetch(`${end_point}/image`, {\n      method: \"POST\",\n      headers: {Authorization: \"evolution\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json()).then(x => console.log(x));\n  };\n\n  await Promise.all(Array.from(base64s).map(fileUploader));\n};\n\nexport const httpToJson = (res: Response) => res.ok ? res.json() : res.text();","import styled from \"styled-components\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {colors, localStorageKey, zIndexes} from \"./Constants\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {end_point, httpToJson, Return, User} from \"./Api\";\nimport {ImageMapContext} from \"./MainPage\";\n\ntype State = {\n  name: string,\n  description: string,\n};\n\nexport const SettingsOverlay = ({open, onClose}: {open: boolean; onClose: () => void}) => {\n  const [state, update] = useState<State>({\n    name: '',\n    description: '',\n  });\n\n  const { userMap } = useContext(ImageMapContext);\n\n  const apply = async (value: State) => {\n    return await fetch(`${end_point}/user/create_user`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(value)\n    }).then(httpToJson);\n  };\n\n  const handleClose = () => {\n    apply(state);\n    onClose();\n  };\n\n  useEffect(() => {\n    (async () => {\n      // ユーザー情報のサーバーからの取得（localStorageから取得できなかったときに発動）\n      if(!Object.entries(userMap).length) return;\n\n      // localStorageから取得できてれば、ここを通らない。\n      if(state.name || state.description) return;\n\n      const res: Return = await apply({name: '', description: ''});\n      const dummyMyUser: User = await fetch(`${end_point}/user/${res.id}`, {\n        headers: {Authorization: \"HelloWorld\"},\n      }).then(httpToJson);\n\n      const myUser = userMap[dummyMyUser._user_id];\n      if(!myUser) return;\n\n      const myUserValue = {\n        name: myUser.name,\n        description: myUser.description,\n      };\n      update(myUserValue);\n      await apply(myUserValue);\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userMap]);\n\n  useEffect(() => {\n    const handleKeyup = (e: KeyboardEvent) => {\n      e.preventDefault();\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    document.addEventListener('keyup', handleKeyup, false);\n\n    // ユーザー初期値\n    const localStorageMyUser = localStorage.getItem(localStorageKey.myUser);\n    if (localStorageMyUser) {\n      update(JSON.parse(localStorageMyUser));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if(!state.name) return;\n    if(!state.description) return;\n\n    localStorage.setItem(localStorageKey.myUser, JSON.stringify(state));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n\n  return (\n    <>\n      {open ?\n        <StyledMain enabled={open} >\n          <StyledBackground />\n          <StyledImageOverlay>\n            <StyledHeaderContainer>\n              <div>Settings</div>\n              <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={handleClose}/>\n            </StyledHeaderContainer>\n            <StyledForm>\n              <div>\n                <label htmlFor=\"SettingsOverlay_name\">name</label>\n                <input\n                  name=\"name\"\n                  id=\"SettingsOverlay_name\"\n                  type=\"text\"\n                  value={state.name}\n                  onChange={e => {\n                    update(prev => ({...prev, name: e.target.value}));\n                  }}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"SettingsOverlay_description\">description</label>\n                <textarea\n                  name=\"description\"\n                  id=\"SettingsOverlay_description\"\n                  cols={30}\n                  rows={5}\n                  value={state.description}\n                  onChange={e => {\n                    update(prev => ({...prev, description: e.target.value}));\n                  }}\n                />\n              </div>\n            </StyledForm>\n          </StyledImageOverlay>\n        </StyledMain> : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.settings};\n  background: ${colors.background};\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nconst StyledHeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst StyledForm = styled.div`\n  & label {\n    display: block;\n    margin-top: 8px;\n  }\n`;\n","import {imageMaxSize} from \"./Api\";\n\nexport const asyncConvertBase64 = async (file: File) => {\n  const result = new Promise((r) => {\n    const fr = new FileReader();\n    fr.onload = (e) => {\n      r(e.target?.result);\n    };\n    fr.readAsDataURL(file);\n  });\n  const base64 = (await result) as any as string;\n  if (base64.length > imageMaxSize) {\n    console.error(`base64 size is ${base64.length}`);\n    return null\n  }\n  return base64;\n}\n\nexport const eq = (a: any, b: any): boolean => {\n  if (Object.is(a, b)) return true;\n  if (typeof a !== 'object') return false;\n  if (typeof b !== 'object') return false;\n  const aEntries = Object.entries(a);\n  const bEntries = Object.entries(b);\n  if (aEntries.length !== bEntries.length) return false;\n  return aEntries.every(([aKey, aValue]) => eq(aValue, b[aKey]));\n};\n","import React, {useCallback, useContext, useEffect, useRef, useState} from \"react\";\nimport { User } from \"./Api\";\nimport {ComposeValue, ImageMapContext, initialComposeValue} from \"./MainPage\";\nimport {faCog, faPaperPlane, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { DragDropOverlay } from \"./DragDropOverlay\";\nimport {SettingsOverlay} from \"./SettingsOverlay\";\nimport {asyncConvertBase64} from \"./Util\";\n\nexport const composeHeight = 100;\n\nexport const Compose = ({\n  value,\n  onChange,\n  onSubmit,\n  userList\n}: {\n  value: ComposeValue,\n  onChange: (value: ComposeValue) => void,\n  onSubmit: (value: ComposeValue) => void;\n  userList: User[]\n}) => {\n  const [sendStatus, setSendStatus] = useState<'waiting' | 'send' | 'sending'>('waiting');\n  const [settingsOverlayOpen, setSettingsOverlayOpen] = useState(false);\n\n  const { setNotificationContent } =  useContext(ImageMapContext);\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleKeyup = useCallback((e: KeyboardEvent) => {\n    // Ctrl + Enterで送信\n    if (e.ctrlKey && e.key === 'Enter' && sendStatus === 'waiting') {\n      // ここで送信処理はせず、sendフラグの変更をuseEffectで察知させて、送ることで、古いデータを送らないようにする\n      setSendStatus('send');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDropFiles = async (files: File[]) => {\n    await Promise.all(files.map(async (file) => {\n      const base64 = await asyncConvertBase64(file);\n      if (!base64) {\n        console.error('画像が大きすぎます');\n        setNotificationContent({text: '画像が大きすぎます', type: \"error\"});\n      }\n    }));\n    onChange({...value, files: [...(value.files || []), ...files]});\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (sendStatus === 'send' && value.text.trim()) {\n        // 他と競合して、同時に発火するのを防ぐため、一番先に実行されたものはステータスを変更しておく。\n        setSendStatus('sending');\n        try {\n          await onSubmit(value);\n          onChange(initialComposeValue);\n        } catch (e) {\n          setNotificationContent({text: 'エラー発生'});\n          console.error(e);\n        } finally {\n          setSendStatus('waiting');\n        }\n      }\n    })();\n  }, [sendStatus, value, onChange, onSubmit, setNotificationContent]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.removeEventListener(\"keyup\", handleKeyup, false);\n      inputRef.current.addEventListener(\"keyup\", handleKeyup, false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputRef.current]);\n\n  const handleChangeComposeValue = (event: any) => {\n    onChange({\n      ...value,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const loading = sendStatus !== 'waiting';\n\n  return (\n    <StyledMain>\n      <StyledForm>\n        <div className=\"flex\">\n          <input\n            type=\"text\"\n            name=\"replyToTextId\"\n            placeholder=\"ツイートへの返信\"\n            value={value.replyToTextId}\n            onChange={handleChangeComposeValue}\n            disabled={loading}\n          />\n          <select\n            name=\"replyToUserId\"\n            value={value.replyToUserId}\n            onChange={handleChangeComposeValue}\n            disabled={loading}\n          >\n            <option value=\"\">-</option>\n            {userList.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name || `匿名(${user._user_id.slice(0, 2)})`}\n              </option>\n            ))}\n          </select>\n          <StyledTextCounter error={value.text.trim().length > 280}>\n            {`${value.text.trim().length}/280`}\n          </StyledTextCounter>\n        </div>\n        <div className=\"flex\">\n          <textarea\n            name=\"text\"\n            ref={inputRef}\n            placeholder=\"今なにしてる？\"\n            rows={4}\n            cols={50}\n            value={value.text}\n            onChange={e => onChange({...value, text: e.target.value})}\n            disabled={loading}\n          />\n          <FontAwesomeIcon\n            className={!loading ? 'clickable' : ''}\n            icon={faPaperPlane}\n            title=\"post\"\n            onClick={(e) => {e.preventDefault();!loading && setSendStatus('send');}}\n          />\n          <div>\n            {value.files?.map((file, index) => (\n              <div key={file.name}>\n                {`${file.name}(${Math.floor(file.size / 1024)}kb)`}\n                <FontAwesomeIcon\n                  className=\"clickable ml1\"\n                  icon={faTimesCircle}\n                  onClick={() => onChange({...value, files: value.files?.filter((_, i) => i !== index)})}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </StyledForm>\n      <FontAwesomeIcon className=\"clickable ml1\" icon={faCog} onClick={() => setSettingsOverlayOpen(true)}/>\n      <SettingsOverlay open={settingsOverlayOpen} onClose={() => setSettingsOverlayOpen(false)}/>\n      <DragDropOverlay onDropFiles={handleDropFiles}/>\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  height: ${composeHeight}px;\n  display: flex;\n`;\n\nconst StyledForm = styled.form`\n  width: 500px;\n`;\n\nconst StyledTextCounter = styled.div<{error: boolean}>`\n  color: ${(x) => x.error ? 'red': 'black'};\n`;\n","import React, { ChangeEvent, useContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport {Text, end_point, uploadImages, Like, httpToJson} from \"./Api\";\nimport {faHeart, faImages, faReply, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './index.css';\nimport styled from \"styled-components\";\nimport {\n  ComposeContext,\n  ImageMapContext,\n  LoadImagesContext,\n  SetPreviewImagesContext\n} from \"./MainPage\";\nimport {asyncConvertBase64} from \"./Util\";\nimport {colors} from \"./Constants\";\n\nexport const Log = ({\n  text,\n  onClose,\n}: {\n  text: Text;\n  onClose?: () => void\n}) => {\n  const [updateTimeTrigger, setUpdateTimeTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [replyDestination, setReplyDestination] = useState<{\n    text?: Text;\n    open: boolean;\n  }>({open: false});\n  const [likeCount, setLikeCount] = useState(0);\n\n  const { composeValue, setComposeValue } = useContext(ComposeContext);\n  const {imageMap, likeMap, userMap, setNotificationContent} = useContext(ImageMapContext);\n  const loadImages = useContext(LoadImagesContext);\n  const setPreviewImages = useContext(SetPreviewImagesContext);\n\n  const time = useMemo(() => {\n    const now = new Date();\n    const date = new Date(text._created_at);\n    const diff = (now.getTime() - date.getTime()) / 1_000;\n    let timeDiff;\n    if (diff < 60) {\n      timeDiff = `${Math.floor(diff)}秒前`;\n    } else if (diff / 60 < 60) {\n      timeDiff = `${Math.floor(diff / 60)}分前`;\n    } else if (diff / 60 / 60 < 24) {\n      timeDiff = `${Math.floor(diff / 60 / 60)}時間前`;\n    } else {\n      timeDiff = `${Math.floor(diff / 60 / 60 / 24)}日前`;\n    }\n    return {\n      timeDiff,\n      time: text._created_at,\n      localizedTime: date.toLocaleString(\"ja-JP\"),\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text, userMap, updateTimeTrigger]);\n\n  useEffect(() => {\n    const id = setInterval(() => setUpdateTimeTrigger(prev => prev + 1), 5_000);\n\n    return () => clearInterval(id);\n  }, []);\n\n  useEffect(() => {\n    setLikeCount(likeMap[text.id]?.like_count || 0);\n  }, [likeMap, text.id]);\n\n  const getUser = (userId: string) => {\n    return userMap[userId]?.name || `匿名(${userId.slice(0, 2)})`;\n  };\n\n  const handleReplyTo = (x: { textId: string, userId: string }) => {\n    setComposeValue({...composeValue, replyToTextId: x.textId,  replyToUserId: x.userId})\n  };\n\n  const handleClickLike = async ({textId}: { textId: string }) => {\n    const like: Like | undefined = await fetch(`${end_point}/like/${textId}`)\n      .then(httpToJson).catch(err => {\n        if (err?.response?.status === 404) {\n          // 0件なので無視\n        } else {\n          throw err;\n        }\n      });\n\n    const nextLikeCount = (like?.like_count || 0) + 1;\n    const params = {\n      like_count: nextLikeCount\n    };\n    await fetch(`${end_point}/like/${textId}`, {\n      method: \"PUT\",\n      headers: {Authorization: \"LOVE\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json())\n      .then((_) => {\n        setLikeCount(nextLikeCount);\n      });\n  };\n\n  const handleChangeImageFile = async (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n\n    for(const file of Array.from(e.target.files)){\n      const base64 = await asyncConvertBase64(file);\n      if(!base64) {\n        console.error('画像が大きすぎます');\n        setNotificationContent({text: '画像が大きすぎます', type: \"error\"})\n        continue;\n      }\n      await uploadImages({base64s: [base64], bindTextId: text.id});\n    }\n\n    loadImages();\n  };\n\n  const handleClickReply = async () => {\n      if(!text.in_reply_to_text_id) return;\n\n      if(replyDestination.text){\n        setReplyDestination(prev => ({\n          ...prev,\n          open: true,\n        }))\n        return;\n      }\n      await fetch(`${end_point}/text/${text.in_reply_to_text_id}`)\n        .then((res) => (res.json()))\n        .then(x => {\n          setReplyDestination({\n            text: x,\n            open: true,\n          })\n        });\n    };\n\n  return (\n    <StyledMain child={!!onClose}>\n      <StyledMeta>\n        <div\n          title={userMap[text._user_id]?.description || text._user_id}>\n          {getUser(text._user_id)}\n        </div>\n        <div>\n          <time dateTime={time.time} title={time.localizedTime}>\n            {time.timeDiff}\n          </time>\n          {onClose ?\n            <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={onClose}/>\n            : null\n          }\n        </div>\n      </StyledMeta>\n      <div>\n        <StyledReplyTo onClick={handleClickReply} >\n          {text.in_reply_to_text_id ? `To: ${text.in_reply_to_text_id} `: ''}\n        </StyledReplyTo>\n        <div>\n          {text.in_reply_to_user_id ? `@${getUser(text.in_reply_to_user_id)} `: ''}\n        </div>\n        <StyledText>\n          {text.text}\n        </StyledText>\n      </div>\n      {imageMap[text.id]?.length ?\n        imageMap[text.id].map((image, index) => (\n          <div key={image.id}>\n            <StyledImg\n              className=\"clickable\"\n              src={image.base64}\n              alt={`${getUser(text._user_id)}さんが貼り付けた画像`}\n              title={`${getUser(image._user_id)}さんが貼り付けた画像`}\n              onClick={() => setPreviewImages({images: imageMap[text.id].map(x => x.base64), index})}\n            />\n          </div>\n        ))\n        : null\n      }\n      <StyledActions>\n        <FontAwesomeIcon\n          className=\"clickable\"\n          icon={faReply}\n          title=\"Reply\"\n          onClick={() => handleReplyTo({textId: text.id, userId: text._user_id})}\n        />\n        <div\n          className=\"clickable ml2\"\n          onClick={() => handleClickLike({textId: text.id})}\n        >\n          <FontAwesomeIcon\n            icon={faHeart}\n            title=\"Like\"\n          />\n          <span>{likeCount}</span>\n        </div>\n        <label htmlFor={`image_upload_${text.id}`}>\n          <FontAwesomeIcon\n            className=\"clickable ml2\"\n            icon={faImages}\n            title=\"Images\"\n          />\n          <input\n            id={`image_upload_${text.id}`}\n            type=\"file\"\n            accept=\"image/*\"\n            multiple\n            hidden\n            onChange={handleChangeImageFile}\n          />\n        </label>\n      </StyledActions>\n      {\n        replyDestination.open && replyDestination.text?\n          (\n            <StyledReplyDestinationText\n              x={onClose ? 0 : 8}\n              y={16}\n            >\n              <Log\n                text={replyDestination.text}\n                onClose={() => setReplyDestination(prev => ({...prev, open: false}))}\n              />\n            </StyledReplyDestinationText>\n          )\n          : null\n      }\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div<{child: boolean}>`\n  ${x => x.child ? \n  `border-top: 1px solid ${colors.border};` \n  : `border-bottom: 1px solid ${colors.border};`}\n  padding: 8px;\n`;\n\nconst StyledMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledReplyTo = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst StyledText = styled.div`\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  padding-top: 2px;\n`;\n\nconst StyledActions = styled.div`\n  display: flex;\n  margin-top: 8px;\n  color: ${colors.action};\n`;\n\nconst StyledImg = styled.img`\n  width: 100%;\n`;\n\nconst StyledReplyDestinationText = styled.div<{x: number, y: number}>`\n  margin-left: ${({x}) => x}px;\n  margin-top: ${({y}) => y}px;\n`;\n","import {end_point, httpToJson, Text} from \"./Api\";\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Log} from \"./Log\";\nimport styled from \"styled-components\";\nimport {composeHeight} from \"./Compose\";\nimport {PainValue} from \"./MainPage\";\nimport {eq} from \"./Util\";\nimport {colors} from \"./Constants\";\n\nconst titleHeaderHeight = 22;\n\nexport const Logs = ({\n  value,\n  onChangePain,\n  loadLogTrigger,\n} : {\n  value: PainValue,\n  onChangePain: (value: PainValue) => void,\n  loadLogTrigger?: number,\n}) => {\n  const [texts, setTexts] = useState<Text[]>([]);\n  const [editingPainValue, setEditingPainValue] = useState(value);\n  // Logs個別のトリガー\n  const [internalLoadLogTrigger, setInternalLoadLogTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [openTitle, setOpenTitle] = useState(false);\n\n  const titleHeight = (openTitle ? 300 : 0 ) + titleHeaderHeight;\n\n  const handleClickLoadMore = () => {\n    onChangePain({...value, limit: value.limit + 20});\n  };\n\n  const loadLog = () => setInternalLoadLogTrigger(p => p + 1);\n\n  const handleClickTitleHeader = () => {\n    setOpenTitle(prev => !prev);\n    if (!eq(editingPainValue, value)) onChangePain(editingPainValue);\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setEditingPainValue((prev) => ({\n      ...prev,\n      [event.target.name]: event.target.value,\n    }))\n  };\n\n  const handleChangeInt = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setEditingPainValue((prev) => ({\n      ...prev,\n      [event.target.name]: parseInt(event.target.value),\n    }))\n  };\n\n  useEffect(() => {\n    const id = setInterval(() => setInternalLoadLogTrigger(prev => prev + 1),\n      (editingPainValue.pollingIntervalTime || 1) * 1_000);\n\n    return () => clearInterval(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editingPainValue.pollingIntervalTime]);\n\n  useEffect(() => {\n    const q = encodeURI(editingPainValue.query.trim().replaceAll('\\n', ''));\n    fetch(`${end_point}/text/all?${q}&$limit=${editingPainValue.limit}`)\n      .then(httpToJson)\n      .then(setTexts).catch(console.error);\n  },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [loadLogTrigger, internalLoadLogTrigger]);\n\n  useEffect(() => setEditingPainValue(value),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [value]);\n\n  return (\n    <StyledLogs>\n      <StyledLogsTitle\n        titleHeight={titleHeight}\n      >\n        <StyledTitleHeader\n          className=\"clickable\"\n          onClick={handleClickTitleHeader}\n        >\n          {value.name}\n        </StyledTitleHeader>\n        <StyledForm className=\"p2\">\n          <div>\n            <label htmlFor={`${value.name}_Logs_name`}>name</label>\n            <input\n              name=\"name\"\n              id={`${value.name}_Logs_name`}\n              type=\"text\"\n              value={editingPainValue.name}\n              onChange={handleChange}\n              onBlur={loadLog}\n            />\n          </div>\n          <div>\n            <label htmlFor={`${value.name}_Logs_query`}>query</label>\n            <textarea\n              name=\"query\"\n              id={`${value.name}_Logs_query`}\n              cols={30}\n              rows={5}\n              value={editingPainValue.query}\n              onChange={handleChange}\n              onBlur={loadLog}\n            />\n          </div>\n          <div>\n            <label htmlFor={`${value.name}_Logs_limit`}>limit</label>\n            <input\n              name=\"limit\"\n              id={`${value.name}_Logs_limit`}\n              type=\"number\"\n              value={editingPainValue.limit}\n              onChange={handleChangeInt}\n              onBlur={loadLog}\n            />\n          </div>\n          <div>\n            <label htmlFor={`${value.name}_Logs_pollingIntervalTime`}>polling interval time</label>\n            <input\n              name=\"pollingIntervalTime\"\n              id={`${value.name}_Logs_pollingIntervalTime`}\n              type=\"number\"\n              value={editingPainValue.pollingIntervalTime}\n              onChange={handleChangeInt}\n              onBlur={loadLog}\n            />\n          </div>\n        </StyledForm>\n      </StyledLogsTitle>\n      <StyledTexts titleHeight={titleHeight}>\n        {texts.map(text => (\n          <Log\n            key={text.id}\n            text={text}\n          />\n        ))}\n        <div className=\"clickable\" onClick={handleClickLoadMore}>load more</div>\n      </StyledTexts>\n    </StyledLogs>\n  );\n}\n\nconst margin = 8;\n\nconst StyledLogs = styled.div`\n  width: 320px;\n  margin: ${margin}px 0 ${margin}px ${margin}px;\n  border: 1px solid ${colors.border};\n`;\n\nconst StyledLogsTitle = styled.div<{titleHeight: number}>`\n  height: ${(x) => x.titleHeight}px;\n  overflow: hidden;\n  transition: all 300ms 0s ease;\n  border-bottom: 1px solid ${colors.border};\n`;\n\nconst StyledTitleHeader = styled.div`\n  height: ${titleHeaderHeight}px;\n`;\n\nconst StyledForm = styled.div`\n  & label {\n    display: block;\n    margin-top: 8px;\n  }\n`;\n\nconst StyledTexts = styled.div<{titleHeight: number}>`\n  // margin上下とborder1px上下\n  height: calc(100vh - ${(x) => composeHeight + x.titleHeight + (margin + 1) * 2}px);\n  overflow-y: auto;\n  ::-webkit-scrollbar{\n    width: 8px;\n  }\n  ::-webkit-scrollbar-track{\n    background: ${colors.background};\n    border: none;\n    // box-shadow: inset 0 0 2px #777; \n  }\n  ::-webkit-scrollbar-thumb{\n    background: ${colors.border};\n    box-shadow: none;\n  }\n`;\n","import styled from \"styled-components\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {zIndexes} from \"./Constants\";\n\nexport const PreviewImagesOverlay = ({open, onClose, images, index}: {open: boolean; onClose: () => void; images: string[], index: number}) => {\n  const [viewingIndex, setViewingIndex] = useState(index);\n  const [imageSize, setImageSize] = useState<{width: number, height: number} | undefined>();\n  const [keyup, setKeyup] = useState<string | undefined>();\n  const [offsetX, setOffsetX] = useState<number>(0);\n  const imgElementRef = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    setViewingIndex(index);\n  }, [index]);\n\n  useEffect(() => {\n    if (keyup === 'Escape') {\n      onClose();\n    } else if (keyup === 'ArrowLeft') {\n      setViewingIndex(prev => Math.max(prev - 1, 0));\n    } else if (keyup === 'ArrowRight') {\n      setViewingIndex(prev => Math.min(prev + 1, images.length - 1));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keyup, setViewingIndex]);\n\n  useEffect(() => {\n    const handleKeyup = (e: KeyboardEvent) => {\n      e.preventDefault();\n      setKeyup(e.key);\n    };\n    document.addEventListener('keyup', handleKeyup, false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const imageSrc = images[viewingIndex];\n\n  useEffect(() => {\n    if(imgElementRef.current && imgElementRef.current.complete ){\n      setImageSize({\n        width: imgElementRef.current.naturalWidth,\n        height: imgElementRef.current.naturalHeight,\n      });\n    } else {\n      setImageSize(undefined);\n    }\n  }, [imageSrc, imgElementRef.current?.complete]);\n\n  useEffect(() => {\n    const bodyElement = document.getElementsByTagName('body')[0];\n    bodyElement.style.overflow = open ? 'hidden' : 'initial';\n    if(open){\n      setOffsetX(window.pageXOffset);\n    }\n  }, [open]);\n\n  return (\n    <>\n      {open ?\n        <StyledMain left={offsetX}>\n          <StyledBackground onClick={() => onClose()} />\n          <StyledImageOverlay>\n            <img ref={imgElementRef} src={imageSrc} {...imageSize}  alt=\"画像\" />\n            {images.length > 0 &&\n              <StyledPoints>\n                {[...Array(images.length)].map((_, i) => (\n                  <StyledPoint key={i} current={i === viewingIndex} />\n                ))}\n              </StyledPoints>\n            }\n          </StyledImageOverlay>\n        </StyledMain>\n        : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{left: number}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n  left: ${(x) => x.left}px;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.previewImages};\n`;\n\nconst StyledPoints = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledPoint = styled.div<{current: boolean}>`\n  height: 30px;\n  width: 12px;\n  color: ${(x) => x.current ? 'black' : '#ccc'};\n  ::after {\n    content: '●';\n  }\n`;\n","import styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { zIndexes } from \"./Constants\";\n\nexport type NotificationContent = { text: string, type?: NotificationType };\n\ntype NotificationType = 'notification' | 'warning'  | 'error';\nconst NotificationTypeTable: Record<NotificationType, string> = {\n  notification : 'black',\n  warning: 'FFA500',\n  error: 'red',\n}\n\nconst notificationTypeMapping: (value?: NotificationType) => string = v => NotificationTypeTable[v || 'notification'];\n\ntype Props = { content?: NotificationContent };\n\nexport const NotificationBar = ({content}: Props) => {\n  const [notificationMessages, setNotificationMessages] = useState<({ id: string; content: NotificationContent })[]>([]);\n  const [counter, setCounter] = useState(Number.MIN_SAFE_INTEGER);\n\n  useEffect(() => {\n    if(!content) return;\n\n    const id = counter.toString();\n    setNotificationMessages(prev => [...prev, {...{content}, id}]);\n\n    setTimeout(() => {\n      setNotificationMessages(prev => prev.filter(x => x.id !== id));\n    }, 50_000);\n    setCounter(p => p + 1);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content]);\n\n  return (\n    <StyledMain2>\n      {notificationMessages.map((notificationMessage, index) => (\n        <StyledMain key={notificationMessage.id} type={notificationMessage.content?.type} >\n          {notificationMessage.content.text}\n        </StyledMain>\n      ))}\n    </StyledMain2>\n  );\n};\n\nconst StyledMain2 = styled.div`\n  position: absolute;\n  bottom: 50px;\n  left: 40px;\n`;\n\nconst StyledMain = styled.div<{type?: NotificationType}>`\n  z-index: ${zIndexes.notificationBar};\n  background: ${x => notificationTypeMapping(x.type)};\n  color: white;\n  border-radius: 10px;\n  margin-top: 16px;\n  padding: 8px 16px;\n  color: white;\n`;\n","import React, { createContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { Compose } from \"./Compose\";\nimport {end_point, User, Image, uploadImages, Return, Like, httpToJson} from \"./Api\";\nimport './index.css';\nimport styled from \"styled-components\";\nimport {Logs} from \"./Logs\";\nimport {PreviewImagesOverlay} from \"./PreviewImagesOverlay\";\nimport {NotificationBar, NotificationContent} from \"./NotificationBar\";\nimport {asyncConvertBase64} from \"./Util\";\nimport {localStorageKey} from \"./Constants\";\n\nexport type ComposeValue = { text: string, replyToTextId: string, replyToUserId: string; files?: File[]}\n\nexport const initialComposeValue: ComposeValue = {text: \"\", replyToTextId: \"\", replyToUserId: \"\"};\n\nexport const ComposeContext =\n  createContext<{ composeValue: ComposeValue, setComposeValue: (value: ComposeValue) => void }>(\n    {composeValue: initialComposeValue, setComposeValue: (_: ComposeValue) => {}}\n  );\n\n// TODO rename\nexport const ImageMapContext = createContext<{\n  imageMap: Record<string, Image[]>,\n  likeMap: Record<string, Like>,\n  userMap: Record<string, User>,\n  setNotificationContent: (value: NotificationContent) => void,\n}>({\n  imageMap: {},\n  likeMap: {},\n  userMap: {},\n  setNotificationContent: (_: NotificationContent) => {},\n});\n\nexport const LoadImagesContext = createContext<() => void>(() => {});\n\nexport const SetPreviewImagesContext = createContext<(params: {images: string[], index: number}) => void>(() => {});\n\nexport type PainValue = {\n  name: string;\n  query: string;\n  limit: number;\n  pollingIntervalTime: number;\n};\n\nconst initialPains = [\n  {\n    name: 'All',\n    query: \"$filter=_user_id ne 'd9ecf9245defb6b07cb86fe92a6fde9e735fc9f9'&$orderby=_created_at desc\",\n    limit: 20,\n    pollingIntervalTime: 20,\n  },\n  {\n    name: 'To me',\n    query: \"$filter=in_reply_to_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc\",\n    limit: 20,\n    pollingIntervalTime: 20,\n  },\n  {\n    name: 'Self',\n    query: \"$filter=_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc\",\n    limit: 20,\n    pollingIntervalTime: 20,\n  },\n];\n\nexport const MainPage = () => {\n  const [userList, setUserList] = useState<User[]>([]);\n  const [imageList, setImageList] = useState<Image[]>([]);\n  const [likeList, setLikeList] = useState<Like[]>([]);\n  const [composeValue, setComposeValue] = useState<ComposeValue>(initialComposeValue);\n  const [loadLogTrigger, setLoadLogTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [previewImages, setPreviewImages] = useState<{images: string[], index: number}>({images: [], index: 0});\n  const [openPreviewImagesOverlay, setOpenPreviewImagesOverlay] = useState(false);\n  const [notificationContent, setNotificationContent] = useState<NotificationContent>();\n  // TODO: localstorage?\n  const [pains, setPains] = useState<PainValue[]>([]);\n\n  const userMap: Record<string, User> = useMemo(() => userList.reduce((acc: any, cur: User) => ({\n    ...acc,\n    [cur._user_id]: acc[cur._user_id] || cur,\n  }), {}), [userList]);\n\n  const imageMap: Record<string, Image[]> = useMemo(() => imageList.reduce((acc: any, cur: Image) => ({\n    ...acc,\n    [cur.bind_text_id]: [...(acc[cur.bind_text_id] || []), cur],\n  }), {}), [imageList]);\n\n  const likeMap: Record<string, Like> = useMemo(() => likeList.reduce((acc: any, cur: Like) => ({\n    ...acc,\n    [cur.id]: cur,\n  }), {}), [likeList]);\n\n  const loadUser = () => {\n    fetch(`${end_point}/user/all?$orderby=_created_at desc`)\n      .then(httpToJson)\n      .then(setUserList);\n  };\n\n  const loadImages = async () => {\n    const loadImagesLimit = async (limit: number) => {\n      const newImageList: Image[] = await fetch(`${end_point}/image/all?$orderby=_created_at desc&$limit=${limit}`).then(httpToJson);\n\n      if(imageList.length ===0){\n        setImageList(newImageList);\n        return;\n      }\n\n      const newImageListIndex = newImageList.findIndex(newImage => newImage.id === imageList[0]?.id);\n      if(newImageListIndex !== -1){\n        setImageList(prev => [...newImageList.slice(0, newImageListIndex), ...prev]);\n        return;\n      }\n      await loadImagesLimit(limit + 100);\n    }\n    await loadImagesLimit(20);\n  };\n\n  const loadLikes = () => {\n    fetch(`${end_point}/like/all`)\n      .then(httpToJson)\n      .then(setLikeList);\n  };\n\n  const handleChangePain = (value: PainValue, index: number) => {\n    const sameNamePain = pains.find((pain, i) => pain.name === value.name && i !== index);\n    if(sameNamePain) {\n      setNotificationContent({text: \"同一のpain名は設定できません\", type: 'error'});\n      return;\n    }\n    setPains(prev => {\n      const newList = [...prev];\n      newList[index] = value;\n      return newList\n    })\n  };\n\n  const handleSubmit = async ({text, replyToUserId, replyToTextId, files}: ComposeValue) => {\n    const params = {\n      text,\n      ...(replyToUserId ? {in_reply_to_user_id: replyToUserId}: {}),\n      ...(replyToTextId ? {in_reply_to_text_id: replyToTextId}: {}),\n    };\n    const postTextRes: Return = await fetch(`${end_point}/text`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(params)\n    }).then(httpToJson);\n    if (files) {\n      for (const file of files) {\n        const base64 = await asyncConvertBase64(file);\n        if (!base64) {\n          console.error('画像が大きすぎます');\n          setNotificationContent({text: '画像が大きすぎます', type: \"error\"});\n          continue;\n        }\n        await uploadImages({base64s: [base64], bindTextId: postTextRes.id});\n      }\n      await loadImages();\n    }\n\n    setLoadLogTrigger(prev => prev+1);\n  };\n\n  useEffect(() => {\n    loadUser();\n    setInterval(loadUser, 60_000 * 10);//10分\n\n    loadImages();\n    setInterval(loadImages, 10_000);\n\n    loadLikes();\n    setInterval(loadLikes, 60_000);//1minute\n\n    const value = localStorage.getItem(localStorageKey.pains)\n    setPains(value ? JSON.parse(value) : initialPains);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if(previewImages.images.length){\n      setOpenPreviewImagesOverlay(true);\n    }\n  }, [previewImages]);\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey.pains, JSON.stringify(pains))\n  }, [pains]);\n\n  return (\n    <StyledMain>\n      <SetPreviewImagesContext.Provider value={setPreviewImages}>\n        <LoadImagesContext.Provider value={loadImages} >\n          <ImageMapContext.Provider value={{imageMap, likeMap, userMap, setNotificationContent }}>\n            <ComposeContext.Provider value={{composeValue, setComposeValue}}>\n              <Compose value={composeValue} onChange={setComposeValue} onSubmit={handleSubmit} userList={userList} />\n              <div className=\"flex\">\n                {pains.map((list, index) => (\n                  <Logs\n                    key={list.name}\n                    value={list}\n                    loadLogTrigger={loadLogTrigger}\n                    onChangePain={value => handleChangePain(value, index)}\n                  />\n                ))}\n              </div>\n            </ComposeContext.Provider>\n          </ImageMapContext.Provider>\n        </LoadImagesContext.Provider>\n      </SetPreviewImagesContext.Provider>\n      <PreviewImagesOverlay\n        open={openPreviewImagesOverlay}\n        onClose={() => setOpenPreviewImagesOverlay(false)}\n        images={previewImages.images}\n        index={previewImages.index}\n      />\n      <NotificationBar content={notificationContent} />\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  ::-webkit-scrollbar {\n    display:none;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { MainPage } from \"./MainPage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}