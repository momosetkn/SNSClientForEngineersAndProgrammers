{"version":3,"sources":["reportWebVitals.ts","DragDropOverlay.tsx","Constants.ts","Api.ts","SettingsOverlay.tsx","Compose.tsx","Log.tsx","Logs.tsx","PreviewImagesOverlay.tsx","NotificationBar.tsx","MainPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DragDropOverlay","onDropFile","useState","drag","setDrag","file","setFile","useEffect","undefined","document","addEventListener","ev","preventDefault","dataTransfer","items","i","length","kind","getAsFile","files","console","log","name","fromElement","StyledMain","enabled","styled","div","x","zIndexes","end_point","uploadImages","a","bindTextId","fileUploader","convertBase64Promise","Promise","r","fr","FileReader","onload","e","target","result","readAsDataURL","base64","error","params","bind_text_id","fetch","method","headers","Authorization","body","JSON","stringify","res","json","all","Array","from","map","httpToJson","ok","text","SettingsOverlay","open","onClose","description","state","update","userMap","useContext","ImageMapContext","apply","value","Object","entries","id","dummyMyUser","myUser","_user_id","myUserValue","key","StyledBackground","StyledImageOverlay","StyledHeaderContainer","className","icon","faTimesCircle","onClick","StyledForm","htmlFor","type","onChange","prev","cols","rows","Compose","onSubmit","userList","send","setSend","settingsOverlayOpen","setSettingsOverlayOpen","setNotificationContent","inputRef","useRef","handleKeyup","useCallback","ctrlKey","trim","initialComposeValue","current","removeEventListener","handleChangeComposeValue","event","placeholder","replyToTextId","replyToUserId","user","slice","StyledTextCounter","ref","faPaperPlane","title","index","filter","_","faCog","Log","Number","MIN_SAFE_INTEGER","updateTimeTrigger","setUpdateTimeTrigger","replyDestination","setReplyDestination","likeCount","setLikeCount","ComposeContext","composeValue","setComposeValue","imageMap","likeMap","loadImages","LoadImagesContext","setPreviewImages","SetPreviewImagesContext","time","useMemo","now","Date","date","_created_at","diff","getTime","timeDiff","Math","floor","localizedTime","toLocaleString","setInterval","like_count","getUser","userId","handleClickFavorite","textId","catch","err","response","status","like","nextLikeCount","handleChangeImageFile","handleClickReply","in_reply_to_text_id","StyledMeta","dateTime","StyledReplyTo","in_reply_to_user_id","StyledText","image","StyledImg","src","alt","images","faReply","faHeart","faImages","accept","multiple","hidden","StyledReplyDestinationText","y","img","Logs","onChangePainValue","loadLogTrigger","texts","setTexts","limit","setLimit","editingPainValue","setEditingPainValue","loadLogTrigger2","setLoadLogTrigger2","openTitle","setOpenTitle","titleHeight","query","StyledLogs","StyledLogsTitle","StyledTitleHeader","onBlur","StyledTexts","PreviewImagesOverlay","viewingIndex","setViewingIndex","imageSize","setImageSize","keyup","setKeyup","offsetX","setOffsetX","imgElementRef","max","min","imageSrc","complete","width","naturalWidth","height","naturalHeight","getElementsByTagName","style","overflow","window","pageXOffset","left","StyledPoints","StyledPoint","NotificationTypeTable","notification","warning","NotificationBar","content","notificationMessages","setNotificationMessages","counter","setCounter","toString","setTimeout","p","StyledMain2","notificationMessage","v","createContext","MainPage","setUserList","imageList","setImageList","likeList","setLikeList","setLoadLogTrigger","previewImages","openPreviewImagesOverlay","setOpenPreviewImagesOverlay","notificationContent","encodeURI","painValues","setPainValues","reduce","acc","cur","loadUser","loadImagesLimit","newImageList","newImageListIndex","findIndex","newImage","loadLikes","handleSubmit","postTextRes","Provider","list","newList","ReactDOM","render","StrictMode","exact","path","getElementById"],"mappings":"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","file":"static/js/main.f38e56bf.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from \"styled-components\";\nimport {useEffect, useState} from \"react\";\n\nexport const DragDropOverlay = ({onDropFile}:{onDropFile: (file: File) => void}) => {\n  const [drag, setDrag] = useState(false);\n  // addEventListenerを都度貼り替えるのが面倒なため、state経由でuseEffectを発火させ、onDropFileさせる\n  const [file, setFile] = useState<File | undefined>();\n\n  useEffect(() => {\n    if(file){\n      onDropFile(file);\n      setFile(undefined);\n    }\n  }, [file, onDropFile]);\n\n  useEffect(() => {\n    const handleDrop =  (ev: any) => {\n      setDrag(false);\n      ev.preventDefault();\n\n      if (ev.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          if (ev.dataTransfer.items[i].kind === 'file') {\n            const file = ev.dataTransfer.items[i].getAsFile();\n            setFile(file);\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + ev.dataTransfer.files[i].name);\n        }\n      }\n    };\n\n    const dragEnterHandler = (ev: any) =>  {\n      ev.preventDefault();\n      setDrag(true);\n    };\n\n    const dragOverHandler = (ev: any) =>  ev.preventDefault();\n\n    const handleDragLeave = (ev: any) =>  {\n      ev.preventDefault();\n      console.log('leave', ev);\n      if (!ev.fromElement){\n        setDrag(false);\n      }\n    };\n\n    document.addEventListener('drop', handleDrop);\n    document.addEventListener('dragenter', dragEnterHandler);\n    document.addEventListener('dragover', dragOverHandler);//kesu nokosu\n    document.addEventListener('dragleave', handleDragLeave);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <StyledMain enabled={drag} />\n  );\n};\n\nconst styledDragDropOverlayMargin = 16;\nconst styledDragDropOverlayBorderSize = 4;\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  width: calc(100vw - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  height: calc(100vh - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  top: 0px;\n  margin: ${styledDragDropOverlayMargin}px;\n  border-radius: 32px;\n  background: gray;\n  border: ${styledDragDropOverlayBorderSize}px dashed black;\n  opacity: 0.5;\n  display:   ${(x) =>  x.enabled ? 'block' : 'none'};\n`;\n","export const zIndexes = {\n  dragDrop: 100,\n  previewImages: 300,\n  previewImagesBackground: 200,\n  settings: 250,\n  notificationBar: 500,\n};\n","export const end_point = \"https://versatileapi.herokuapp.com/api\";\n\ntype Base = {\n  id: string;\n  _created_at: string;\n  _updated_at: string;\n  _user_id: string;\n}\n\nexport type Text = Base & {\n  text: string;\n  in_reply_to_user_id?: string; //返信対象のUserId\n  in_reply_to_text_id?: string; //返信対象のTextId\n}\n\nexport type Image = Base & {\n  base64: string;\n  bind_text_id: string;\n}\n\nexport type User = Base & {\n  description: string;\n  name: string;\n}\n\nexport type Like = {\n  id: string;\n  _updated_at: string;\n  like_count: number;\n}\n\nexport type Return = {\n  id: string;\n}\n\nexport const uploadImages = async ({files, bindTextId}:{files: File[] | FileList, bindTextId: string}) => {\n  const fileUploader = async (file: File) => {\n    const convertBase64Promise = new Promise((r) => {\n      const fr = new FileReader();\n      fr.onload = (e) => {\n        r(e.target?.result);\n      };\n      fr.readAsDataURL(file);\n    });\n    const base64 = (await convertBase64Promise) as any as string;\n    if (base64.length > 100_000) {\n      console.error(`base64 size is ${base64.length}`);\n    }\n    const params = {\n      base64,\n      bind_text_id: bindTextId,\n    }\n    await fetch(`${end_point}/image`, {\n      method: \"POST\",\n      headers: {Authorization: \"evolution\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json()).then(x => console.log(x));\n  };\n\n  await Promise.all(Array.from(files).map(fileUploader));\n};\n\nexport const httpToJson = (res: Response) => res.ok ? res.json() : res.text();","import styled from \"styled-components\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {zIndexes} from \"./Constants\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {end_point, httpToJson, Return, User} from \"./Api\";\nimport {ImageMapContext} from \"./MainPage\";\n\ntype State = {\n  name: string,\n  description: string,\n};\n\nexport const SettingsOverlay = ({open, onClose}: {open: boolean; onClose: () => void}) => {\n  const [state, update] = useState<State>({\n    name: '',\n    description: '',\n  });\n\n  const { userMap } = useContext(ImageMapContext);\n\n  const apply = async (value: State) => {\n    return await fetch(`${end_point}/user/create_user`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(value)\n    }).then(httpToJson);\n  };\n\n  const handleClose = () => {\n    apply(state);\n    onClose();\n  };\n\n  useEffect(() => {\n    (async () => {\n      if(!Object.entries(userMap).length) return;\n\n      const res: Return = await apply({name: '', description: ''});\n      const dummyMyUser: User = await fetch(`${end_point}/user/${res.id}`, {\n        headers: {Authorization: \"HelloWorld\"},\n      }).then(httpToJson);\n\n      const myUser = userMap[dummyMyUser._user_id];\n      if(!myUser) return;\n\n      const myUserValue = {\n        name: myUser.name,\n        description: myUser.description,\n      };\n      update(myUserValue);\n      await apply(myUserValue);\n    })();\n  }, [userMap]);\n\n  useEffect(() => {\n    const handleKeyup = (e: KeyboardEvent) => {\n      e.preventDefault();\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    document.addEventListener('keyup', handleKeyup, false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {open ?\n        <StyledMain enabled={open} >\n          <StyledBackground />\n          <StyledImageOverlay>\n            <StyledHeaderContainer>\n              <div>Settings</div>\n              <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={handleClose}/>\n            </StyledHeaderContainer>\n            <StyledForm>\n              <div>\n                <label htmlFor=\"SettingsOverlay_name\">name</label>\n                <input\n                  name=\"name\"\n                  id=\"SettingsOverlay_name\"\n                  type=\"text\"\n                  value={state.name}\n                  onChange={e => {\n                    update(prev => ({...prev, name: e.target.value}));\n                  }}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"SettingsOverlay_description\">description</label>\n                <textarea\n                  name=\"description\"\n                  id=\"SettingsOverlay_description\"\n                  cols={30}\n                  rows={5}\n                  value={state.description}\n                  onChange={e => {\n                    update(prev => ({...prev, description: e.target.value}));\n                  }}\n                />\n              </div>\n            </StyledForm>\n          </StyledImageOverlay>\n        </StyledMain> : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.settings};\n  background: white;\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nconst StyledHeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst StyledForm = styled.div`\n  & label {\n    display: block;\n    margin-top: 8px;\n  }\n`;\n","import React, {useCallback, useContext, useEffect, useRef, useState} from \"react\";\nimport { User } from \"./Api\";\nimport {ComposeValue, ImageMapContext, initialComposeValue} from \"./MainPage\";\nimport {faCog, faPaperPlane, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { DragDropOverlay } from \"./DragDropOverlay\";\nimport {SettingsOverlay} from \"./SettingsOverlay\";\n\nexport const composeHeight = 100;\n\nexport const Compose = ({\n  value,\n  onChange,\n  onSubmit,\n  userList\n}: {\n  value: ComposeValue,\n  onChange: (value: ComposeValue) => void,\n  onSubmit: (value: ComposeValue) => void;\n  userList: User[]\n}) => {\n  const [send, setSend] = useState(false);\n  const [settingsOverlayOpen, setSettingsOverlayOpen] = useState(false);\n\n  const { setNotificationContent } =  useContext(ImageMapContext);\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleKeyup = useCallback((e: KeyboardEvent) => {\n    // Ctrl + Enterで送信\n    if (e.ctrlKey && e.key === 'Enter' && !send) {\n      // ここで送信処理はせず、sendフラグの変更をuseEffectで察知させて、送ることで、古いデータを送らないようにする\n      setSend(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDropFile = (file: File) => {\n    onChange({...value, files: [...(value.files || []), file]});\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (send && value.text.trim()) {\n        setSend(false);\n        try {\n          await onSubmit(value);\n          onChange(initialComposeValue);\n        } catch (e) {\n          setNotificationContent({text: 'エラー発生'});\n          console.error(e);\n        }\n      }\n    })();\n  }, [send, value, onChange, onSubmit, setNotificationContent]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.removeEventListener(\"keyup\", handleKeyup, false);\n      inputRef.current.addEventListener(\"keyup\", handleKeyup, false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputRef.current]);\n\n  const handleChangeComposeValue = (event: any) => {\n    onChange({\n      ...value,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <StyledMain>\n      <StyledForm>\n        <div className=\"flex\">\n          <input\n            type=\"text\"\n            name=\"replyToTextId\"\n            placeholder=\"ツイートへの返信\"\n            value={value.replyToTextId}\n            onChange={handleChangeComposeValue}\n          />\n          <select\n            name=\"replyToUserId\"\n            value={value.replyToUserId}\n            onChange={handleChangeComposeValue}\n          >\n            <option value=\"\">-</option>\n            {userList.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name || `匿名(${user._user_id.slice(0, 2)})`}\n              </option>\n            ))}\n          </select>\n          <StyledTextCounter error={value.text.trim().length > 280}>\n            {`${value.text.trim().length}/280`}\n          </StyledTextCounter>\n        </div>\n        <div className=\"flex\">\n          <textarea\n            name=\"text\"\n            ref={inputRef}\n            placeholder=\"今なにしてる？\"\n            rows={4}\n            cols={50}\n            value={value.text}\n            onChange={e => onChange({...value, text: e.target.value})}\n          />\n          <FontAwesomeIcon\n            className=\"clickable\"\n            icon={faPaperPlane}\n            title=\"post\"\n            onClick={(e) => {e.preventDefault();setSend(true);}}\n          />\n          <div>\n            {value.files?.map((file, index) => (\n              <div>\n                {file.name}\n                <FontAwesomeIcon\n                  className=\"clickable ml1\"\n                  icon={faTimesCircle}\n                  onClick={() => onChange({...value, files: value.files?.filter((_, i) => i !== index)})}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </StyledForm>\n      <FontAwesomeIcon className=\"clickable ml1\" icon={faCog} onClick={() => setSettingsOverlayOpen(true)}/>\n      <SettingsOverlay open={settingsOverlayOpen} onClose={() => setSettingsOverlayOpen(false)}/>\n      <DragDropOverlay onDropFile={handleDropFile}/>\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  height: ${composeHeight}px;\n  display: flex;\n`;\n\nconst StyledForm = styled.div`\n  width: 500px;\n`;\n\nconst StyledTextCounter = styled.div<{error: boolean}>`\n  color: ${(x) => x.error ? 'red': 'black'};\n`;\n","import React, { ChangeEvent, useContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport {Text, end_point, uploadImages, Like} from \"./Api\";\nimport {faHeart, faImages, faReply, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './index.css';\nimport styled from \"styled-components\";\nimport {\n  ComposeContext,\n  ImageMapContext,\n  LoadImagesContext,\n  SetPreviewImagesContext\n} from \"./MainPage\";\n\nexport const Log = ({\n  text,\n  onClose,\n}: {\n  text: Text;\n  onClose?: () => void\n}) => {\n  const [updateTimeTrigger, setUpdateTimeTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [replyDestination, setReplyDestination] = useState<{\n    text?: Text;\n    open: boolean;\n  }>({open: false});\n  const [likeCount, setLikeCount] = useState(0);\n\n  const { composeValue, setComposeValue } = useContext(ComposeContext);\n  const {imageMap, likeMap, userMap} = useContext(ImageMapContext);\n  const loadImages = useContext(LoadImagesContext);\n  const setPreviewImages = useContext(SetPreviewImagesContext);\n\n  const time = useMemo(() => {\n    const now = new Date();\n    const date = new Date(text._created_at);\n    const diff = (now.getTime() - date.getTime()) / 1_000;\n    let timeDiff = \"\";\n    if (diff < 60) {\n      timeDiff = `${Math.floor(diff)}秒前`;\n    } else if (diff / 60 < 60) {\n      timeDiff = `${Math.floor(diff / 60)}分前`;\n    } else if (diff / 60 / 60 < 24) {\n      timeDiff = `${Math.floor(diff / 60 / 60)}時間前`;\n    } else {\n      timeDiff = `${Math.floor(diff / 60 / 60 / 24)}日前`;\n    }\n    return {\n      timeDiff,\n      time: text._created_at,\n      localizedTime: date.toLocaleString(\"ja-JP\"),\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text, userMap, updateTimeTrigger]);\n\n  useEffect(() => {\n    setInterval(() => setUpdateTimeTrigger(prev => prev + 1), 5_000);\n  }, []);\n\n  useEffect(() => {\n    setLikeCount(likeMap[text.id]?.like_count || 0);\n  }, [likeMap, text.id]);\n\n  const getUser = (userId: string) => {\n    return userMap[userId]?.name || `匿名(${userId.slice(0, 2)})`;\n  };\n\n  const handleReplyTo = (x: { textId: string, userId: string }) => {\n    setComposeValue({...composeValue, replyToTextId: x.textId,  replyToUserId: x.userId})\n  };\n\n  const handleClickFavorite = async ({textId}: { textId: string }) => {\n    const like: Like | undefined = await fetch(`${end_point}/like/${textId}`)\n      .then((res) => res.json()).catch(err => {\n        if (err?.response?.status === 404) {\n          // 0件なので無視\n        } else {\n          throw err;\n        }\n      });\n\n    const nextLikeCount = (like?.like_count || 0) + 1;\n    const params = {\n      like_count: nextLikeCount\n    };\n    await fetch(`${end_point}/like/${textId}`, {\n      method: \"PUT\",\n      headers: {Authorization: \"LOVE\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json())\n      .then((_) => {\n        setLikeCount(nextLikeCount);\n      });\n  };\n\n  const handleChangeImageFile = async (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n\n    await uploadImages({files: e.target.files, bindTextId: text.id});\n\n    loadImages();\n  };\n\n  const handleClickReply = async () => {\n      if(!text.in_reply_to_text_id) return;\n\n      if(replyDestination.text){\n        setReplyDestination(prev => ({\n          ...prev,\n          open: true,\n        }))\n        return;\n      }\n      await fetch(`${end_point}/text/${text.in_reply_to_text_id}`)\n        .then((res) => (res.json()))\n        .then(x => {\n          setReplyDestination({\n            text: x,\n            open: true,\n          })\n        });\n    };\n\n  return (\n    <StyledMain>\n      <StyledMeta>\n        <div\n          title={userMap[text._user_id]?.description || text._user_id}>\n          {getUser(text._user_id)}\n        </div>\n        <div>\n          <time dateTime={time.time} title={time.localizedTime}>\n            {time.timeDiff}\n          </time>\n          {onClose ?\n            <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={onClose}/>\n            : null\n          }\n        </div>\n      </StyledMeta>\n      <div>\n        <StyledReplyTo onClick={handleClickReply} >\n          {text.in_reply_to_text_id ? `To: ${text.in_reply_to_text_id} `: ''}\n        </StyledReplyTo>\n        <div>\n          {text.in_reply_to_user_id ? `@${getUser(text.in_reply_to_user_id)} `: ''}\n        </div>\n        <StyledText>\n          {text.text}\n        </StyledText>\n      </div>\n      {imageMap[text.id]?.length ?\n        imageMap[text.id].map((image, index) => (\n          <div key={image.id}>\n            <StyledImg\n              className=\"clickable\"\n              src={image.base64}\n              alt={`${getUser(text._user_id)}さんが貼り付けた画像`}\n              title={`${getUser(image._user_id)}さんが貼り付けた画像`}\n              onClick={() => setPreviewImages({images: imageMap[text.id].map(x => x.base64), index})}\n            />\n          </div>\n        ))\n        : null\n      }\n      <div className=\"flex mt1\">\n        <FontAwesomeIcon\n          className=\"clickable\"\n          icon={faReply}\n          title=\"reply\"\n          onClick={() => handleReplyTo({textId: text.id, userId: text._user_id})}\n        />\n        <FontAwesomeIcon\n          className=\"clickable ml2\"\n          icon={faHeart}\n          title=\"favorite\"\n          onClick={() => handleClickFavorite({textId: text.id})}\n        />\n        {likeCount}\n        <label htmlFor={`image_upload_${text.id}`}>\n          <FontAwesomeIcon\n            className=\"clickable ml2\"\n            icon={faImages}\n            title=\"images\"\n          />\n          <input\n            id={`image_upload_${text.id}`}\n            type=\"file\"\n            accept=\"image/*\"\n            multiple\n            hidden\n            onChange={handleChangeImageFile}\n          />\n        </label>\n      </div>\n      {\n        replyDestination.open && replyDestination.text?\n          (\n            <StyledReplyDestinationText\n              x={onClose ? 0 : 8}\n              y={16}\n            >\n              <Log\n                text={replyDestination.text}\n                onClose={() => setReplyDestination(prev => ({...prev, open: false}))}\n              />\n            </StyledReplyDestinationText>\n          )\n          : null\n      }\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  border: 1px solid #ccc;\n  padding: 8px;\n`;\n\nconst StyledMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledReplyTo = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst StyledText = styled.div`\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  padding-top: 2px;\n`;\n\nconst StyledImg = styled.img`\n  width: 100%;\n`;\n\nconst StyledReplyDestinationText = styled.div<{x: number, y: number}>`\n  margin-left: ${({x}) => x}px;\n  margin-top: ${({y}) => y}px;\n`;\n","import {end_point, httpToJson, Text} from \"./Api\";\nimport React, {useEffect, useState} from \"react\";\nimport {Log} from \"./Log\";\nimport styled from \"styled-components\";\nimport {composeHeight} from \"./Compose\";\nimport {PainValue} from \"./MainPage\";\n\nconst titleHeaderHeight = 22;\n\nexport const Logs = ({\n  value,\n  onChangePainValue,\n  loadLogTrigger,\n} : {\n  value: PainValue,\n  onChangePainValue: (value: PainValue) => void,\n  loadLogTrigger?: number,\n}) => {\n  const [texts, setTexts] = useState<Text[]>([]);\n  const [limit, setLimit] = useState(20);\n  const [editingPainValue, setEditingPainValue] = useState(value);\n  // TODO: 命名…\n  const [loadLogTrigger2, setLoadLogTrigger2] = useState(Number.MIN_SAFE_INTEGER);\n  const [openTitle, setOpenTitle] = useState(false);\n\n  const titleHeight = (openTitle ? 200 : 0 ) + titleHeaderHeight;\n\n  const loadLog = () => {\n    fetch(`${end_point}/text/all?${value.query}&$limit=${limit}`)\n      .then(httpToJson)\n      .then(setTexts).catch(console.error);\n  };\n\n  const handleClickLoadMore = () => {\n    setLimit(prev => prev + 20);\n  };\n\n  useEffect(() => {\n    setInterval(() => setLoadLogTrigger2(prev => prev + 1), 10_000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => loadLog(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [loadLogTrigger, loadLogTrigger2, limit]);\n\n  useEffect(() => setEditingPainValue(value),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [value]);\n\n  return (\n    <StyledLogs>\n      <StyledLogsTitle\n        titleHeight={titleHeight}\n      >\n        <StyledTitleHeader\n          className=\"clickable\"\n          onClick={() => {\n            setOpenTitle(prev => !prev);\n          }}\n        >\n          {value.name}\n        </StyledTitleHeader>\n        <div>\n          <form>\n            <div>\n              <input\n                name=\"name\"\n                type=\"text\"\n                value={editingPainValue.name}\n                onChange={e => {\n                  setEditingPainValue(prev => ({...prev, name: e.target.value}));\n                }}\n                onBlur={() => onChangePainValue(editingPainValue)}\n              />\n            </div>\n            <div>\n              <textarea\n                name=\"query\"\n                cols={30}\n                rows={5}\n                value={editingPainValue.query}\n                onChange={e => {\n                  setEditingPainValue(prev => ({...prev, query: e.target.value}));\n                }}\n                onBlur={() => onChangePainValue(editingPainValue)}\n              />\n            </div>\n            <div>\n              <input\n                name=\"limit\"\n                type=\"number\"\n                value={limit}\n                onChange={e => setLimit(Number(e.target.value))}\n              />\n            </div>\n          </form>\n        </div>\n      </StyledLogsTitle>\n      <StyledTexts titleHeight={titleHeight}>\n        {texts.map(text => (\n          <Log\n            key={text.id}\n            text={text}\n          />\n        ))}\n        <div className=\"clickable\" onClick={handleClickLoadMore}>load more</div>\n      </StyledTexts>\n    </StyledLogs>\n  );\n}\n\nconst StyledLogs = styled.div`\n  width: 320px;\n`;\n\nconst StyledLogsTitle = styled.div<{titleHeight: number}>`\n  height: ${(x) => x.titleHeight}px;\n  overflow: hidden;\n`;\n\nconst StyledTitleHeader = styled.div`\n  height: ${titleHeaderHeight}px;\n`;\n\nconst StyledTexts = styled.div<{titleHeight: number}>`\n  height: calc(100vh - ${(x) => composeHeight + x.titleHeight}px);\n  overflow-y: auto;\n`;\n","import styled from \"styled-components\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {zIndexes} from \"./Constants\";\n\nexport const PreviewImagesOverlay = ({open, onClose, images, index}: {open: boolean; onClose: () => void; images: string[], index: number}) => {\n  const [viewingIndex, setViewingIndex] = useState(index);\n  const [imageSize, setImageSize] = useState<{width: number, height: number} | undefined>();\n  const [keyup, setKeyup] = useState<string | undefined>();\n  const [offsetX, setOffsetX] = useState<number>(0);\n  const imgElementRef = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    setViewingIndex(index);\n  }, [index]);\n\n  useEffect(() => {\n    if (keyup === 'Escape') {\n      onClose();\n    } else if (keyup === 'ArrowLeft') {\n      setViewingIndex(prev => Math.max(prev - 1, 0));\n    } else if (keyup === 'ArrowRight') {\n      setViewingIndex(prev => Math.min(prev + 1, images.length - 1));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keyup, setViewingIndex]);\n\n  useEffect(() => {\n    const handleKeyup = (e: KeyboardEvent) => {\n      e.preventDefault();\n      setKeyup(e.key);\n    };\n    document.addEventListener('keyup', handleKeyup, false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const imageSrc = images[viewingIndex];\n\n  useEffect(() => {\n    if(imgElementRef.current && imgElementRef.current.complete ){\n      setImageSize({\n        width: imgElementRef.current.naturalWidth,\n        height: imgElementRef.current.naturalHeight,\n      });\n    } else {\n      setImageSize(undefined);\n    }\n  }, [imageSrc, imgElementRef.current?.complete]);\n\n  useEffect(() => {\n    const bodyElement = document.getElementsByTagName('body')[0];\n    bodyElement.style.overflow = open ? 'hidden' : 'initial';\n    if(open){\n      setOffsetX(window.pageXOffset);\n    }\n  }, [open]);\n\n  return (\n    <>\n      {open ?\n        <StyledMain left={offsetX}>\n          <StyledBackground onClick={() => onClose()} />\n          <StyledImageOverlay>\n            <img ref={imgElementRef} src={imageSrc} {...imageSize}  alt=\"画像\" />\n            {images.length > 0 &&\n              <StyledPoints>\n                {[...Array(images.length)].map((_, i) => (\n                  <StyledPoint key={i} current={i === viewingIndex} />\n                ))}\n              </StyledPoints>\n            }\n          </StyledImageOverlay>\n        </StyledMain>\n        : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{left: number}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n  left: ${(x) => x.left}px;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.previewImages};\n`;\n\nconst StyledPoints = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledPoint = styled.div<{current: boolean}>`\n  height: 30px;\n  width: 12px;\n  color: ${(x) => x.current ? 'black' : '#ccc'};\n  ::after {\n    content: '●';\n  }\n`;\n","import styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { zIndexes } from \"./Constants\";\n\nexport type NotificationContent = { text: string, type?: NotificationType };\n\ntype NotificationType = 'notification' | 'warning'  | 'error';\nconst NotificationTypeTable: Record<NotificationType, string> = {\n  notification : 'black',\n  warning: 'FFA500',\n  error: 'red',\n}\n\nconst notificationTypeMapping: (value?: NotificationType) => string = v => NotificationTypeTable[v || 'notification'];\n\ntype Props = { content?: NotificationContent };\n\nexport const NotificationBar = ({content}: Props) => {\n  const [notificationMessages, setNotificationMessages] = useState<({ id: string; content: NotificationContent })[]>([]);\n  const [counter, setCounter] = useState(Number.MIN_SAFE_INTEGER);\n\n  useEffect(() => {\n    if(!content) return;\n\n    const id = counter.toString();\n    setNotificationMessages(prev => [...prev, {...{content}, id}]);\n\n    setTimeout(() => {\n      setNotificationMessages(prev => prev.filter(x => x.id !== id));\n    }, 50_000);\n    setCounter(p => p + 1);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content]);\n\n  return (\n    <StyledMain2>\n      {notificationMessages.map((notificationMessage, index) => (\n        <StyledMain key={notificationMessage.id} type={notificationMessage.content?.type} >\n          {notificationMessage.content.text}\n        </StyledMain>\n      ))}\n    </StyledMain2>\n  );\n};\n\nconst StyledMain2 = styled.div`\n  position: absolute;\n  bottom: 50px;\n  left: 40px;\n`;\n\nconst StyledMain = styled.div<{type?: NotificationType}>`\n  z-index: ${zIndexes.notificationBar};\n  background: black;\n  color: white;\n  border-radius: 10px;\n  margin-top: 16px;\n  padding: 8px 16px;\n  color: ${x => notificationTypeMapping(x.type)};\n`;\n","import React, { createContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { Compose } from \"./Compose\";\nimport {end_point, User, Image, uploadImages, Return, Like, httpToJson} from \"./Api\";\nimport './index.css';\nimport styled from \"styled-components\";\nimport {Logs} from \"./Logs\";\nimport {PreviewImagesOverlay} from \"./PreviewImagesOverlay\";\nimport {NotificationBar, NotificationContent} from \"./NotificationBar\";\n\nexport type ComposeValue = { text: string, replyToTextId: string, replyToUserId: string; files?: File[]}\n\nexport const initialComposeValue: ComposeValue = {text: \"\", replyToTextId: \"\", replyToUserId: \"\"};\n\nexport const ComposeContext =\n  createContext<{ composeValue: ComposeValue, setComposeValue: (value: ComposeValue) => void }>(\n    {composeValue: initialComposeValue, setComposeValue: (_: ComposeValue) => {}}\n  );\n\n// TODO rename\nexport const ImageMapContext = createContext<{\n  imageMap: Record<string, Image[]>,\n  likeMap: Record<string, Like>,\n  userMap: Record<string, User>,\n  setNotificationContent: (value: NotificationContent) => void,\n}>({\n  imageMap: {},\n  likeMap: {},\n  userMap: {},\n  setNotificationContent: (_: NotificationContent) => {},\n});\n\nexport const LoadImagesContext = createContext<() => void>(() => {});\n\nexport const SetPreviewImagesContext = createContext<(params: {images: string[], index: number}) => void>(() => {});\n\nexport type PainValue = {\n  name: string;\n  query: string;\n};\n\nexport const MainPage = () => {\n  const [userList, setUserList] = useState<User[]>([]);\n  const [imageList, setImageList] = useState<Image[]>([]);\n  const [likeList, setLikeList] = useState<Like[]>([]);\n  const [composeValue, setComposeValue] = useState<ComposeValue>(initialComposeValue);\n  const [loadLogTrigger, setLoadLogTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [previewImages, setPreviewImages] = useState<{images: string[], index: number}>({images: [], index: 0});\n  const [openPreviewImagesOverlay, setOpenPreviewImagesOverlay] = useState(false);\n  const [notificationContent, setNotificationContent] = useState<NotificationContent>();\n  // TODO: localstorage?\n  const [painValues, setPainValues] = useState<PainValue[]>( [\n    {\n      name: 'All',\n      query: encodeURI(\"$filter=_user_id ne 'd9ecf9245defb6b07cb86fe92a6fde9e735fc9f9'&$orderby=_created_at desc\"),\n    },\n    {\n      name: 'To me',\n      query: encodeURI(\"$filter=in_reply_to_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc\")\n    },\n    {\n      name: 'Self',\n      query: encodeURI(\"$filter=_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc\")\n    },\n  ]);\n\n  const userMap: Record<string, User> = useMemo(() => userList.reduce((acc: any, cur: User) => ({\n    ...acc,\n    [cur._user_id]: acc[cur._user_id] || cur,\n  }), {}), [userList]);\n\n  const imageMap: Record<string, Image[]> = useMemo(() => imageList.reduce((acc: any, cur: Image) => ({\n    ...acc,\n    [cur.bind_text_id]: [...(acc[cur.bind_text_id] || []), cur],\n  }), {}), [imageList]);\n\n  const likeMap: Record<string, Like> = useMemo(() => likeList.reduce((acc: any, cur: Like) => ({\n    ...acc,\n    [cur.id]: cur,\n  }), {}), [likeList]);\n\n  const loadUser = () => {\n    fetch(`${end_point}/user/all?$orderby=_created_at desc`)\n      .then(httpToJson)\n      .then(setUserList);\n  };\n\n  const loadImages = async () => {\n    const loadImagesLimit = async (limit: number) => {\n      const newImageList: Image[] = await fetch(`${end_point}/image/all?$orderby=_created_at desc&$limit=${limit}`).then(httpToJson);\n\n      if(imageList.length ===0){\n        setImageList(newImageList);\n        return;\n      }\n\n      const newImageListIndex = newImageList.findIndex(newImage => newImage.id === imageList[0]?.id);\n      if(newImageListIndex !== -1){\n        setImageList(prev => [...newImageList.slice(0, newImageListIndex), ...prev]);\n        return;\n      }\n      await loadImagesLimit(limit + 100);\n    }\n    await loadImagesLimit(20);\n  };\n\n  const loadLikes = () => {\n    fetch(`${end_point}/like/all`)\n      .then(httpToJson)\n      .then(setLikeList);\n  };\n\n  const handleSubmit = async ({text, replyToUserId, replyToTextId, files}: ComposeValue) => {\n    const params = {\n      text,\n      ...(replyToUserId ? {in_reply_to_user_id: replyToUserId}: {}),\n      ...(replyToTextId ? {in_reply_to_text_id: replyToTextId}: {}),\n    };\n    const postTextRes: Return = await fetch(`${end_point}/text`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(params)\n    }).then(httpToJson);\n    files && await uploadImages({files, bindTextId: postTextRes.id});\n\n    await loadImages();\n    setLoadLogTrigger(prev => prev+1);\n  };\n\n  useEffect(() => {\n    loadUser();\n    setInterval(loadUser, 60_000 * 10);//10分\n\n    loadImages();\n    setInterval(loadImages, 10_000);\n\n    loadLikes();\n    setInterval(loadLikes, 60_000);//1minute\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  useEffect(() => {\n    if(previewImages.images.length){\n      setOpenPreviewImagesOverlay(true);\n    }\n  }, [previewImages]);\n\n  return (\n    <StyledMain>\n      <SetPreviewImagesContext.Provider value={setPreviewImages}>\n        <LoadImagesContext.Provider value={loadImages} >\n          <ImageMapContext.Provider value={{imageMap, likeMap, userMap, setNotificationContent }}>\n            <ComposeContext.Provider value={{composeValue, setComposeValue}}>\n              <Compose value={composeValue} onChange={setComposeValue} onSubmit={handleSubmit} userList={userList} />\n              <div className=\"flex\">\n                {painValues.map((list, index) => (\n                  <Logs\n                    key={list.name}\n                    value={list}\n                    loadLogTrigger={loadLogTrigger}\n                    onChangePainValue={value => {\n                      setPainValues(prev => {\n                        const newList = [...prev];\n                        newList[index] = value;\n                        return newList\n                      })\n                    }}\n                  />\n                ))}\n              </div>\n            </ComposeContext.Provider>\n          </ImageMapContext.Provider>\n        </LoadImagesContext.Provider>\n      </SetPreviewImagesContext.Provider>\n      <PreviewImagesOverlay\n        open={openPreviewImagesOverlay}\n        onClose={() => setOpenPreviewImagesOverlay(false)}\n        images={previewImages.images}\n        index={previewImages.index}\n      />\n      <NotificationBar content={notificationContent} />\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  ::-webkit-scrollbar {\n    display:none;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { MainPage } from \"./MainPage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}