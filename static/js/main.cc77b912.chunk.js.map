{"version":3,"sources":["reportWebVitals.ts","DragDropOverlay.tsx","Api.ts","Util.ts","Compose.tsx","Constants.ts","Log.tsx","Logs.tsx","PreviewImagesOverlay.tsx","NotificationBar.tsx","ConfirmModal.tsx","SettingsOverlay.tsx","MainPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DragDropOverlay","onDropFiles","useState","drag","setDrag","files","setFiles","useEffect","undefined","document","addEventListener","ev","preventDefault","dataTransfer","items","Array","from","i","length","console","log","name","fromElement","StyledMain","enabled","styled","div","x","end_point","imageMaxSize","uploadImages","a","base64s","bindTextId","fileUploader","base64","Error","params","bind_text_id","fetch","method","headers","Authorization","body","JSON","stringify","res","json","Promise","all","map","httpToJson","ok","text","asyncConvertBase64","file","result","r","fr","FileReader","onload","e","target","readAsDataURL","error","eq","b","Object","is","aEntries","entries","bEntries","every","aKey","aValue","Compose","value","onChange","onSubmit","userList","sendStatus","setSendStatus","useContext","ImageMapContext","fireNotificationContent","openSettingsOverlay","inputRef","useRef","handleKeyup","useCallback","ctrlKey","key","handleDropFiles","type","trim","initialComposeValue","current","removeEventListener","handleChangeComposeValue","event","loading","StyledForm","className","placeholder","replyToTextId","disabled","replyToUserId","user","id","_user_id","slice","StyledTextCounter","ref","rows","cols","icon","faPaperPlane","title","onClick","index","Math","floor","size","faTimesCircle","filter","_","faCog","form","zIndexes","appName","localStorageKey","myUser","pains","colors","Log","onClose","Number","MIN_SAFE_INTEGER","updateTimeTrigger","setUpdateTimeTrigger","open","replyDestination","setReplyDestination","likeCount","setLikeCount","ComposeContext","composeValue","setComposeValue","imageMap","likeMap","userMap","loadImages","LoadImagesContext","setPreviewImages","SetPreviewImagesContext","time","useMemo","now","Date","date","_created_at","diff","getTime","timeDiff","localizedTime","toLocaleString","setInterval","prev","clearInterval","like_count","getUser","userId","handleClickLike","textId","catch","err","response","status","like","nextLikeCount","handleChangeImageFile","handleClickReply","in_reply_to_text_id","child","StyledMeta","description","dateTime","StyledReplyTo","in_reply_to_user_id","StyledText","image","StyledImg","src","alt","images","StyledActions","faReply","faHeart","htmlFor","faImages","accept","multiple","hidden","StyledReplyDestinationText","y","img","Logs","onChangePain","loadLogTrigger","fireConfirmModal","texts","setTexts","editingPainValue","setEditingPainValue","internalLoadLogTrigger","setInternalLoadLogTrigger","openTitle","setOpenTitle","titleHeight","loadLog","p","handleChange","handleChangeInt","parseInt","handleClickDeleteButton","content","action","pollingIntervalTime","q","encodeURI","query","replaceAll","limit","StyledLogs","StyledLogsTitle","StyledTitleHeader","onBlur","StyledTexts","PreviewImagesOverlay","viewingIndex","setViewingIndex","imageSize","setImageSize","keyup","setKeyup","offsetX","setOffsetX","imgElementRef","max","min","imageSrc","complete","width","naturalWidth","height","naturalHeight","getElementsByTagName","style","overflow","window","pageXOffset","left","StyledBackground","StyledImageOverlay","StyledPoints","StyledPoint","NotificationTypeTable","notification","warning","NotificationBar","notificationMessages","setNotificationMessages","counter","setCounter","toString","setTimeout","StyledMain2","notificationMessage","v","ConfirmModal","onAccept","setOpen","acceptButtonLabel","delete","handleClose","StyledHeaderContainer","SettingsOverlay","onChangePains","setUser","editingPains","setEditingPains","apply","parse","dummyMyUser","myUserValue","localStorageMyUser","localStorage","getItem","setItem","createContext","initialPains","MainPage","setUserList","imageList","setImageList","likeList","setLikeList","setLoadLogTrigger","previewImages","openPreviewImagesOverlay","setOpenPreviewImagesOverlay","notificationContent","setNotificationContent","confirmModalValue","setConfirmModalValue","confirmModalPromise","setConfirmModalPromise","setPains","settingsOverlayOpen","setSettingsOverlayOpen","reduce","acc","cur","loadUser","loadImagesLimit","newImageList","newImageListIndex","findIndex","newImage","loadLikes","handleSubmit","postTextRes","resolve","Provider","list","find","pain","right","handleChangePain","ReactDOM","render","StrictMode","exact","path","getElementById"],"mappings":"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","file":"static/js/main.cc77b912.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from \"styled-components\";\nimport {useEffect, useState} from \"react\";\n\nexport const DragDropOverlay = ({onDropFiles}:{onDropFiles: (files: File[]) => void}) => {\n  const [drag, setDrag] = useState(false);\n  // addEventListenerを都度貼り替えるのが面倒なため、state経由でuseEffectを発火させ、onDropFileさせる\n  const [files, setFiles] = useState<File[] | undefined>();\n\n  useEffect(() => {\n    if(files){\n      onDropFiles(files);\n      setFiles(undefined);\n    }\n  }, [files, onDropFiles]);\n\n  useEffect(() => {\n    const handleDrop =  (ev: any) => {\n      setDrag(false);\n      ev.preventDefault();\n\n      if (ev.dataTransfer.items) {\n        setFiles(Array.from(ev.dataTransfer.files));\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + ev.dataTransfer.files[i].name);\n        }\n      }\n    };\n\n    const dragEnterHandler = (ev: any) =>  {\n      ev.preventDefault();\n      setDrag(true);\n    };\n\n    const dragOverHandler = (ev: any) =>  {\n      console.log('dragover');\n      // Dropしたときにブラウザで画像を開いてしまうため、これを入れる\n      ev.preventDefault();\n    }\n\n    const handleDragLeave = (ev: any) =>  {\n      ev.preventDefault();\n      console.log('dragleave', ev);\n      if (!ev.fromElement){\n        console.log('dragleave out of browser');\n        // ドラッグがブラウザの範囲外に行ったときに発動\n        setDrag(false);\n      }\n    };\n\n    document.addEventListener('drop', handleDrop);\n    document.addEventListener('dragenter', dragEnterHandler);\n    document.addEventListener('dragover', dragOverHandler);\n    document.addEventListener('dragleave', handleDragLeave);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <StyledMain enabled={drag} />\n  );\n};\n\nconst styledDragDropOverlayMargin = 16;\nconst styledDragDropOverlayBorderSize = 4;\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  width: calc(100vw - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  height: calc(100vh - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  top: 0px;\n  margin: ${styledDragDropOverlayMargin}px;\n  border-radius: 32px;\n  background: gray;\n  border: ${styledDragDropOverlayBorderSize}px dashed black;\n  opacity: 0.5;\n  display:   ${(x) =>  x.enabled ? 'block' : 'none'};\n`;\n","export const end_point = \"https://versatileapi.herokuapp.com/api\";\n\ntype Base = {\n  id: string;\n  _created_at: string;\n  _updated_at: string;\n  _user_id: string;\n}\n\nexport type Text = Base & {\n  text: string;\n  in_reply_to_user_id?: string; //返信対象のUserId\n  in_reply_to_text_id?: string; //返信対象のTextId\n}\n\nexport type Image = Base & {\n  base64: string;\n  bind_text_id: string;\n}\n\nexport type User = Base & {\n  description: string;\n  name: string;\n}\n\nexport type Like = {\n  id: string;\n  _updated_at: string;\n  like_count: number;\n}\n\nexport type Return = {\n  id: string;\n}\n\nexport const imageMaxSize = 100_000;\n\nexport const uploadImages = async ({base64s, bindTextId}:{base64s: string[], bindTextId: string}) => {\n  const fileUploader = async (base64: string) => {\n\n    if (base64.length > imageMaxSize) throw new Error();\n    const params = {\n      base64,\n      bind_text_id: bindTextId,\n    }\n    await fetch(`${end_point}/image`, {\n      method: \"POST\",\n      headers: {Authorization: \"evolution\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json()).then(x => console.log(x));\n  };\n\n  await Promise.all(Array.from(base64s).map(fileUploader));\n};\n\nexport const httpToJson = (res: Response) => res.ok ? res.json() : res.text();","import {imageMaxSize} from \"./Api\";\n\nexport const asyncConvertBase64 = async (file: File) => {\n  const result = new Promise((r) => {\n    const fr = new FileReader();\n    fr.onload = (e) => {\n      r(e.target?.result);\n    };\n    fr.readAsDataURL(file);\n  });\n  const base64 = (await result) as any as string;\n  if (base64.length > imageMaxSize) {\n    console.error(`base64 size is ${base64.length}`);\n    return null\n  }\n  return base64;\n}\n\nexport const eq = (a: any, b: any): boolean => {\n  if (Object.is(a, b)) return true;\n  if (typeof a !== 'object') return false;\n  if (typeof b !== 'object') return false;\n  const aEntries = Object.entries(a);\n  const bEntries = Object.entries(b);\n  if (aEntries.length !== bEntries.length) return false;\n  return aEntries.every(([aKey, aValue]) => eq(aValue, b[aKey]));\n};\n","import React, {useCallback, useContext, useEffect, useRef, useState} from \"react\";\nimport { User } from \"./Api\";\nimport {ComposeValue, ImageMapContext, initialComposeValue} from \"./MainPage\";\nimport {faCog, faPaperPlane, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { DragDropOverlay } from \"./DragDropOverlay\";\nimport {asyncConvertBase64} from \"./Util\";\n\nexport const composeHeight = 100;\n\nexport const Compose = ({\n  value,\n  onChange,\n  onSubmit,\n  userList\n}: {\n  value: ComposeValue,\n  onChange: (value: ComposeValue) => void,\n  onSubmit: (value: ComposeValue) => void;\n  userList: User[]\n}) => {\n  const [sendStatus, setSendStatus] = useState<'waiting' | 'send' | 'sending'>('waiting');\n\n  const { fireNotificationContent, openSettingsOverlay } =  useContext(ImageMapContext);\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleKeyup = useCallback((e: KeyboardEvent) => {\n    // Ctrl + Enterで送信\n    if (e.ctrlKey && e.key === 'Enter' && sendStatus === 'waiting') {\n      // ここで送信処理はせず、sendフラグの変更をuseEffectで察知させて、送ることで、古いデータを送らないようにする\n      setSendStatus('send');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDropFiles = async (files: File[]) => {\n    await Promise.all(files.map(async (file) => {\n      const base64 = await asyncConvertBase64(file);\n      if (!base64) {\n        console.error('画像が大きすぎます');\n        fireNotificationContent({text: '画像が大きすぎます', type: \"error\"});\n      }\n    }));\n    onChange({...value, files: [...(value.files || []), ...files]});\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (sendStatus === 'send' && value.text.trim()) {\n        // 他と競合して、同時に発火するのを防ぐため、一番先に実行されたものはステータスを変更しておく。\n        setSendStatus('sending');\n        try {\n          await onSubmit(value);\n          onChange(initialComposeValue);\n        } catch (e) {\n          fireNotificationContent({text: 'エラー発生'});\n          console.error(e);\n        } finally {\n          setSendStatus('waiting');\n        }\n      }\n    })();\n  }, [sendStatus, value, onChange, onSubmit, fireNotificationContent]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.removeEventListener(\"keyup\", handleKeyup, false);\n      inputRef.current.addEventListener(\"keyup\", handleKeyup, false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputRef.current]);\n\n  const handleChangeComposeValue = (event: any) => {\n    onChange({\n      ...value,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const loading = sendStatus !== 'waiting';\n\n  return (\n    <StyledMain>\n      <StyledForm>\n        <div className=\"flex\">\n          <input\n            type=\"text\"\n            name=\"replyToTextId\"\n            placeholder=\"ツイートへの返信\"\n            value={value.replyToTextId}\n            onChange={handleChangeComposeValue}\n            disabled={loading}\n          />\n          <select\n            name=\"replyToUserId\"\n            value={value.replyToUserId}\n            onChange={handleChangeComposeValue}\n            disabled={loading}\n          >\n            <option value=\"\">-</option>\n            {userList.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name || `匿名(${user._user_id.slice(0, 2)})`}\n              </option>\n            ))}\n          </select>\n          <StyledTextCounter error={value.text.trim().length > 280}>\n            {`${value.text.trim().length}/280`}\n          </StyledTextCounter>\n        </div>\n        <div className=\"flex\">\n          <textarea\n            name=\"text\"\n            ref={inputRef}\n            placeholder=\"今なにしてる？\"\n            rows={4}\n            cols={50}\n            value={value.text}\n            onChange={e => onChange({...value, text: e.target.value})}\n            disabled={loading}\n          />\n          <FontAwesomeIcon\n            className={!loading ? 'clickable' : ''}\n            icon={faPaperPlane}\n            title=\"post\"\n            onClick={(e) => {e.preventDefault();!loading && setSendStatus('send');}}\n          />\n          <div>\n            {value.files?.map((file, index) => (\n              <div key={file.name}>\n                {`${file.name}(${Math.floor(file.size / 1024)}kb)`}\n                <FontAwesomeIcon\n                  className=\"clickable ml1\"\n                  icon={faTimesCircle}\n                  onClick={() => onChange({...value, files: value.files?.filter((_, i) => i !== index)})}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </StyledForm>\n      <FontAwesomeIcon className=\"clickable ml1\" icon={faCog} onClick={() => openSettingsOverlay()}/>\n      <DragDropOverlay onDropFiles={handleDropFiles}/>\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  height: ${composeHeight}px;\n  display: flex;\n`;\n\nconst StyledForm = styled.form`\n  width: 500px;\n`;\n\nconst StyledTextCounter = styled.div<{error: boolean}>`\n  color: ${(x) => x.error ? 'red': 'black'};\n`;\n","export const zIndexes = {\n  dragDrop: 100,\n  previewImages: 300,\n  previewImagesBackground: 200,\n  settings: 250,\n  notificationBar: 500,\n};\n\nconst appName = 'SNSClientForEngineersAndProgrammers';\n\nexport const localStorageKey = {\n  myUser: `${appName}_myUser`,\n  pains: `${appName}_pains`,\n};\n\nexport const colors = {\n  border: '#ccc',\n  background: '#fff',\n  action: '#555',\n};\n","import React, { ChangeEvent, useContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport {Text, end_point, uploadImages, Like, httpToJson} from \"./Api\";\nimport {faHeart, faImages, faReply, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './index.css';\nimport styled from \"styled-components\";\nimport {\n  ComposeContext,\n  ImageMapContext,\n  LoadImagesContext,\n  SetPreviewImagesContext\n} from \"./MainPage\";\nimport {asyncConvertBase64} from \"./Util\";\nimport {colors} from \"./Constants\";\n\nexport const Log = ({\n  text,\n  onClose,\n}: {\n  text: Text;\n  onClose?: () => void\n}) => {\n  const [updateTimeTrigger, setUpdateTimeTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [replyDestination, setReplyDestination] = useState<{\n    text?: Text;\n    open: boolean;\n  }>({open: false});\n  const [likeCount, setLikeCount] = useState(0);\n\n  const { composeValue, setComposeValue } = useContext(ComposeContext);\n  const {imageMap, likeMap, userMap, fireNotificationContent} = useContext(ImageMapContext);\n  const loadImages = useContext(LoadImagesContext);\n  const setPreviewImages = useContext(SetPreviewImagesContext);\n\n  const time = useMemo(() => {\n    const now = new Date();\n    const date = new Date(text._created_at);\n    const diff = (now.getTime() - date.getTime()) / 1_000;\n    let timeDiff;\n    if (diff < 60) {\n      timeDiff = `${Math.floor(diff)}秒前`;\n    } else if (diff / 60 < 60) {\n      timeDiff = `${Math.floor(diff / 60)}分前`;\n    } else if (diff / 60 / 60 < 24) {\n      timeDiff = `${Math.floor(diff / 60 / 60)}時間前`;\n    } else {\n      timeDiff = `${Math.floor(diff / 60 / 60 / 24)}日前`;\n    }\n    return {\n      timeDiff,\n      time: text._created_at,\n      localizedTime: date.toLocaleString(\"ja-JP\"),\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text, userMap, updateTimeTrigger]);\n\n  useEffect(() => {\n    const id = setInterval(() => setUpdateTimeTrigger(prev => prev + 1), 5_000);\n\n    return () => clearInterval(id);\n  }, []);\n\n  useEffect(() => {\n    setLikeCount(likeMap[text.id]?.like_count || 0);\n  }, [likeMap, text.id]);\n\n  const getUser = (userId: string) => {\n    return userMap[userId]?.name || `匿名(${userId.slice(0, 2)})`;\n  };\n\n  const handleReplyTo = (x: { textId: string, userId: string }) => {\n    setComposeValue({...composeValue, replyToTextId: x.textId,  replyToUserId: x.userId})\n  };\n\n  const handleClickLike = async ({textId}: { textId: string }) => {\n    const like: Like | undefined = await fetch(`${end_point}/like/${textId}`)\n      .then(httpToJson).catch(err => {\n        if (err?.response?.status === 404) {\n          // 0件なので無視\n        } else {\n          throw err;\n        }\n      });\n\n    const nextLikeCount = (like?.like_count || 0) + 1;\n    const params = {\n      like_count: nextLikeCount\n    };\n    await fetch(`${end_point}/like/${textId}`, {\n      method: \"PUT\",\n      headers: {Authorization: \"LOVE\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json())\n      .then((_) => {\n        setLikeCount(nextLikeCount);\n      });\n  };\n\n  const handleChangeImageFile = async (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n\n    for(const file of Array.from(e.target.files)){\n      const base64 = await asyncConvertBase64(file);\n      if(!base64) {\n        console.error('画像が大きすぎます');\n        fireNotificationContent({text: '画像が大きすぎます', type: \"error\"})\n        continue;\n      }\n      await uploadImages({base64s: [base64], bindTextId: text.id});\n    }\n\n    loadImages();\n  };\n\n  const handleClickReply = async () => {\n      if(!text.in_reply_to_text_id) return;\n\n      if(replyDestination.text){\n        setReplyDestination(prev => ({\n          ...prev,\n          open: true,\n        }))\n        return;\n      }\n      await fetch(`${end_point}/text/${text.in_reply_to_text_id}`)\n        .then((res) => (res.json()))\n        .then(x => {\n          setReplyDestination({\n            text: x,\n            open: true,\n          })\n        });\n    };\n\n  return (\n    <StyledMain child={!!onClose}>\n      <StyledMeta>\n        <div\n          title={userMap[text._user_id]?.description || text._user_id}>\n          {getUser(text._user_id)}\n        </div>\n        <div>\n          <time dateTime={time.time} title={time.localizedTime}>\n            {time.timeDiff}\n          </time>\n          {onClose ?\n            <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={onClose}/>\n            : null\n          }\n        </div>\n      </StyledMeta>\n      <div>\n        <StyledReplyTo onClick={handleClickReply} >\n          {text.in_reply_to_text_id ? `To: ${text.in_reply_to_text_id} `: ''}\n        </StyledReplyTo>\n        <div>\n          {text.in_reply_to_user_id ? `@${getUser(text.in_reply_to_user_id)} `: ''}\n        </div>\n        <StyledText>\n          {text.text}\n        </StyledText>\n      </div>\n      {imageMap[text.id]?.length ?\n        imageMap[text.id].map((image, index) => (\n          <div key={image.id}>\n            <StyledImg\n              className=\"clickable\"\n              src={image.base64}\n              alt={`${getUser(text._user_id)}さんが貼り付けた画像`}\n              title={`${getUser(image._user_id)}さんが貼り付けた画像`}\n              onClick={() => setPreviewImages({images: imageMap[text.id].map(x => x.base64), index})}\n            />\n          </div>\n        ))\n        : null\n      }\n      <StyledActions>\n        <FontAwesomeIcon\n          className=\"clickable\"\n          icon={faReply}\n          title=\"Reply\"\n          onClick={() => handleReplyTo({textId: text.id, userId: text._user_id})}\n        />\n        <div\n          className=\"clickable ml2\"\n          onClick={() => handleClickLike({textId: text.id})}\n        >\n          <FontAwesomeIcon\n            icon={faHeart}\n            title=\"Like\"\n          />\n          <span>{likeCount}</span>\n        </div>\n        <label htmlFor={`image_upload_${text.id}`}>\n          <FontAwesomeIcon\n            className=\"clickable ml2\"\n            icon={faImages}\n            title=\"Images\"\n          />\n          <input\n            id={`image_upload_${text.id}`}\n            type=\"file\"\n            accept=\"image/*\"\n            multiple\n            hidden\n            onChange={handleChangeImageFile}\n          />\n        </label>\n      </StyledActions>\n      {\n        replyDestination.open && replyDestination.text?\n          (\n            <StyledReplyDestinationText\n              x={onClose ? 0 : 8}\n              y={16}\n            >\n              <Log\n                text={replyDestination.text}\n                onClose={() => setReplyDestination(prev => ({...prev, open: false}))}\n              />\n            </StyledReplyDestinationText>\n          )\n          : null\n      }\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div<{child: boolean}>`\n  ${x => x.child ? \n  `border-top: 1px solid ${colors.border};` \n  : `border-bottom: 1px solid ${colors.border};`}\n  padding: 8px;\n`;\n\nconst StyledMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledReplyTo = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst StyledText = styled.div`\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  padding-top: 2px;\n`;\n\nconst StyledActions = styled.div`\n  display: flex;\n  margin-top: 8px;\n  color: ${colors.action};\n`;\n\nconst StyledImg = styled.img`\n  width: 100%;\n`;\n\nconst StyledReplyDestinationText = styled.div<{x: number, y: number}>`\n  margin-left: ${({x}) => x}px;\n  margin-top: ${({y}) => y}px;\n`;\n","import {end_point, httpToJson, Text} from \"./Api\";\nimport React, {ChangeEvent, useContext, useEffect, useState} from \"react\";\nimport {Log} from \"./Log\";\nimport styled from \"styled-components\";\nimport {composeHeight} from \"./Compose\";\nimport {ImageMapContext, PainValue} from \"./MainPage\";\nimport {eq} from \"./Util\";\nimport {colors} from \"./Constants\";\n\nconst titleHeaderHeight = 22;\n\nexport const Logs = ({\n  value,\n  onChangePain,\n  loadLogTrigger,\n} : {\n  value: PainValue,\n  onChangePain: (value?: PainValue) => void,\n  loadLogTrigger?: number,\n}) => {\n  const {fireConfirmModal} = useContext(ImageMapContext)\n\n  const [texts, setTexts] = useState<Text[]>([]);\n  const [editingPainValue, setEditingPainValue] = useState(value);\n  // Logs個別のトリガー\n  const [internalLoadLogTrigger, setInternalLoadLogTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [openTitle, setOpenTitle] = useState(false);\n\n  const titleHeight = (openTitle ? 300 : 0 ) + titleHeaderHeight;\n\n  const handleClickLoadMore = () => {\n    onChangePain({...value, limit: value.limit + 20});\n  };\n\n  const loadLog = () => setInternalLoadLogTrigger(p => p + 1);\n\n  const handleClickTitleHeader = () => {\n    setOpenTitle(prev => !prev);\n    if (!eq(editingPainValue, value)) onChangePain(editingPainValue);\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setEditingPainValue((prev) => ({\n      ...prev,\n      [event.target.name]: event.target.value,\n    }))\n  };\n\n  const handleChangeInt = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setEditingPainValue((prev) => ({\n      ...prev,\n      [event.target.name]: parseInt(event.target.value),\n    }))\n  };\n\n  const handleClickDeleteButton = async () => {\n    const result: boolean = await fireConfirmModal({title: '', content: 'このペインを削除しますか？', action: 'delete'});\n    if (result) onChangePain();\n  };\n\n  useEffect(() => {\n    const id = setInterval(() => setInternalLoadLogTrigger(prev => prev + 1),\n      (editingPainValue.pollingIntervalTime || 1) * 1_000);\n\n    return () => clearInterval(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editingPainValue.pollingIntervalTime]);\n\n  useEffect(() => {\n    const q = encodeURI(editingPainValue.query.trim().replaceAll('\\n', ''));\n    fetch(`${end_point}/text/all?${q}&$limit=${editingPainValue.limit}`)\n      .then(httpToJson)\n      .then(setTexts).catch(console.error);\n  },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [loadLogTrigger, internalLoadLogTrigger]);\n\n  useEffect(() => setEditingPainValue(value),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [value]);\n\n  return (\n    <StyledLogs>\n      <StyledLogsTitle\n        titleHeight={titleHeight}\n      >\n        <StyledTitleHeader\n          className=\"clickable\"\n          onClick={handleClickTitleHeader}\n        >\n          {value.name}\n        </StyledTitleHeader>\n        <StyledForm>\n          <div>\n            <label htmlFor={`${value.name}_Logs_name`}>name</label>\n            <input\n              name=\"name\"\n              id={`${value.name}_Logs_name`}\n              type=\"text\"\n              value={editingPainValue.name}\n              onChange={handleChange}\n              onBlur={loadLog}\n            />\n          </div>\n          <div>\n            <label htmlFor={`${value.name}_Logs_query`}>query</label>\n            <textarea\n              name=\"query\"\n              id={`${value.name}_Logs_query`}\n              cols={30}\n              rows={5}\n              value={editingPainValue.query}\n              onChange={handleChange}\n              onBlur={loadLog}\n            />\n          </div>\n          <div>\n            <label htmlFor={`${value.name}_Logs_limit`}>limit</label>\n            <input\n              name=\"limit\"\n              id={`${value.name}_Logs_limit`}\n              type=\"number\"\n              value={editingPainValue.limit}\n              onChange={handleChangeInt}\n              onBlur={loadLog}\n            />\n          </div>\n          <div>\n            <label htmlFor={`${value.name}_Logs_pollingIntervalTime`}>polling interval time</label>\n            <input\n              name=\"pollingIntervalTime\"\n              id={`${value.name}_Logs_pollingIntervalTime`}\n              type=\"number\"\n              value={editingPainValue.pollingIntervalTime}\n              onChange={handleChangeInt}\n              onBlur={loadLog}\n            />\n          </div>\n          <div>\n            <button className=\"mt1\" onClick={handleClickDeleteButton}>削除</button>\n          </div>\n        </StyledForm>\n      </StyledLogsTitle>\n      <StyledTexts titleHeight={titleHeight}>\n        {texts.map(text => (\n          <Log\n            key={text.id}\n            text={text}\n          />\n        ))}\n        <div className=\"clickable\" onClick={handleClickLoadMore}>load more</div>\n      </StyledTexts>\n    </StyledLogs>\n  );\n}\n\nconst margin = 8;\n\nconst StyledLogs = styled.div`\n  width: 320px;\n  margin: ${margin}px 0 ${margin}px ${margin}px;\n  border: 1px solid ${colors.border};\n`;\n\nconst StyledLogsTitle = styled.div<{titleHeight: number}>`\n  height: ${(x) => x.titleHeight}px;\n  overflow: hidden;\n  transition: all 300ms 0s ease;\n  border-bottom: 1px solid ${colors.border};\n`;\n\nconst StyledTitleHeader = styled.div`\n  height: ${titleHeaderHeight}px;\n`;\n\nconst StyledForm = styled.div`\n  padding: 8px 16px 16px 16px;\n  & label {\n    display: block;\n    margin-top: 8px;\n  }\n`;\n\nconst StyledTexts = styled.div<{titleHeight: number}>`\n  // margin上下とborder1px上下\n  height: calc(100vh - ${(x) => composeHeight + x.titleHeight + (margin + 1) * 2}px);\n  overflow-y: auto;\n  ::-webkit-scrollbar{\n    width: 8px;\n  }\n  ::-webkit-scrollbar-track{\n    background: ${colors.background};\n    border: none;\n    // box-shadow: inset 0 0 2px #777; \n  }\n  ::-webkit-scrollbar-thumb{\n    background: ${colors.border};\n    box-shadow: none;\n  }\n`;\n","import styled from \"styled-components\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {zIndexes} from \"./Constants\";\n\nexport const PreviewImagesOverlay = ({open, onClose, images, index}: {open: boolean; onClose: () => void; images: string[], index: number}) => {\n  const [viewingIndex, setViewingIndex] = useState(index);\n  const [imageSize, setImageSize] = useState<{width: number, height: number} | undefined>();\n  const [keyup, setKeyup] = useState<string | undefined>();\n  const [offsetX, setOffsetX] = useState<number>(0);\n  const imgElementRef = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    setViewingIndex(index);\n  }, [index]);\n\n  useEffect(() => {\n    if (keyup === 'Escape') {\n      onClose();\n    } else if (keyup === 'ArrowLeft') {\n      setViewingIndex(prev => Math.max(prev - 1, 0));\n    } else if (keyup === 'ArrowRight') {\n      setViewingIndex(prev => Math.min(prev + 1, images.length - 1));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keyup, setViewingIndex]);\n\n  useEffect(() => {\n    const handleKeyup = (e: KeyboardEvent) => {\n      e.preventDefault();\n      setKeyup(e.key);\n    };\n    document.addEventListener('keyup', handleKeyup, false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const imageSrc = images[viewingIndex];\n\n  useEffect(() => {\n    if(imgElementRef.current && imgElementRef.current.complete ){\n      setImageSize({\n        width: imgElementRef.current.naturalWidth,\n        height: imgElementRef.current.naturalHeight,\n      });\n    } else {\n      setImageSize(undefined);\n    }\n  }, [imageSrc, imgElementRef.current?.complete]);\n\n  useEffect(() => {\n    const bodyElement = document.getElementsByTagName('body')[0];\n    bodyElement.style.overflow = open ? 'hidden' : 'initial';\n    if(open){\n      setOffsetX(window.pageXOffset);\n    }\n  }, [open]);\n\n  return (\n    <>\n      {open ?\n        <StyledMain left={offsetX}>\n          <StyledBackground onClick={() => onClose()} />\n          <StyledImageOverlay>\n            <img ref={imgElementRef} src={imageSrc} {...imageSize}  alt=\"画像\" />\n            {images.length > 0 &&\n              <StyledPoints>\n                {[...Array(images.length)].map((_, i) => (\n                  <StyledPoint key={i} current={i === viewingIndex} />\n                ))}\n              </StyledPoints>\n            }\n          </StyledImageOverlay>\n        </StyledMain>\n        : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{left: number}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n  left: ${(x) => x.left}px;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.previewImages};\n`;\n\nconst StyledPoints = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledPoint = styled.div<{current: boolean}>`\n  height: 30px;\n  width: 12px;\n  color: ${(x) => x.current ? 'black' : '#ccc'};\n  ::after {\n    content: '●';\n  }\n`;\n","import styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { zIndexes } from \"./Constants\";\n\nexport type NotificationContent = { text: string, type?: NotificationType };\n\ntype NotificationType = 'notification' | 'warning'  | 'error';\nconst NotificationTypeTable: Record<NotificationType, string> = {\n  notification : 'black',\n  warning: 'FFA500',\n  error: 'red',\n}\n\nconst notificationTypeMapping: (value?: NotificationType) => string = v => NotificationTypeTable[v || 'notification'];\n\ntype Props = { content?: NotificationContent };\n\nexport const NotificationBar = ({content}: Props) => {\n  const [notificationMessages, setNotificationMessages] = useState<({ id: string; content: NotificationContent })[]>([]);\n  const [counter, setCounter] = useState(Number.MIN_SAFE_INTEGER);\n\n  useEffect(() => {\n    if(!content) return;\n\n    const id = counter.toString();\n    setNotificationMessages(prev => [...prev, {...{content}, id}]);\n\n    setTimeout(() => {\n      setNotificationMessages(prev => prev.filter(x => x.id !== id));\n    }, 50_000);\n    setCounter(p => p + 1);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content]);\n\n  return (\n    <StyledMain2>\n      {notificationMessages.map((notificationMessage, index) => (\n        <StyledMain key={notificationMessage.id} type={notificationMessage.content?.type} >\n          {notificationMessage.content.text}\n        </StyledMain>\n      ))}\n    </StyledMain2>\n  );\n};\n\nconst StyledMain2 = styled.div`\n  position: absolute;\n  bottom: 50px;\n  left: 40px;\n`;\n\nconst StyledMain = styled.div<{type?: NotificationType}>`\n  z-index: ${zIndexes.notificationBar};\n  background: ${x => notificationTypeMapping(x.type)};\n  color: white;\n  border-radius: 10px;\n  margin-top: 16px;\n  padding: 8px 16px;\n  color: white;\n`;\n","import styled from \"styled-components\";\nimport React, {useEffect, useState} from \"react\";\nimport {colors, zIndexes} from \"./Constants\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\n\nexport type ConfirmModalValue = {\n  title: string;\n  content: string;\n  action: 'delete' | 'ok';\n};\n\ntype Props = {\n  value: ConfirmModalValue;\n  onClose: () => void;\n  onAccept: () => void;\n};\n\nexport const ConfirmModal = ({\n  value,\n  onClose,\n  onAccept,\n}: Props) => {\n  const [open, setOpen] = useState(false);\n\n  const acceptButtonLabel = {delete: '削除', 'ok': 'OK'}[value.action];\n\n  useEffect(() => {\n    if (!value.title && !value.content) return;\n    setOpen(true);\n  }, [value]);\n\n  const handleClose = () => {\n    setOpen(false);\n    onClose();\n  };\n\n  const handleAccept = () => {\n    setOpen(false);\n    onAccept();\n  };\n\n  return (\n    <StyledMain enabled={open}>\n      <StyledBackground/>\n      <StyledImageOverlay>\n        <StyledHeaderContainer>\n          <div>{value.title}</div>\n          <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={handleClose}/>\n        </StyledHeaderContainer>\n        <StyledForm>\n          <div>\n            {value.content}\n          </div>\n          <div>\n            <button\n              onClick={handleClose}\n            >\n              キャンセル\n            </button>\n            <button\n              onClick={handleAccept}\n            >\n              {acceptButtonLabel}\n            </button>\n          </div>\n        </StyledForm>\n      </StyledImageOverlay>\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div<{ enabled: boolean }>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: ${x => x.enabled ? 'flex' : 'none'};\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.settings};\n  background: ${colors.background};\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nconst StyledHeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst StyledForm = styled.div`\n  & label {\n    display: block;\n    margin-top: 8px;\n  }\n`;\n","import styled from \"styled-components\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {colors, localStorageKey, zIndexes} from \"./Constants\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {end_point, httpToJson, Return, User} from \"./Api\";\nimport {ImageMapContext, PainValue} from \"./MainPage\";\n\ntype Props = {\n  open: boolean;\n  onClose: () => void;\n  pains: PainValue[];\n  onChangePains: (value: PainValue[]) => void;\n};\n\nexport const SettingsOverlay = ({open, onClose, pains, onChangePains}: Props) => {\n  const [user, setUser] = useState({\n    name: '',\n    description: '',\n  });\n  const [editingPains, setEditingPains] = useState('');\n\n  const { userMap } = useContext(ImageMapContext);\n\n  const apply = async (value: { name: string, description: string }) => {\n    return await fetch(`${end_point}/user/create_user`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(value)\n    }).then(httpToJson);\n  };\n\n  const handleClose = () => {\n    apply(user);\n    onChangePains(JSON.parse(editingPains));\n    onClose();\n  };\n\n  useEffect(() => {\n    (async () => {\n      // ユーザー情報のサーバーからの取得（localStorageから取得できなかったときに発動）\n      if(!Object.entries(userMap).length) return;\n\n      // localStorageから取得できてれば、ここを通らない。\n      if(user.name || user.description) return;\n\n      const res: Return = await apply({name: '', description: ''});\n      const dummyMyUser: User = await fetch(`${end_point}/user/${res.id}`, {\n        headers: {Authorization: \"HelloWorld\"},\n      }).then(httpToJson);\n\n      const myUser = userMap[dummyMyUser._user_id];\n      if(!myUser) return;\n\n      const myUserValue = {\n        name: myUser.name,\n        description: myUser.description,\n      };\n      setUser(myUserValue);\n      await apply(myUserValue);\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userMap]);\n\n  useEffect(() => {\n    const handleKeyup = (e: KeyboardEvent) => {\n      e.preventDefault();\n      if (e.key === 'Escape') {\n        handleClose();\n      }\n    };\n    document.addEventListener('keyup', handleKeyup, false);\n\n    // ユーザー初期値\n    const localStorageMyUser = localStorage.getItem(localStorageKey.myUser);\n    if (localStorageMyUser) {\n      setUser(JSON.parse(localStorageMyUser));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if(!user.name) return;\n    if(!user.description) return;\n\n    localStorage.setItem(localStorageKey.myUser, JSON.stringify(user));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n\n  useEffect(() => {\n    setEditingPains(JSON.stringify(pains, null, 2));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pains]);\n\n  return (\n    <>\n      {open ?\n        <StyledMain enabled={open} >\n          <StyledBackground />\n          <StyledImageOverlay>\n            <StyledHeaderContainer>\n              <div>Settings</div>\n              <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={handleClose}/>\n            </StyledHeaderContainer>\n            <StyledForm>\n              <div>\n                <label htmlFor=\"SettingsOverlay_name\">name</label>\n                <input\n                  name=\"name\"\n                  id=\"SettingsOverlay_name\"\n                  type=\"text\"\n                  value={user.name}\n                  onChange={e => {\n                    setUser(prev => ({...prev, name: e.target.value}));\n                  }}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"SettingsOverlay_description\">description</label>\n                <textarea\n                  name=\"description\"\n                  id=\"SettingsOverlay_description\"\n                  cols={30}\n                  rows={5}\n                  value={user.description}\n                  onChange={e => {\n                    setUser(prev => ({...prev, description: e.target.value}));\n                  }}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"SettingsOverlay_pains\">pains</label>\n                <textarea\n                  name=\"pains\"\n                  id=\"SettingsOverlay_pains\"\n                  cols={50}\n                  rows={15}\n                  value={editingPains}\n                  onChange={e => {\n                    setEditingPains(e.target.value);\n                  }}\n                />\n              </div>\n            </StyledForm>\n          </StyledImageOverlay>\n        </StyledMain> : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.settings};\n  background: ${colors.background};\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nconst StyledHeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst StyledForm = styled.div`\n  & label {\n    display: block;\n    margin-top: 8px;\n  }\n`;\n","import React, {createContext, useEffect, useMemo, useState} from 'react';\nimport {Compose} from \"./Compose\";\nimport {end_point, httpToJson, Image, Like, Return, uploadImages, User} from \"./Api\";\nimport './index.css';\nimport styled from \"styled-components\";\nimport {Logs} from \"./Logs\";\nimport {PreviewImagesOverlay} from \"./PreviewImagesOverlay\";\nimport {NotificationBar, NotificationContent} from \"./NotificationBar\";\nimport {asyncConvertBase64} from \"./Util\";\nimport {localStorageKey} from \"./Constants\";\nimport {ConfirmModal, ConfirmModalValue} from \"./ConfirmModal\";\nimport {SettingsOverlay} from \"./SettingsOverlay\";\n\nexport type ComposeValue = { text: string, replyToTextId: string, replyToUserId: string; files?: File[]}\n\nexport const initialComposeValue: ComposeValue = {text: \"\", replyToTextId: \"\", replyToUserId: \"\"};\n\nexport const ComposeContext =\n  createContext<{ composeValue: ComposeValue, setComposeValue: (value: ComposeValue) => void }>(\n    {composeValue: initialComposeValue, setComposeValue: (_: ComposeValue) => {}}\n  );\n\n// TODO rename\nexport const ImageMapContext = createContext<{\n  imageMap: Record<string, Image[]>,\n  likeMap: Record<string, Like>,\n  userMap: Record<string, User>,\n  fireNotificationContent: (value: NotificationContent) => void,\n  fireConfirmModal: (value: ConfirmModalValue) => Promise<boolean>,\n  openSettingsOverlay: () => void,\n}>({\n  imageMap: {},\n  likeMap: {},\n  userMap: {},\n  fireNotificationContent: (_: NotificationContent) => {},\n  fireConfirmModal: async (_: ConfirmModalValue) => false,\n  openSettingsOverlay: () => {},\n});\n\nexport const LoadImagesContext = createContext<() => void>(() => {});\n\nexport const SetPreviewImagesContext = createContext<(params: {images: string[], index: number}) => void>(() => {});\n\nexport type PainValue = {\n  name: string;\n  query: string;\n  limit: number;\n  pollingIntervalTime: number;\n};\n\nconst initialPains = [\n  {\n    name: 'All',\n    query: \"$filter=_user_id ne 'd9ecf9245defb6b07cb86fe92a6fde9e735fc9f9'&$orderby=_created_at desc\",\n    limit: 20,\n    pollingIntervalTime: 20,\n  },\n  {\n    name: 'To me',\n    query: \"$filter=in_reply_to_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc\",\n    limit: 20,\n    pollingIntervalTime: 20,\n  },\n  {\n    name: 'Self',\n    query: \"$filter=_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc\",\n    limit: 20,\n    pollingIntervalTime: 20,\n  },\n];\n\nexport const MainPage = () => {\n  const [userList, setUserList] = useState<User[]>([]);\n  const [imageList, setImageList] = useState<Image[]>([]);\n  const [likeList, setLikeList] = useState<Like[]>([]);\n  const [composeValue, setComposeValue] = useState<ComposeValue>(initialComposeValue);\n  const [loadLogTrigger, setLoadLogTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [previewImages, setPreviewImages] = useState<{images: string[], index: number}>({images: [], index: 0});\n  const [openPreviewImagesOverlay, setOpenPreviewImagesOverlay] = useState(false);\n  const [notificationContent, setNotificationContent] = useState<NotificationContent>();\n  const [confirmModalValue, setConfirmModalValue] = useState<ConfirmModalValue>({content: '', action: \"ok\", title: ''});\n  const [confirmModalPromise, setConfirmModalPromise] = useState(() => (_: boolean) => {});\n  const [pains, setPains] = useState<PainValue[]>([]);\n  const [settingsOverlayOpen, setSettingsOverlayOpen] = useState(false);\n\n  const userMap: Record<string, User> = useMemo(() => userList.reduce((acc: any, cur: User) => ({\n    ...acc,\n    [cur._user_id]: acc[cur._user_id] || cur,\n  }), {}), [userList]);\n\n  const imageMap: Record<string, Image[]> = useMemo(() => imageList.reduce((acc: any, cur: Image) => ({\n    ...acc,\n    [cur.bind_text_id]: [...(acc[cur.bind_text_id] || []), cur],\n  }), {}), [imageList]);\n\n  const likeMap: Record<string, Like> = useMemo(() => likeList.reduce((acc: any, cur: Like) => ({\n    ...acc,\n    [cur.id]: cur,\n  }), {}), [likeList]);\n\n  const loadUser = () => {\n    fetch(`${end_point}/user/all?$orderby=_created_at desc`)\n      .then(httpToJson)\n      .then(setUserList);\n  };\n\n  const loadImages = async () => {\n    const loadImagesLimit = async (limit: number) => {\n      const newImageList: Image[] = await fetch(`${end_point}/image/all?$orderby=_created_at desc&$limit=${limit}`).then(httpToJson);\n\n      if(imageList.length ===0){\n        setImageList(newImageList);\n        return;\n      }\n\n      const newImageListIndex = newImageList.findIndex(newImage => newImage.id === imageList[0]?.id);\n      if(newImageListIndex !== -1){\n        setImageList(prev => [...newImageList.slice(0, newImageListIndex), ...prev]);\n        return;\n      }\n      await loadImagesLimit(limit + 100);\n    }\n    await loadImagesLimit(20);\n  };\n\n  const loadLikes = () => {\n    fetch(`${end_point}/like/all`)\n      .then(httpToJson)\n      .then(setLikeList);\n  };\n\n  const handleChangePain = (index: number, value?: PainValue, ) => {\n    const sameNamePain = pains.find((pain, i) => pain.name === value?.name && i !== index);\n    if(sameNamePain) {\n      setNotificationContent({text: \"同一のpain名は設定できません\", type: 'error'});\n      return;\n    }\n    setPains(prev => {\n      const left = prev.slice(0, index);\n      const right = prev.slice(index + 1);\n      return value ? [...left, value, ...right] : [...left, ...right];\n    });\n  };\n\n  const handleSubmit = async ({text, replyToUserId, replyToTextId, files}: ComposeValue) => {\n    const params = {\n      text,\n      ...(replyToUserId ? {in_reply_to_user_id: replyToUserId}: {}),\n      ...(replyToTextId ? {in_reply_to_text_id: replyToTextId}: {}),\n    };\n    const postTextRes: Return = await fetch(`${end_point}/text`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(params)\n    }).then(httpToJson);\n    if (files) {\n      for (const file of files) {\n        const base64 = await asyncConvertBase64(file);\n        if (!base64) {\n          console.error('画像が大きすぎます');\n          setNotificationContent({text: '画像が大きすぎます', type: \"error\"});\n          continue;\n        }\n        await uploadImages({base64s: [base64], bindTextId: postTextRes.id});\n      }\n      await loadImages();\n    }\n\n    setLoadLogTrigger(prev => prev+1);\n  };\n\n  const fireConfirmModal = async (value: ConfirmModalValue) => {\n    setConfirmModalValue(value);\n    return await new Promise((resolve) => {\n      setConfirmModalPromise(() => resolve);\n    }) as boolean;\n  };\n\n  useEffect(() => {\n    loadUser();\n    setInterval(loadUser, 60_000 * 10);//10分\n\n    loadImages();\n    setInterval(loadImages, 10_000);\n\n    loadLikes();\n    setInterval(loadLikes, 60_000);//1minute\n\n    const value = localStorage.getItem(localStorageKey.pains)\n    setPains(value ? JSON.parse(value) : initialPains);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if(previewImages.images.length){\n      setOpenPreviewImagesOverlay(true);\n    }\n  }, [previewImages]);\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey.pains, JSON.stringify(pains))\n  }, [pains]);\n\n  return (\n    <StyledMain>\n      <SetPreviewImagesContext.Provider value={setPreviewImages}>\n        <LoadImagesContext.Provider value={loadImages} >\n          <ImageMapContext.Provider value={{imageMap, likeMap, userMap, fireConfirmModal, fireNotificationContent: setNotificationContent, openSettingsOverlay: () => setSettingsOverlayOpen(true) }}>\n            <ComposeContext.Provider value={{composeValue, setComposeValue}}>\n              <Compose value={composeValue} onChange={setComposeValue} onSubmit={handleSubmit} userList={userList} />\n              <div className=\"flex\">\n                {pains.map((list, index) => (\n                  <Logs\n                    key={list.name}\n                    value={list}\n                    loadLogTrigger={loadLogTrigger}\n                    onChangePain={value => handleChangePain(index, value)}\n                  />\n                ))}\n              </div>\n            </ComposeContext.Provider>\n          </ImageMapContext.Provider>\n        </LoadImagesContext.Provider>\n      </SetPreviewImagesContext.Provider>\n      <SettingsOverlay open={settingsOverlayOpen} onClose={() => setSettingsOverlayOpen(false)} pains={pains} onChangePains={setPains}/>\n      <PreviewImagesOverlay\n        open={openPreviewImagesOverlay}\n        onClose={() => setOpenPreviewImagesOverlay(false)}\n        images={previewImages.images}\n        index={previewImages.index}\n      />\n      <NotificationBar content={notificationContent} />\n      <ConfirmModal value={confirmModalValue} onClose={() => confirmModalPromise(false)} onAccept={() => confirmModalPromise(true)}/>\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  ::-webkit-scrollbar {\n    display:none;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { MainPage } from \"./MainPage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}