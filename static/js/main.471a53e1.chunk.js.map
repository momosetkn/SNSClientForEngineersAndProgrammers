{"version":3,"sources":["reportWebVitals.ts","DragDropOverlay.tsx","Constants.ts","Api.ts","SettingsOverlay.tsx","Compose.tsx","Log.tsx","Logs.tsx","PreviewImagesOverlay.tsx","NotificationBar.tsx","MainPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DragDropOverlay","onDropFile","useState","drag","setDrag","file","setFile","useEffect","undefined","document","addEventListener","ev","preventDefault","dataTransfer","items","i","length","kind","getAsFile","files","console","log","name","fromElement","StyledMain","enabled","styled","div","x","zIndexes","localStorageKey","myUser","end_point","uploadImages","a","bindTextId","fileUploader","convertBase64Promise","Promise","r","fr","FileReader","onload","e","target","result","readAsDataURL","base64","error","params","bind_text_id","fetch","method","headers","Authorization","body","JSON","stringify","res","json","all","Array","from","map","httpToJson","ok","text","SettingsOverlay","open","onClose","description","state","update","userMap","useContext","ImageMapContext","apply","value","Object","entries","id","dummyMyUser","_user_id","myUserValue","key","localStorageMyUser","localStorage","getItem","parse","setItem","StyledBackground","StyledImageOverlay","StyledHeaderContainer","className","icon","faTimesCircle","onClick","StyledForm","htmlFor","type","onChange","prev","cols","rows","Compose","onSubmit","userList","sendStatus","setSendStatus","settingsOverlayOpen","setSettingsOverlayOpen","setNotificationContent","inputRef","useRef","handleKeyup","useCallback","ctrlKey","trim","initialComposeValue","current","removeEventListener","handleChangeComposeValue","event","loading","placeholder","replyToTextId","disabled","replyToUserId","user","slice","StyledTextCounter","ref","faPaperPlane","title","index","filter","_","faCog","form","Log","Number","MIN_SAFE_INTEGER","updateTimeTrigger","setUpdateTimeTrigger","replyDestination","setReplyDestination","likeCount","setLikeCount","ComposeContext","composeValue","setComposeValue","imageMap","likeMap","loadImages","LoadImagesContext","setPreviewImages","SetPreviewImagesContext","time","useMemo","now","Date","date","_created_at","diff","getTime","timeDiff","Math","floor","localizedTime","toLocaleString","setInterval","like_count","getUser","userId","handleClickFavorite","textId","catch","err","response","status","like","nextLikeCount","handleChangeImageFile","handleClickReply","in_reply_to_text_id","StyledMeta","dateTime","StyledReplyTo","in_reply_to_user_id","StyledText","image","StyledImg","src","alt","images","faReply","faHeart","faImages","accept","multiple","hidden","StyledReplyDestinationText","y","img","Logs","onChangePainValue","loadLogTrigger","texts","setTexts","limit","setLimit","pollingIntervalTime","setPollingIntervalTime","editingPainValue","setEditingPainValue","internalLoadLogTrigger","setInternalLoadLogTrigger","openTitle","setOpenTitle","titleHeight","clearInterval","query","StyledLogs","StyledLogsTitle","StyledTitleHeader","onBlur","StyledTexts","PreviewImagesOverlay","viewingIndex","setViewingIndex","imageSize","setImageSize","keyup","setKeyup","offsetX","setOffsetX","imgElementRef","max","min","imageSrc","complete","width","naturalWidth","height","naturalHeight","getElementsByTagName","style","overflow","window","pageXOffset","left","StyledPoints","StyledPoint","NotificationTypeTable","notification","warning","NotificationBar","content","notificationMessages","setNotificationMessages","counter","setCounter","toString","setTimeout","p","StyledMain2","notificationMessage","v","createContext","MainPage","setUserList","imageList","setImageList","likeList","setLikeList","setLoadLogTrigger","previewImages","openPreviewImagesOverlay","setOpenPreviewImagesOverlay","notificationContent","encodeURI","painValues","setPainValues","reduce","acc","cur","loadUser","loadImagesLimit","newImageList","newImageListIndex","findIndex","newImage","loadLikes","handleSubmit","postTextRes","Provider","list","newList","ReactDOM","render","StrictMode","exact","path","getElementById"],"mappings":"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","file":"static/js/main.471a53e1.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from \"styled-components\";\nimport {useEffect, useState} from \"react\";\n\nexport const DragDropOverlay = ({onDropFile}:{onDropFile: (file: File) => void}) => {\n  const [drag, setDrag] = useState(false);\n  // addEventListenerを都度貼り替えるのが面倒なため、state経由でuseEffectを発火させ、onDropFileさせる\n  const [file, setFile] = useState<File | undefined>();\n\n  useEffect(() => {\n    if(file){\n      onDropFile(file);\n      setFile(undefined);\n    }\n  }, [file, onDropFile]);\n\n  useEffect(() => {\n    const handleDrop =  (ev: any) => {\n      setDrag(false);\n      ev.preventDefault();\n\n      if (ev.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          if (ev.dataTransfer.items[i].kind === 'file') {\n            const file = ev.dataTransfer.items[i].getAsFile();\n            setFile(file);\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + ev.dataTransfer.files[i].name);\n        }\n      }\n    };\n\n    const dragEnterHandler = (ev: any) =>  {\n      ev.preventDefault();\n      setDrag(true);\n    };\n\n    const dragOverHandler = (ev: any) =>  ev.preventDefault();\n\n    const handleDragLeave = (ev: any) =>  {\n      ev.preventDefault();\n      console.log('leave', ev);\n      if (!ev.fromElement){\n        setDrag(false);\n      }\n    };\n\n    document.addEventListener('drop', handleDrop);\n    document.addEventListener('dragenter', dragEnterHandler);\n    document.addEventListener('dragover', dragOverHandler);//kesu nokosu\n    document.addEventListener('dragleave', handleDragLeave);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <StyledMain enabled={drag} />\n  );\n};\n\nconst styledDragDropOverlayMargin = 16;\nconst styledDragDropOverlayBorderSize = 4;\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  width: calc(100vw - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  height: calc(100vh - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  top: 0px;\n  margin: ${styledDragDropOverlayMargin}px;\n  border-radius: 32px;\n  background: gray;\n  border: ${styledDragDropOverlayBorderSize}px dashed black;\n  opacity: 0.5;\n  display:   ${(x) =>  x.enabled ? 'block' : 'none'};\n`;\n","export const zIndexes = {\n  dragDrop: 100,\n  previewImages: 300,\n  previewImagesBackground: 200,\n  settings: 250,\n  notificationBar: 500,\n};\n\nconst appName = 'SNSClientForEngineersAndProgrammers';\n\nexport const localStorageKey = {\n  myUser: `${appName}_myUser`,\n};\n","export const end_point = \"https://versatileapi.herokuapp.com/api\";\n\ntype Base = {\n  id: string;\n  _created_at: string;\n  _updated_at: string;\n  _user_id: string;\n}\n\nexport type Text = Base & {\n  text: string;\n  in_reply_to_user_id?: string; //返信対象のUserId\n  in_reply_to_text_id?: string; //返信対象のTextId\n}\n\nexport type Image = Base & {\n  base64: string;\n  bind_text_id: string;\n}\n\nexport type User = Base & {\n  description: string;\n  name: string;\n}\n\nexport type Like = {\n  id: string;\n  _updated_at: string;\n  like_count: number;\n}\n\nexport type Return = {\n  id: string;\n}\n\nexport const uploadImages = async ({files, bindTextId}:{files: File[] | FileList, bindTextId: string}) => {\n  const fileUploader = async (file: File) => {\n    const convertBase64Promise = new Promise((r) => {\n      const fr = new FileReader();\n      fr.onload = (e) => {\n        r(e.target?.result);\n      };\n      fr.readAsDataURL(file);\n    });\n    const base64 = (await convertBase64Promise) as any as string;\n    if (base64.length > 100_000) {\n      console.error(`base64 size is ${base64.length}`);\n    }\n    const params = {\n      base64,\n      bind_text_id: bindTextId,\n    }\n    await fetch(`${end_point}/image`, {\n      method: \"POST\",\n      headers: {Authorization: \"evolution\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json()).then(x => console.log(x));\n  };\n\n  await Promise.all(Array.from(files).map(fileUploader));\n};\n\nexport const httpToJson = (res: Response) => res.ok ? res.json() : res.text();","import styled from \"styled-components\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {localStorageKey, zIndexes} from \"./Constants\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {end_point, httpToJson, Return, User} from \"./Api\";\nimport {ImageMapContext} from \"./MainPage\";\n\ntype State = {\n  name: string,\n  description: string,\n};\n\nexport const SettingsOverlay = ({open, onClose}: {open: boolean; onClose: () => void}) => {\n  const [state, update] = useState<State>({\n    name: '',\n    description: '',\n  });\n\n  const { userMap } = useContext(ImageMapContext);\n\n  const apply = async (value: State) => {\n    return await fetch(`${end_point}/user/create_user`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(value)\n    }).then(httpToJson);\n  };\n\n  const handleClose = () => {\n    apply(state);\n    onClose();\n  };\n\n  useEffect(() => {\n    (async () => {\n      // ユーザー情報のサーバーからの取得（localStorageから取得できなかったときに発動）\n      if(!Object.entries(userMap).length) return;\n\n      // localStorageから取得できてれば、ここを通らない。\n      if(state.name || state.description) return;\n\n      const res: Return = await apply({name: '', description: ''});\n      const dummyMyUser: User = await fetch(`${end_point}/user/${res.id}`, {\n        headers: {Authorization: \"HelloWorld\"},\n      }).then(httpToJson);\n\n      const myUser = userMap[dummyMyUser._user_id];\n      if(!myUser) return;\n\n      const myUserValue = {\n        name: myUser.name,\n        description: myUser.description,\n      };\n      update(myUserValue);\n      await apply(myUserValue);\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userMap]);\n\n  useEffect(() => {\n    const handleKeyup = (e: KeyboardEvent) => {\n      e.preventDefault();\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    document.addEventListener('keyup', handleKeyup, false);\n\n    // ユーザー初期値\n    const localStorageMyUser = localStorage.getItem(localStorageKey.myUser);\n    if (localStorageMyUser) {\n      update(JSON.parse(localStorageMyUser));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if(!state.name) return;\n    if(!state.description) return;\n\n    localStorage.setItem(localStorageKey.myUser, JSON.stringify(state));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n\n  return (\n    <>\n      {open ?\n        <StyledMain enabled={open} >\n          <StyledBackground />\n          <StyledImageOverlay>\n            <StyledHeaderContainer>\n              <div>Settings</div>\n              <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={handleClose}/>\n            </StyledHeaderContainer>\n            <StyledForm>\n              <div>\n                <label htmlFor=\"SettingsOverlay_name\">name</label>\n                <input\n                  name=\"name\"\n                  id=\"SettingsOverlay_name\"\n                  type=\"text\"\n                  value={state.name}\n                  onChange={e => {\n                    update(prev => ({...prev, name: e.target.value}));\n                  }}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"SettingsOverlay_description\">description</label>\n                <textarea\n                  name=\"description\"\n                  id=\"SettingsOverlay_description\"\n                  cols={30}\n                  rows={5}\n                  value={state.description}\n                  onChange={e => {\n                    update(prev => ({...prev, description: e.target.value}));\n                  }}\n                />\n              </div>\n            </StyledForm>\n          </StyledImageOverlay>\n        </StyledMain> : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.settings};\n  background: white;\n  padding: 16px;\n  border-radius: 8px;\n`;\n\nconst StyledHeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst StyledForm = styled.div`\n  & label {\n    display: block;\n    margin-top: 8px;\n  }\n`;\n","import React, {useCallback, useContext, useEffect, useRef, useState} from \"react\";\nimport { User } from \"./Api\";\nimport {ComposeValue, ImageMapContext, initialComposeValue} from \"./MainPage\";\nimport {faCog, faPaperPlane, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { DragDropOverlay } from \"./DragDropOverlay\";\nimport {SettingsOverlay} from \"./SettingsOverlay\";\n\nexport const composeHeight = 100;\n\nexport const Compose = ({\n  value,\n  onChange,\n  onSubmit,\n  userList\n}: {\n  value: ComposeValue,\n  onChange: (value: ComposeValue) => void,\n  onSubmit: (value: ComposeValue) => void;\n  userList: User[]\n}) => {\n  const [sendStatus, setSendStatus] = useState<'waiting' | 'send' | 'sending'>('waiting');\n  const [settingsOverlayOpen, setSettingsOverlayOpen] = useState(false);\n\n  const { setNotificationContent } =  useContext(ImageMapContext);\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleKeyup = useCallback((e: KeyboardEvent) => {\n    // Ctrl + Enterで送信\n    if (e.ctrlKey && e.key === 'Enter' && sendStatus === 'waiting') {\n      // ここで送信処理はせず、sendフラグの変更をuseEffectで察知させて、送ることで、古いデータを送らないようにする\n      setSendStatus('send');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDropFile = (file: File) => {\n    onChange({...value, files: [...(value.files || []), file]});\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (sendStatus === 'send' && value.text.trim()) {\n        // 他と競合して、同時に発火するのを防ぐため、一番先に実行されたものはステータスを変更しておく。\n        setSendStatus('sending');\n        try {\n          await onSubmit(value);\n          onChange(initialComposeValue);\n        } catch (e) {\n          setNotificationContent({text: 'エラー発生'});\n          console.error(e);\n        } finally {\n          setSendStatus('waiting');\n        }\n      }\n    })();\n  }, [sendStatus, value, onChange, onSubmit, setNotificationContent]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.removeEventListener(\"keyup\", handleKeyup, false);\n      inputRef.current.addEventListener(\"keyup\", handleKeyup, false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputRef.current]);\n\n  const handleChangeComposeValue = (event: any) => {\n    onChange({\n      ...value,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const loading = sendStatus !== 'waiting';\n\n  return (\n    <StyledMain>\n      <StyledForm>\n        <div className=\"flex\">\n          <input\n            type=\"text\"\n            name=\"replyToTextId\"\n            placeholder=\"ツイートへの返信\"\n            value={value.replyToTextId}\n            onChange={handleChangeComposeValue}\n            disabled={loading}\n          />\n          <select\n            name=\"replyToUserId\"\n            value={value.replyToUserId}\n            onChange={handleChangeComposeValue}\n            disabled={loading}\n          >\n            <option value=\"\">-</option>\n            {userList.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name || `匿名(${user._user_id.slice(0, 2)})`}\n              </option>\n            ))}\n          </select>\n          <StyledTextCounter error={value.text.trim().length > 280}>\n            {`${value.text.trim().length}/280`}\n          </StyledTextCounter>\n        </div>\n        <div className=\"flex\">\n          <textarea\n            name=\"text\"\n            ref={inputRef}\n            placeholder=\"今なにしてる？\"\n            rows={4}\n            cols={50}\n            value={value.text}\n            onChange={e => onChange({...value, text: e.target.value})}\n            disabled={loading}\n          />\n          <FontAwesomeIcon\n            className={!loading ? 'clickable' : ''}\n            icon={faPaperPlane}\n            title=\"post\"\n            onClick={(e) => {e.preventDefault();!loading && setSendStatus('send');}}\n          />\n          <div>\n            {value.files?.map((file, index) => (\n              <div>\n                {file.name}\n                <FontAwesomeIcon\n                  className=\"clickable ml1\"\n                  icon={faTimesCircle}\n                  onClick={() => onChange({...value, files: value.files?.filter((_, i) => i !== index)})}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </StyledForm>\n      <FontAwesomeIcon className=\"clickable ml1\" icon={faCog} onClick={() => setSettingsOverlayOpen(true)}/>\n      <SettingsOverlay open={settingsOverlayOpen} onClose={() => setSettingsOverlayOpen(false)}/>\n      <DragDropOverlay onDropFile={handleDropFile}/>\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  height: ${composeHeight}px;\n  display: flex;\n`;\n\nconst StyledForm = styled.form`\n  width: 500px;\n`;\n\nconst StyledTextCounter = styled.div<{error: boolean}>`\n  color: ${(x) => x.error ? 'red': 'black'};\n`;\n","import React, { ChangeEvent, useContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport {Text, end_point, uploadImages, Like, httpToJson} from \"./Api\";\nimport {faHeart, faImages, faReply, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './index.css';\nimport styled from \"styled-components\";\nimport {\n  ComposeContext,\n  ImageMapContext,\n  LoadImagesContext,\n  SetPreviewImagesContext\n} from \"./MainPage\";\n\nexport const Log = ({\n  text,\n  onClose,\n}: {\n  text: Text;\n  onClose?: () => void\n}) => {\n  const [updateTimeTrigger, setUpdateTimeTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [replyDestination, setReplyDestination] = useState<{\n    text?: Text;\n    open: boolean;\n  }>({open: false});\n  const [likeCount, setLikeCount] = useState(0);\n\n  const { composeValue, setComposeValue } = useContext(ComposeContext);\n  const {imageMap, likeMap, userMap} = useContext(ImageMapContext);\n  const loadImages = useContext(LoadImagesContext);\n  const setPreviewImages = useContext(SetPreviewImagesContext);\n\n  const time = useMemo(() => {\n    const now = new Date();\n    const date = new Date(text._created_at);\n    const diff = (now.getTime() - date.getTime()) / 1_000;\n    let timeDiff = \"\";\n    if (diff < 60) {\n      timeDiff = `${Math.floor(diff)}秒前`;\n    } else if (diff / 60 < 60) {\n      timeDiff = `${Math.floor(diff / 60)}分前`;\n    } else if (diff / 60 / 60 < 24) {\n      timeDiff = `${Math.floor(diff / 60 / 60)}時間前`;\n    } else {\n      timeDiff = `${Math.floor(diff / 60 / 60 / 24)}日前`;\n    }\n    return {\n      timeDiff,\n      time: text._created_at,\n      localizedTime: date.toLocaleString(\"ja-JP\"),\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text, userMap, updateTimeTrigger]);\n\n  useEffect(() => {\n    setInterval(() => setUpdateTimeTrigger(prev => prev + 1), 5_000);\n  }, []);\n\n  useEffect(() => {\n    setLikeCount(likeMap[text.id]?.like_count || 0);\n  }, [likeMap, text.id]);\n\n  const getUser = (userId: string) => {\n    return userMap[userId]?.name || `匿名(${userId.slice(0, 2)})`;\n  };\n\n  const handleReplyTo = (x: { textId: string, userId: string }) => {\n    setComposeValue({...composeValue, replyToTextId: x.textId,  replyToUserId: x.userId})\n  };\n\n  const handleClickFavorite = async ({textId}: { textId: string }) => {\n    const like: Like | undefined = await fetch(`${end_point}/like/${textId}`)\n      .then(httpToJson).catch(err => {\n        if (err?.response?.status === 404) {\n          // 0件なので無視\n        } else {\n          throw err;\n        }\n      });\n\n    const nextLikeCount = (like?.like_count || 0) + 1;\n    const params = {\n      like_count: nextLikeCount\n    };\n    await fetch(`${end_point}/like/${textId}`, {\n      method: \"PUT\",\n      headers: {Authorization: \"LOVE\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json())\n      .then((_) => {\n        setLikeCount(nextLikeCount);\n      });\n  };\n\n  const handleChangeImageFile = async (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n\n    await uploadImages({files: e.target.files, bindTextId: text.id});\n\n    loadImages();\n  };\n\n  const handleClickReply = async () => {\n      if(!text.in_reply_to_text_id) return;\n\n      if(replyDestination.text){\n        setReplyDestination(prev => ({\n          ...prev,\n          open: true,\n        }))\n        return;\n      }\n      await fetch(`${end_point}/text/${text.in_reply_to_text_id}`)\n        .then((res) => (res.json()))\n        .then(x => {\n          setReplyDestination({\n            text: x,\n            open: true,\n          })\n        });\n    };\n\n  return (\n    <StyledMain>\n      <StyledMeta>\n        <div\n          title={userMap[text._user_id]?.description || text._user_id}>\n          {getUser(text._user_id)}\n        </div>\n        <div>\n          <time dateTime={time.time} title={time.localizedTime}>\n            {time.timeDiff}\n          </time>\n          {onClose ?\n            <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={onClose}/>\n            : null\n          }\n        </div>\n      </StyledMeta>\n      <div>\n        <StyledReplyTo onClick={handleClickReply} >\n          {text.in_reply_to_text_id ? `To: ${text.in_reply_to_text_id} `: ''}\n        </StyledReplyTo>\n        <div>\n          {text.in_reply_to_user_id ? `@${getUser(text.in_reply_to_user_id)} `: ''}\n        </div>\n        <StyledText>\n          {text.text}\n        </StyledText>\n      </div>\n      {imageMap[text.id]?.length ?\n        imageMap[text.id].map((image, index) => (\n          <div key={image.id}>\n            <StyledImg\n              className=\"clickable\"\n              src={image.base64}\n              alt={`${getUser(text._user_id)}さんが貼り付けた画像`}\n              title={`${getUser(image._user_id)}さんが貼り付けた画像`}\n              onClick={() => setPreviewImages({images: imageMap[text.id].map(x => x.base64), index})}\n            />\n          </div>\n        ))\n        : null\n      }\n      <div className=\"flex mt1\">\n        <FontAwesomeIcon\n          className=\"clickable\"\n          icon={faReply}\n          title=\"reply\"\n          onClick={() => handleReplyTo({textId: text.id, userId: text._user_id})}\n        />\n        <FontAwesomeIcon\n          className=\"clickable ml2\"\n          icon={faHeart}\n          title=\"favorite\"\n          onClick={() => handleClickFavorite({textId: text.id})}\n        />\n        {likeCount}\n        <label htmlFor={`image_upload_${text.id}`}>\n          <FontAwesomeIcon\n            className=\"clickable ml2\"\n            icon={faImages}\n            title=\"images\"\n          />\n          <input\n            id={`image_upload_${text.id}`}\n            type=\"file\"\n            accept=\"image/*\"\n            multiple\n            hidden\n            onChange={handleChangeImageFile}\n          />\n        </label>\n      </div>\n      {\n        replyDestination.open && replyDestination.text?\n          (\n            <StyledReplyDestinationText\n              x={onClose ? 0 : 8}\n              y={16}\n            >\n              <Log\n                text={replyDestination.text}\n                onClose={() => setReplyDestination(prev => ({...prev, open: false}))}\n              />\n            </StyledReplyDestinationText>\n          )\n          : null\n      }\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  border: 1px solid #ccc;\n  padding: 8px;\n`;\n\nconst StyledMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledReplyTo = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst StyledText = styled.div`\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  padding-top: 2px;\n`;\n\nconst StyledImg = styled.img`\n  width: 100%;\n`;\n\nconst StyledReplyDestinationText = styled.div<{x: number, y: number}>`\n  margin-left: ${({x}) => x}px;\n  margin-top: ${({y}) => y}px;\n`;\n","import {end_point, httpToJson, Text} from \"./Api\";\nimport React, {useEffect, useState} from \"react\";\nimport {Log} from \"./Log\";\nimport styled from \"styled-components\";\nimport {composeHeight} from \"./Compose\";\nimport {PainValue} from \"./MainPage\";\n\nconst titleHeaderHeight = 22;\n\nexport const Logs = ({\n  value,\n  onChangePainValue,\n  loadLogTrigger,\n} : {\n  value: PainValue,\n  onChangePainValue: (value: PainValue) => void,\n  loadLogTrigger?: number,\n}) => {\n  const [texts, setTexts] = useState<Text[]>([]);\n  const [limit, setLimit] = useState(20);\n  const [pollingIntervalTime, setPollingIntervalTime] = useState(20);\n  const [editingPainValue, setEditingPainValue] = useState(value);\n  // Logs個別のトリガー\n  const [internalLoadLogTrigger, setInternalLoadLogTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [openTitle, setOpenTitle] = useState(false);\n\n  const titleHeight = (openTitle ? 300 : 0 ) + titleHeaderHeight;\n\n  const loadLog = () => {\n    fetch(`${end_point}/text/all?${value.query}&$limit=${limit}`)\n      .then(httpToJson)\n      .then(setTexts).catch(console.error);\n  };\n\n  const handleClickLoadMore = () => {\n    setLimit(prev => prev + 20);\n  };\n\n  useEffect(() => {\n    const id = setInterval(() => setInternalLoadLogTrigger(prev => prev + 1), pollingIntervalTime * 1_000);\n\n    return () => clearInterval(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pollingIntervalTime]);\n\n  useEffect(() => loadLog(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [loadLogTrigger, internalLoadLogTrigger, limit]);\n\n  useEffect(() => setEditingPainValue(value),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [value]);\n\n  return (\n    <StyledLogs>\n      <StyledLogsTitle\n        titleHeight={titleHeight}\n      >\n        <StyledTitleHeader\n          className=\"clickable\"\n          onClick={() => {\n            setOpenTitle(prev => !prev);\n          }}\n        >\n          {value.name}\n        </StyledTitleHeader>\n        <StyledForm className=\"p2\">\n          <div>\n            <label htmlFor=\"Logs_name\">name</label>\n            <input\n              name=\"name\"\n              id=\"Logs_name\"\n              type=\"text\"\n              value={editingPainValue.name}\n              onChange={e => {\n                setEditingPainValue(prev => ({...prev, name: e.target.value}));\n              }}\n              onBlur={() => onChangePainValue(editingPainValue)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"Logs_query\">query</label>\n            <textarea\n              name=\"query\"\n              id=\"Logs_query\"\n              cols={30}\n              rows={5}\n              value={editingPainValue.query}\n              onChange={e => {\n                setEditingPainValue(prev => ({...prev, query: e.target.value}));\n              }}\n              onBlur={() => onChangePainValue(editingPainValue)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"Logs_limit\">limit</label>\n            <input\n              name=\"limit\"\n              id=\"Logs_limit\"\n              type=\"number\"\n              value={limit}\n              onChange={e => setLimit(Number(e.target.value))}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"Logs_polling_interval_time\">polling interval time</label>\n            <input\n              name=\"polling_interval_time\"\n              id=\"Logs_polling_interval_time\"\n              type=\"number\"\n              value={pollingIntervalTime}\n              onChange={e => setPollingIntervalTime(Number(e.target.value))}\n            />\n          </div>\n        </StyledForm>\n      </StyledLogsTitle>\n      <StyledTexts titleHeight={titleHeight}>\n        {texts.map(text => (\n          <Log\n            key={text.id}\n            text={text}\n          />\n        ))}\n        <div className=\"clickable\" onClick={handleClickLoadMore}>load more</div>\n      </StyledTexts>\n    </StyledLogs>\n  );\n}\n\nconst StyledLogs = styled.div`\n  width: 320px;\n`;\n\nconst StyledLogsTitle = styled.div<{titleHeight: number}>`\n  height: ${(x) => x.titleHeight}px;\n  overflow: hidden;\n  transition: all 300ms 0s ease;\n`;\n\nconst StyledTitleHeader = styled.div`\n  height: ${titleHeaderHeight}px;\n`;\n\nconst StyledForm = styled.div`\n  & label {\n    display: block;\n    margin-top: 8px;\n  }\n`;\n\nconst StyledTexts = styled.div<{titleHeight: number}>`\n  height: calc(100vh - ${(x) => composeHeight + x.titleHeight}px);\n  overflow-y: auto;\n`;\n","import styled from \"styled-components\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {zIndexes} from \"./Constants\";\n\nexport const PreviewImagesOverlay = ({open, onClose, images, index}: {open: boolean; onClose: () => void; images: string[], index: number}) => {\n  const [viewingIndex, setViewingIndex] = useState(index);\n  const [imageSize, setImageSize] = useState<{width: number, height: number} | undefined>();\n  const [keyup, setKeyup] = useState<string | undefined>();\n  const [offsetX, setOffsetX] = useState<number>(0);\n  const imgElementRef = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    setViewingIndex(index);\n  }, [index]);\n\n  useEffect(() => {\n    if (keyup === 'Escape') {\n      onClose();\n    } else if (keyup === 'ArrowLeft') {\n      setViewingIndex(prev => Math.max(prev - 1, 0));\n    } else if (keyup === 'ArrowRight') {\n      setViewingIndex(prev => Math.min(prev + 1, images.length - 1));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keyup, setViewingIndex]);\n\n  useEffect(() => {\n    const handleKeyup = (e: KeyboardEvent) => {\n      e.preventDefault();\n      setKeyup(e.key);\n    };\n    document.addEventListener('keyup', handleKeyup, false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const imageSrc = images[viewingIndex];\n\n  useEffect(() => {\n    if(imgElementRef.current && imgElementRef.current.complete ){\n      setImageSize({\n        width: imgElementRef.current.naturalWidth,\n        height: imgElementRef.current.naturalHeight,\n      });\n    } else {\n      setImageSize(undefined);\n    }\n  }, [imageSrc, imgElementRef.current?.complete]);\n\n  useEffect(() => {\n    const bodyElement = document.getElementsByTagName('body')[0];\n    bodyElement.style.overflow = open ? 'hidden' : 'initial';\n    if(open){\n      setOffsetX(window.pageXOffset);\n    }\n  }, [open]);\n\n  return (\n    <>\n      {open ?\n        <StyledMain left={offsetX}>\n          <StyledBackground onClick={() => onClose()} />\n          <StyledImageOverlay>\n            <img ref={imgElementRef} src={imageSrc} {...imageSize}  alt=\"画像\" />\n            {images.length > 0 &&\n              <StyledPoints>\n                {[...Array(images.length)].map((_, i) => (\n                  <StyledPoint key={i} current={i === viewingIndex} />\n                ))}\n              </StyledPoints>\n            }\n          </StyledImageOverlay>\n        </StyledMain>\n        : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{left: number}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n  left: ${(x) => x.left}px;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.previewImages};\n`;\n\nconst StyledPoints = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledPoint = styled.div<{current: boolean}>`\n  height: 30px;\n  width: 12px;\n  color: ${(x) => x.current ? 'black' : '#ccc'};\n  ::after {\n    content: '●';\n  }\n`;\n","import styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { zIndexes } from \"./Constants\";\n\nexport type NotificationContent = { text: string, type?: NotificationType };\n\ntype NotificationType = 'notification' | 'warning'  | 'error';\nconst NotificationTypeTable: Record<NotificationType, string> = {\n  notification : 'black',\n  warning: 'FFA500',\n  error: 'red',\n}\n\nconst notificationTypeMapping: (value?: NotificationType) => string = v => NotificationTypeTable[v || 'notification'];\n\ntype Props = { content?: NotificationContent };\n\nexport const NotificationBar = ({content}: Props) => {\n  const [notificationMessages, setNotificationMessages] = useState<({ id: string; content: NotificationContent })[]>([]);\n  const [counter, setCounter] = useState(Number.MIN_SAFE_INTEGER);\n\n  useEffect(() => {\n    if(!content) return;\n\n    const id = counter.toString();\n    setNotificationMessages(prev => [...prev, {...{content}, id}]);\n\n    setTimeout(() => {\n      setNotificationMessages(prev => prev.filter(x => x.id !== id));\n    }, 50_000);\n    setCounter(p => p + 1);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content]);\n\n  return (\n    <StyledMain2>\n      {notificationMessages.map((notificationMessage, index) => (\n        <StyledMain key={notificationMessage.id} type={notificationMessage.content?.type} >\n          {notificationMessage.content.text}\n        </StyledMain>\n      ))}\n    </StyledMain2>\n  );\n};\n\nconst StyledMain2 = styled.div`\n  position: absolute;\n  bottom: 50px;\n  left: 40px;\n`;\n\nconst StyledMain = styled.div<{type?: NotificationType}>`\n  z-index: ${zIndexes.notificationBar};\n  background: black;\n  color: white;\n  border-radius: 10px;\n  margin-top: 16px;\n  padding: 8px 16px;\n  color: ${x => notificationTypeMapping(x.type)};\n`;\n","import React, { createContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { Compose } from \"./Compose\";\nimport {end_point, User, Image, uploadImages, Return, Like, httpToJson} from \"./Api\";\nimport './index.css';\nimport styled from \"styled-components\";\nimport {Logs} from \"./Logs\";\nimport {PreviewImagesOverlay} from \"./PreviewImagesOverlay\";\nimport {NotificationBar, NotificationContent} from \"./NotificationBar\";\n\nexport type ComposeValue = { text: string, replyToTextId: string, replyToUserId: string; files?: File[]}\n\nexport const initialComposeValue: ComposeValue = {text: \"\", replyToTextId: \"\", replyToUserId: \"\"};\n\nexport const ComposeContext =\n  createContext<{ composeValue: ComposeValue, setComposeValue: (value: ComposeValue) => void }>(\n    {composeValue: initialComposeValue, setComposeValue: (_: ComposeValue) => {}}\n  );\n\n// TODO rename\nexport const ImageMapContext = createContext<{\n  imageMap: Record<string, Image[]>,\n  likeMap: Record<string, Like>,\n  userMap: Record<string, User>,\n  setNotificationContent: (value: NotificationContent) => void,\n}>({\n  imageMap: {},\n  likeMap: {},\n  userMap: {},\n  setNotificationContent: (_: NotificationContent) => {},\n});\n\nexport const LoadImagesContext = createContext<() => void>(() => {});\n\nexport const SetPreviewImagesContext = createContext<(params: {images: string[], index: number}) => void>(() => {});\n\nexport type PainValue = {\n  name: string;\n  query: string;\n};\n\nexport const MainPage = () => {\n  const [userList, setUserList] = useState<User[]>([]);\n  const [imageList, setImageList] = useState<Image[]>([]);\n  const [likeList, setLikeList] = useState<Like[]>([]);\n  const [composeValue, setComposeValue] = useState<ComposeValue>(initialComposeValue);\n  const [loadLogTrigger, setLoadLogTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [previewImages, setPreviewImages] = useState<{images: string[], index: number}>({images: [], index: 0});\n  const [openPreviewImagesOverlay, setOpenPreviewImagesOverlay] = useState(false);\n  const [notificationContent, setNotificationContent] = useState<NotificationContent>();\n  // TODO: localstorage?\n  const [painValues, setPainValues] = useState<PainValue[]>( [\n    {\n      name: 'All',\n      query: encodeURI(\"$filter=_user_id ne 'd9ecf9245defb6b07cb86fe92a6fde9e735fc9f9'&$orderby=_created_at desc\"),\n    },\n    {\n      name: 'To me',\n      query: encodeURI(\"$filter=in_reply_to_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc\")\n    },\n    {\n      name: 'Self',\n      query: encodeURI(\"$filter=_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc\")\n    },\n  ]);\n\n  const userMap: Record<string, User> = useMemo(() => userList.reduce((acc: any, cur: User) => ({\n    ...acc,\n    [cur._user_id]: acc[cur._user_id] || cur,\n  }), {}), [userList]);\n\n  const imageMap: Record<string, Image[]> = useMemo(() => imageList.reduce((acc: any, cur: Image) => ({\n    ...acc,\n    [cur.bind_text_id]: [...(acc[cur.bind_text_id] || []), cur],\n  }), {}), [imageList]);\n\n  const likeMap: Record<string, Like> = useMemo(() => likeList.reduce((acc: any, cur: Like) => ({\n    ...acc,\n    [cur.id]: cur,\n  }), {}), [likeList]);\n\n  const loadUser = () => {\n    fetch(`${end_point}/user/all?$orderby=_created_at desc`)\n      .then(httpToJson)\n      .then(setUserList);\n  };\n\n  const loadImages = async () => {\n    const loadImagesLimit = async (limit: number) => {\n      const newImageList: Image[] = await fetch(`${end_point}/image/all?$orderby=_created_at desc&$limit=${limit}`).then(httpToJson);\n\n      if(imageList.length ===0){\n        setImageList(newImageList);\n        return;\n      }\n\n      const newImageListIndex = newImageList.findIndex(newImage => newImage.id === imageList[0]?.id);\n      if(newImageListIndex !== -1){\n        setImageList(prev => [...newImageList.slice(0, newImageListIndex), ...prev]);\n        return;\n      }\n      await loadImagesLimit(limit + 100);\n    }\n    await loadImagesLimit(20);\n  };\n\n  const loadLikes = () => {\n    fetch(`${end_point}/like/all`)\n      .then(httpToJson)\n      .then(setLikeList);\n  };\n\n  const handleSubmit = async ({text, replyToUserId, replyToTextId, files}: ComposeValue) => {\n    const params = {\n      text,\n      ...(replyToUserId ? {in_reply_to_user_id: replyToUserId}: {}),\n      ...(replyToTextId ? {in_reply_to_text_id: replyToTextId}: {}),\n    };\n    const postTextRes: Return = await fetch(`${end_point}/text`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(params)\n    }).then(httpToJson);\n    files && await uploadImages({files, bindTextId: postTextRes.id});\n\n    await loadImages();\n    setLoadLogTrigger(prev => prev+1);\n  };\n\n  useEffect(() => {\n    loadUser();\n    setInterval(loadUser, 60_000 * 10);//10分\n\n    loadImages();\n    setInterval(loadImages, 10_000);\n\n    loadLikes();\n    setInterval(loadLikes, 60_000);//1minute\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  useEffect(() => {\n    if(previewImages.images.length){\n      setOpenPreviewImagesOverlay(true);\n    }\n  }, [previewImages]);\n\n  return (\n    <StyledMain>\n      <SetPreviewImagesContext.Provider value={setPreviewImages}>\n        <LoadImagesContext.Provider value={loadImages} >\n          <ImageMapContext.Provider value={{imageMap, likeMap, userMap, setNotificationContent }}>\n            <ComposeContext.Provider value={{composeValue, setComposeValue}}>\n              <Compose value={composeValue} onChange={setComposeValue} onSubmit={handleSubmit} userList={userList} />\n              <div className=\"flex\">\n                {painValues.map((list, index) => (\n                  <Logs\n                    key={list.name}\n                    value={list}\n                    loadLogTrigger={loadLogTrigger}\n                    onChangePainValue={value => {\n                      setPainValues(prev => {\n                        const newList = [...prev];\n                        newList[index] = value;\n                        return newList\n                      })\n                    }}\n                  />\n                ))}\n              </div>\n            </ComposeContext.Provider>\n          </ImageMapContext.Provider>\n        </LoadImagesContext.Provider>\n      </SetPreviewImagesContext.Provider>\n      <PreviewImagesOverlay\n        open={openPreviewImagesOverlay}\n        onClose={() => setOpenPreviewImagesOverlay(false)}\n        images={previewImages.images}\n        index={previewImages.index}\n      />\n      <NotificationBar content={notificationContent} />\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  ::-webkit-scrollbar {\n    display:none;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { MainPage } from \"./MainPage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}