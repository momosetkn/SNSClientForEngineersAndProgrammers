{"version":3,"sources":["reportWebVitals.ts","Compose.tsx","Api.ts","MainPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialValue","text","replyToUserId","Compose","onSubmit","userList","useState","composeValue","setComposeValue","send","setSend","inputRef","useRef","handleKeydown","e","ctrlKey","keyCode","useEffect","a","trim","current","addEventListener","name","value","onChange","event","prev","target","map","user","id","_user_id","slice","ref","placeholder","rows","type","onClick","preventDefault","end_point","MainPage","texts","setTexts","confirm","setConfirm","setUserList","userMap","useMemo","reduce","acc","cur","reloadLog","fetch","res","json","handleSubmit","replyToTextId","params","in_reply_to_user_id","in_reply_to_text_id","method","headers","Authorization","body","JSON","stringify","x","console","log","setInterval","Log","Number","MIN_SAFE_INTEGER","updateTimeTrigger","setUpdateTimeTrigger","time","now","Date","date","_created_at","diff","getTime","timeDiff","Math","floor","localizedTime","toLocaleString","getUser","userId","dateTime","title","description","ReactDOM","render","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.f3270796.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { User } from \"./Api\";\n\ntype ComposeValue = { text: string, replyToUserId: string }\n\nconst initialValue: ComposeValue = {text: \"\", replyToUserId: \"\"};\n\nexport const Compose = ({onSubmit, userList}: { onSubmit: (value: ComposeValue) => void; userList: User[] }) => {\n  const [composeValue, setComposeValue] = useState<ComposeValue>(initialValue);\n  const [send, setSend] = useState(false);\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleKeydown = (e: KeyboardEvent) => {\n    // Ctrl + Enterで送信\n    if (e.ctrlKey && e.keyCode === 13 && !send) {\n      // ここで送信処理はせず、sendフラグの変更をuseEffectで察知させて、送ることで、古いデータを送らないようにする\n      setSend(true);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (send && composeValue.text.trim()) {\n        setSend(false);\n        onSubmit(composeValue);\n        setComposeValue(initialValue);\n      }\n    })();\n  }, [send, composeValue, onSubmit]);\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.addEventListener(\"keydown\", handleKeydown, false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputRef.current]);\n\n  const handleChangeComposeValue = (event: any) => {\n    setComposeValue((prev) => ({\n      ...prev,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return (\n    <form>\n      <select\n        name=\"replyToUserId\"\n        value={composeValue.replyToUserId}\n        onChange={handleChangeComposeValue}\n      >\n        <option value=\"\">-</option>\n        {userList.map(user => (\n          <option key={user.id} value={user.id}>\n            {user.name || `匿名(${user._user_id.slice(0, 2)})`}\n          </option>\n        ))}\n      </select>\n      <textarea\n        name=\"text\"\n        ref={inputRef}\n        placeholder=\"今なにしてる？\"\n        rows={4}\n        value={composeValue.text}\n        onChange={e => setComposeValue(prev => ({...prev, text: e.target.value}))}\n      />\n      <input type=\"submit\" onClick={(e) => {e.preventDefault();setSend(true);}} value=\"send\" />\n    </form>\n  );\n};\n","export const end_point = \"https://versatileapi.herokuapp.com/api\";\n\ntype Base = {\n  id: string;\n  _created_at: string;\n  _updated_at: string;\n  _user_id: string;\n}\n\nexport type Text = Base & {\n  text: string;\n  in_reply_to_user_id?: string; //返信対象のUserId\n  in_reply_to_text_id?: string; //返信対象のTextId\n}\n\nexport type User = Base & {\n  description: string;\n  name: string;\n}","import React, { useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { Compose } from \"./Compose\";\nimport { end_point, User, Text } from \"./Api\";\n\nexport const MainPage = () => {\n  const [texts, setTexts] = useState<Text[]>([]);\n  const [confirm, setConfirm] = useState(false);\n  const [userList, setUserList] = useState<User[]>([]);\n  const userMap: Record<string, User> = useMemo(() => userList.reduce((acc: any, cur: { id: any; }) => ({\n    ...acc,\n    [cur.id]: cur\n  }), {}), [userList]);\n\n  const reloadLog = () => {\n    fetch(`${end_point}/text/all?$orderby=_created_at%20desc&$limit=60`)\n      .then((res) => (res.json()))\n      .then(setTexts);\n  };\n\n  const handleSubmit = async ({text, replyToUserId, replyToTextId}: { text: string, replyToUserId?: string, replyToTextId?: string} ) => {\n    const params = {\n      text,\n      ...(replyToUserId ? {in_reply_to_user_id: replyToUserId}: {}),\n      ...(replyToTextId ? {in_reply_to_text_id: replyToTextId}: {}),\n    };\n    await fetch(`${end_point}/text`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(params)\n    }).then((res) => res.json()).then(x => console.log(x));\n    reloadLog();\n  };\n\n  useEffect(() => {\n    reloadLog();\n    setInterval(reloadLog, 30_000);\n\n    (async () => {\n      // @ts-ignore\n      await fetch(`${end_point}/user/all`)\n        .then((res) => (res.json()))\n        .then(setUserList);\n    })()\n  }, []);\n\n  return (\n    <>\n      {confirm ? (\n        <div>\n          <Compose onSubmit={handleSubmit} userList={userList}/>\n          {texts.map(text => (\n            <Log key={text.id} text={text} userMap={userMap}/>\n          ))}\n        </div>\n      ) : (\n        <div>\n          あなたはエンジニア・プログラマですか？\n          <button onClick={() => setConfirm(true)}>はい</button>\n        </div>\n      )\n      }\n    </>\n  );\n}\n\nconst Log = ({text, userMap}: { text: Text; userMap: Record<string, User> }) => {\n  const [updateTimeTrigger, setUpdateTimeTrigger] = useState(Number.MIN_SAFE_INTEGER);\n\n  const time = useMemo(() => {\n    const now = new Date();\n    const date = new Date(text._created_at);\n    const diff = (now.getTime() - date.getTime()) / 1_000;\n    let timeDiff = \"\";\n    if (diff < 60) {\n      timeDiff = `${Math.floor(diff)}秒前`;\n    } else if (diff / 60 < 60) {\n      timeDiff = `${Math.floor(diff / 60)}分前`;\n    } else if (diff / 60 / 60 < 24) {\n      timeDiff = `${Math.floor(diff / 60 / 60)}時間前`;\n    } else {\n      timeDiff = `${Math.floor(diff / 60 / 60 / 24)}日前`;\n    }\n    return {\n      timeDiff,\n      time: text._created_at,\n      localizedTime: date.toLocaleString(\"ja-JP\"),\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text, userMap, updateTimeTrigger]);\n\n  useEffect(() => {\n    setInterval(() => setUpdateTimeTrigger(prev => prev + 1), 5_000);\n  }, []);\n\n  const getUser = (userId: string) => {\n    return userMap[userId]?.name || `匿名(${userId.slice(0, 2)})`;\n  }\n\n  return (\n    <div>\n      <div>\n        <time dateTime={time.time} title={time.localizedTime}>\n          {time.timeDiff}\n        </time>\n      </div>\n      <div\n        title={userMap[text._user_id]?.description || text._user_id}>\n        {getUser(text._user_id)}\n      </div>\n      <div>\n        <pre>\n          {text.in_reply_to_user_id ? `@${getUser(text.in_reply_to_user_id)} `: ''}\n          {text.text}\n        </pre>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { MainPage } from \"./MainPage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}