{"version":3,"sources":["reportWebVitals.ts","DragDropOverlay.tsx","Constants.ts","Api.ts","SettingsOverlay.tsx","Compose.tsx","Log.tsx","Logs.tsx","PreviewImagesOverlay.tsx","NotificationBar.tsx","MainPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DragDropOverlay","onDropFile","useState","drag","setDrag","file","setFile","useEffect","undefined","document","addEventListener","ev","preventDefault","dataTransfer","items","i","length","kind","getAsFile","files","console","log","name","fromElement","StyledMain","enabled","styled","div","x","zIndexes","end_point","uploadImages","a","bindTextId","fileUploader","convertBase64Promise","Promise","r","fr","FileReader","onload","e","target","result","readAsDataURL","base64","error","params","bind_text_id","fetch","method","headers","Authorization","body","JSON","stringify","res","json","all","Array","from","map","httpToJson","ok","text","SettingsOverlay","open","onClose","description","state","update","userMap","useContext","ImageMapContext","apply","value","replaceAll","String","raw","Object","entries","id","dummyMyUser","myUser","_user_id","myUserValue","StyledBackground","StyledImageOverlay","className","icon","faTimesCircle","onClick","type","onChange","prev","cols","rows","Compose","onSubmit","userList","send","setSend","settingsOverlayOpen","setSettingsOverlayOpen","setNotificationContent","inputRef","useRef","handleKeyup","useCallback","ctrlKey","key","trim","initialComposeValue","current","removeEventListener","handleChangeComposeValue","event","StyledForm","placeholder","replyToTextId","replyToUserId","user","slice","StyledTextCounter","ref","faPaperPlane","title","index","filter","_","faCog","Log","Number","MIN_SAFE_INTEGER","updateTimeTrigger","setUpdateTimeTrigger","replyDestination","setReplyDestination","likeCount","setLikeCount","ComposeContext","composeValue","setComposeValue","imageMap","likeMap","loadImages","LoadImagesContext","setPreviewImages","SetPreviewImagesContext","time","useMemo","now","Date","date","_created_at","diff","getTime","timeDiff","Math","floor","localizedTime","toLocaleString","setInterval","like_count","getUser","userId","handleClickFavorite","textId","catch","err","response","status","like","nextLikeCount","handleChangeImageFile","handleClickReply","in_reply_to_text_id","StyledMeta","dateTime","StyledReplyTo","in_reply_to_user_id","StyledText","image","StyledImg","src","alt","images","faReply","faHeart","htmlFor","faImages","accept","multiple","hidden","StyledReplyDestinationText","y","img","Logs","onChangePainValue","loadLogTrigger","texts","setTexts","limit","setLimit","editingPainValue","setEditingPainValue","loadLogTrigger2","setLoadLogTrigger2","openTitle","setOpenTitle","titleHeight","query","StyledLogs","StyledLogsTitle","StyledTitleHeader","onBlur","StyledTexts","PreviewImagesOverlay","viewingIndex","setViewingIndex","imageSize","setImageSize","keyup","setKeyup","offsetX","setOffsetX","imgElementRef","max","min","imageSrc","complete","width","naturalWidth","height","naturalHeight","getElementsByTagName","style","overflow","window","pageXOffset","left","StyledPoints","StyledPoint","NotificationTypeTable","notification","warning","NotificationBar","content","notificationMessages","setNotificationMessages","counter","setCounter","toString","setTimeout","p","StyledMain2","notificationMessage","v","createContext","MainPage","setUserList","imageList","setImageList","likeList","setLikeList","setLoadLogTrigger","previewImages","openPreviewImagesOverlay","setOpenPreviewImagesOverlay","notificationContent","encodeURI","painValues","setPainValues","reduce","acc","cur","loadUser","loadImagesLimit","newImageList","newImageListIndex","findIndex","newImage","loadLikes","handleSubmit","postTextRes","Provider","list","newList","ReactDOM","render","StrictMode","exact","path","getElementById"],"mappings":"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","file":"static/js/main.aa7b0304.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from \"styled-components\";\nimport {useEffect, useState} from \"react\";\n\nexport const DragDropOverlay = ({onDropFile}:{onDropFile: (file: File) => void}) => {\n  const [drag, setDrag] = useState(false);\n  // addEventListenerを都度貼り替えるのが面倒なため、state経由でuseEffectを発火させ、onDropFileさせる\n  const [file, setFile] = useState<File | undefined>();\n\n  useEffect(() => {\n    if(file){\n      onDropFile(file);\n      setFile(undefined);\n    }\n  }, [file, onDropFile]);\n\n  useEffect(() => {\n    const handleDrop =  (ev: any) => {\n      setDrag(false);\n      ev.preventDefault();\n\n      if (ev.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          if (ev.dataTransfer.items[i].kind === 'file') {\n            const file = ev.dataTransfer.items[i].getAsFile();\n            setFile(file);\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + ev.dataTransfer.files[i].name);\n        }\n      }\n    };\n\n    const dragEnterHandler = (ev: any) =>  {\n      ev.preventDefault();\n      setDrag(true);\n    };\n\n    const dragOverHandler = (ev: any) =>  ev.preventDefault();\n\n    const handleDragLeave = (ev: any) =>  {\n      ev.preventDefault();\n      console.log('leave', ev);\n      if (!ev.fromElement){\n        setDrag(false);\n      }\n    };\n\n    document.addEventListener('drop', handleDrop);\n    document.addEventListener('dragenter', dragEnterHandler);\n    document.addEventListener('dragover', dragOverHandler);//kesu nokosu\n    document.addEventListener('dragleave', handleDragLeave);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <StyledMain enabled={drag} />\n  );\n};\n\nconst styledDragDropOverlayMargin = 16;\nconst styledDragDropOverlayBorderSize = 4;\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  width: calc(100vw - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  height: calc(100vh - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  top: 0px;\n  margin: ${styledDragDropOverlayMargin}px;\n  border-radius: 32px;\n  background: gray;\n  border: ${styledDragDropOverlayBorderSize}px dashed black;\n  opacity: 0.5;\n  display:   ${(x) =>  x.enabled ? 'block' : 'none'};\n`;\n","export const zIndexes = {\n  dragDrop: 100,\n  previewImages: 300,\n  previewImagesBackground: 200,\n  settings: 250,\n  notificationBar: 500,\n};\n","export const end_point = \"https://versatileapi.herokuapp.com/api\";\n\ntype Base = {\n  id: string;\n  _created_at: string;\n  _updated_at: string;\n  _user_id: string;\n}\n\nexport type Text = Base & {\n  text: string;\n  in_reply_to_user_id?: string; //返信対象のUserId\n  in_reply_to_text_id?: string; //返信対象のTextId\n}\n\nexport type Image = Base & {\n  base64: string;\n  bind_text_id: string;\n}\n\nexport type User = Base & {\n  description: string;\n  name: string;\n}\n\nexport type Like = {\n  id: string;\n  _updated_at: string;\n  like_count: number;\n}\n\nexport type Return = {\n  id: string;\n}\n\nexport const uploadImages = async ({files, bindTextId}:{files: File[] | FileList, bindTextId: string}) => {\n  const fileUploader = async (file: File) => {\n    const convertBase64Promise = new Promise((r) => {\n      const fr = new FileReader();\n      fr.onload = (e) => {\n        r(e.target?.result);\n      };\n      fr.readAsDataURL(file);\n    });\n    const base64 = (await convertBase64Promise) as any as string;\n    if (base64.length > 100_000) {\n      console.error(`base64 size is ${base64.length}`);\n    }\n    const params = {\n      base64,\n      bind_text_id: bindTextId,\n    }\n    await fetch(`${end_point}/image`, {\n      method: \"POST\",\n      headers: {Authorization: \"evolution\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json()).then(x => console.log(x));\n  };\n\n  await Promise.all(Array.from(files).map(fileUploader));\n};\n\nexport const httpToJson = (res: Response) => res.ok ? res.json() : res.text();","import styled from \"styled-components\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {zIndexes} from \"./Constants\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {end_point, httpToJson, Return, User} from \"./Api\";\nimport {ImageMapContext} from \"./MainPage\";\n\ntype State = {\n  name: string,\n  description: string,\n};\n\nexport const SettingsOverlay = ({open, onClose}: {open: boolean; onClose: () => void}) => {\n  const [state, update] = useState<State>({\n    name: '',\n    description: '',\n  });\n\n  const { userMap } = useContext(ImageMapContext);\n\n  const apply = async (value: State) => {\n    return await fetch(`${end_point}/user/create_user`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(value).replaceAll(\"'\", String.raw`\\'`)\n    }).then(httpToJson);\n  };\n\n  const handleClose = () => {\n    apply(state);\n    onClose();\n  };\n\n  useEffect(() => {\n    (async () => {\n      if(!Object.entries(userMap).length) return;\n\n      const res: Return = await apply({name: '', description: ''});\n      const dummyMyUser: User = await fetch(`${end_point}/user/${res.id}`, {\n        headers: {Authorization: \"HelloWorld\"},\n      }).then(httpToJson);\n\n      const myUser = userMap[dummyMyUser._user_id];\n      if(!myUser) return;\n\n      const myUserValue = {\n        name: myUser.name,\n        description: myUser.description,\n      };\n      update(myUserValue);\n      await apply(myUserValue);\n    })();\n  }, [userMap]);\n\n  return (\n    <>\n      {open ?\n        <StyledMain enabled={open} >\n          <StyledBackground />\n          <StyledImageOverlay>\n            <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={handleClose}/>\n            <form>\n              <div>\n                <input\n                  name=\"name\"\n                  type=\"text\"\n                  value={state.name}\n                  onChange={e => {\n                    update(prev => ({...prev, name: e.target.value}));\n                  }}\n                />\n              </div>\n              <div>\n              <textarea\n                name=\"description\"\n                cols={30}\n                rows={5}\n                value={state.description}\n                onChange={e => {\n                  update(prev => ({...prev, description: e.target.value}));\n                }}\n              />\n              </div>\n            </form>\n          </StyledImageOverlay>\n        </StyledMain> : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.settings};\n`;\n","import React, {useCallback, useContext, useEffect, useRef, useState} from \"react\";\nimport { User } from \"./Api\";\nimport {ComposeValue, ImageMapContext, initialComposeValue} from \"./MainPage\";\nimport {faCog, faPaperPlane, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { DragDropOverlay } from \"./DragDropOverlay\";\nimport {SettingsOverlay} from \"./SettingsOverlay\";\n\nexport const composeHeight = 100;\n\nexport const Compose = ({\n  value,\n  onChange,\n  onSubmit,\n  userList\n}: {\n  value: ComposeValue,\n  onChange: (value: ComposeValue) => void,\n  onSubmit: (value: ComposeValue) => void;\n  userList: User[]\n}) => {\n  const [send, setSend] = useState(false);\n  const [settingsOverlayOpen, setSettingsOverlayOpen] = useState(false);\n\n  const { setNotificationContent } =  useContext(ImageMapContext);\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleKeyup = useCallback((e: KeyboardEvent) => {\n    // Ctrl + Enterで送信\n    if (e.ctrlKey && e.key === 'Enter' && !send) {\n      // ここで送信処理はせず、sendフラグの変更をuseEffectで察知させて、送ることで、古いデータを送らないようにする\n      setSend(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDropFile = (file: File) => {\n    onChange({...value, files: [...(value.files || []), file]});\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (send && value.text.trim()) {\n        setSend(false);\n        try {\n          await onSubmit(value);\n          onChange(initialComposeValue);\n        } catch (e) {\n          setNotificationContent({text: 'エラー発生'});\n          console.error(e);\n        }\n      }\n    })();\n  }, [send, value, onChange, onSubmit, setNotificationContent]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.removeEventListener(\"keyup\", handleKeyup, false);\n      inputRef.current.addEventListener(\"keyup\", handleKeyup, false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputRef.current]);\n\n  const handleChangeComposeValue = (event: any) => {\n    onChange({\n      ...value,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <StyledMain>\n      <StyledForm>\n        <div className=\"flex\">\n          <input\n            type=\"text\"\n            name=\"replyToTextId\"\n            placeholder=\"ツイートへの返信\"\n            value={value.replyToTextId}\n            onChange={handleChangeComposeValue}\n          />\n          <select\n            name=\"replyToUserId\"\n            value={value.replyToUserId}\n            onChange={handleChangeComposeValue}\n          >\n            <option value=\"\">-</option>\n            {userList.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name || `匿名(${user._user_id.slice(0, 2)})`}\n              </option>\n            ))}\n          </select>\n          <StyledTextCounter error={value.text.trim().length > 280}>\n            {`${value.text.trim().length}/280`}\n          </StyledTextCounter>\n        </div>\n        <div className=\"flex\">\n          <textarea\n            name=\"text\"\n            ref={inputRef}\n            placeholder=\"今なにしてる？\"\n            rows={4}\n            cols={50}\n            value={value.text}\n            onChange={e => onChange({...value, text: e.target.value})}\n          />\n          <FontAwesomeIcon\n            className=\"clickable\"\n            icon={faPaperPlane}\n            title=\"post\"\n            onClick={(e) => {e.preventDefault();setSend(true);}}\n          />\n          <div>\n            {value.files?.map((file, index) => (\n              <div>\n                {file.name}\n                <FontAwesomeIcon\n                  className=\"clickable ml1\"\n                  icon={faTimesCircle}\n                  onClick={() => onChange({...value, files: value.files?.filter((_, i) => i !== index)})}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </StyledForm>\n      <FontAwesomeIcon className=\"clickable ml1\" icon={faCog} onClick={() => setSettingsOverlayOpen(true)}/>\n      <SettingsOverlay open={settingsOverlayOpen} onClose={() => setSettingsOverlayOpen(false)}/>\n      <DragDropOverlay onDropFile={handleDropFile}/>\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  height: ${composeHeight}px;\n  display: flex;\n`;\n\nconst StyledForm = styled.div`\n  width: 500px;\n`;\n\nconst StyledTextCounter = styled.div<{error: boolean}>`\n  color: ${(x) => x.error ? 'red': 'black'};\n`;\n","import React, { ChangeEvent, useContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport {Text, end_point, uploadImages, Like} from \"./Api\";\nimport {faHeart, faImages, faReply, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './index.css';\nimport styled from \"styled-components\";\nimport {\n  ComposeContext,\n  ImageMapContext,\n  LoadImagesContext,\n  SetPreviewImagesContext\n} from \"./MainPage\";\n\nexport const Log = ({\n  text,\n  onClose,\n}: {\n  text: Text;\n  onClose?: () => void\n}) => {\n  const [updateTimeTrigger, setUpdateTimeTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [replyDestination, setReplyDestination] = useState<{\n    text?: Text;\n    open: boolean;\n  }>({open: false});\n  const [likeCount, setLikeCount] = useState(0);\n\n  const { composeValue, setComposeValue } = useContext(ComposeContext);\n  const {imageMap, likeMap, userMap} = useContext(ImageMapContext);\n  const loadImages = useContext(LoadImagesContext);\n  const setPreviewImages = useContext(SetPreviewImagesContext);\n\n  const time = useMemo(() => {\n    const now = new Date();\n    const date = new Date(text._created_at);\n    const diff = (now.getTime() - date.getTime()) / 1_000;\n    let timeDiff = \"\";\n    if (diff < 60) {\n      timeDiff = `${Math.floor(diff)}秒前`;\n    } else if (diff / 60 < 60) {\n      timeDiff = `${Math.floor(diff / 60)}分前`;\n    } else if (diff / 60 / 60 < 24) {\n      timeDiff = `${Math.floor(diff / 60 / 60)}時間前`;\n    } else {\n      timeDiff = `${Math.floor(diff / 60 / 60 / 24)}日前`;\n    }\n    return {\n      timeDiff,\n      time: text._created_at,\n      localizedTime: date.toLocaleString(\"ja-JP\"),\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text, userMap, updateTimeTrigger]);\n\n  useEffect(() => {\n    setInterval(() => setUpdateTimeTrigger(prev => prev + 1), 5_000);\n  }, []);\n\n  useEffect(() => {\n    setLikeCount(likeMap[text.id]?.like_count || 0);\n  }, [likeMap, text.id]);\n\n  const getUser = (userId: string) => {\n    return userMap[userId]?.name || `匿名(${userId.slice(0, 2)})`;\n  };\n\n  const handleReplyTo = (x: { textId: string, userId: string }) => {\n    setComposeValue({...composeValue, replyToTextId: x.textId,  replyToUserId: x.userId})\n  };\n\n  const handleClickFavorite = async ({textId}: { textId: string }) => {\n    const like: Like | undefined = await fetch(`${end_point}/like/${textId}`)\n      .then((res) => res.json()).catch(err => {\n        if (err?.response?.status === 404) {\n          // 0件なので無視\n        } else {\n          throw err;\n        }\n      });\n\n    const nextLikeCount = (like?.like_count || 0) + 1;\n    const params = {\n      like_count: nextLikeCount\n    };\n    await fetch(`${end_point}/like/${textId}`, {\n      method: \"PUT\",\n      headers: {Authorization: \"LOVE\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json())\n      .then((_) => {\n        setLikeCount(nextLikeCount);\n      });\n  };\n\n  const handleChangeImageFile = async (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n\n    await uploadImages({files: e.target.files, bindTextId: text.id});\n\n    loadImages();\n  };\n\n  const handleClickReply = async () => {\n      if(!text.in_reply_to_text_id) return;\n\n      if(replyDestination.text){\n        setReplyDestination(prev => ({\n          ...prev,\n          open: true,\n        }))\n        return;\n      }\n      await fetch(`${end_point}/text/${text.in_reply_to_text_id}`)\n        .then((res) => (res.json()))\n        .then(x => {\n          setReplyDestination({\n            text: x,\n            open: true,\n          })\n        });\n    };\n\n  return (\n    <StyledMain>\n      <StyledMeta>\n        <div\n          title={userMap[text._user_id]?.description || text._user_id}>\n          {getUser(text._user_id)}\n        </div>\n        <div>\n          <time dateTime={time.time} title={time.localizedTime}>\n            {time.timeDiff}\n          </time>\n          {onClose ?\n            <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={onClose}/>\n            : null\n          }\n        </div>\n      </StyledMeta>\n      <div>\n        <StyledReplyTo onClick={handleClickReply} >\n          {text.in_reply_to_text_id ? `To: ${text.in_reply_to_text_id} `: ''}\n        </StyledReplyTo>\n        <div>\n          {text.in_reply_to_user_id ? `@${getUser(text.in_reply_to_user_id)} `: ''}\n        </div>\n        <StyledText>\n          {text.text}\n        </StyledText>\n      </div>\n      {imageMap[text.id]?.length ?\n        imageMap[text.id].map((image, index) => (\n          <div key={image.id}>\n            <StyledImg\n              className=\"clickable\"\n              src={image.base64}\n              alt={`${getUser(text._user_id)}さんが貼り付けた画像`}\n              title={`${getUser(image._user_id)}さんが貼り付けた画像`}\n              onClick={() => setPreviewImages({images: imageMap[text.id].map(x => x.base64), index})}\n            />\n          </div>\n        ))\n        : null\n      }\n      <div className=\"flex mt1\">\n        <FontAwesomeIcon\n          className=\"clickable\"\n          icon={faReply}\n          title=\"reply\"\n          onClick={() => handleReplyTo({textId: text.id, userId: text._user_id})}\n        />\n        <FontAwesomeIcon\n          className=\"clickable ml2\"\n          icon={faHeart}\n          title=\"favorite\"\n          onClick={() => handleClickFavorite({textId: text.id})}\n        />\n        {likeCount}\n        <label htmlFor={`image_upload_${text.id}`}>\n          <FontAwesomeIcon\n            className=\"clickable ml2\"\n            icon={faImages}\n            title=\"images\"\n          />\n          <input\n            id={`image_upload_${text.id}`}\n            type=\"file\"\n            accept=\"image/*\"\n            multiple\n            hidden\n            onChange={handleChangeImageFile}\n          />\n        </label>\n      </div>\n      {\n        replyDestination.open && replyDestination.text?\n          (\n            <StyledReplyDestinationText\n              x={onClose ? 0 : 8}\n              y={16}\n            >\n              <Log\n                text={replyDestination.text}\n                onClose={() => setReplyDestination(prev => ({...prev, open: false}))}\n              />\n            </StyledReplyDestinationText>\n          )\n          : null\n      }\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  border: 1px solid #ccc;\n  padding: 8px;\n`;\n\nconst StyledMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledReplyTo = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst StyledText = styled.div`\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  padding-top: 2px;\n`;\n\nconst StyledImg = styled.img`\n  width: 100%;\n`;\n\nconst StyledReplyDestinationText = styled.div<{x: number, y: number}>`\n  margin-left: ${({x}) => x}px;\n  margin-top: ${({y}) => y}px;\n`;\n","import {end_point, httpToJson, Text} from \"./Api\";\nimport React, {useEffect, useState} from \"react\";\nimport {Log} from \"./Log\";\nimport styled from \"styled-components\";\nimport {composeHeight} from \"./Compose\";\nimport {PainValue} from \"./MainPage\";\n\nconst titleHeaderHeight = 22;\n\nexport const Logs = ({\n  value,\n  onChangePainValue,\n  loadLogTrigger,\n} : {\n  value: PainValue,\n  onChangePainValue: (value: PainValue) => void,\n  loadLogTrigger?: number,\n}) => {\n  const [texts, setTexts] = useState<Text[]>([]);\n  const [limit, setLimit] = useState(20);\n  const [editingPainValue, setEditingPainValue] = useState(value);\n  // TODO: 命名…\n  const [loadLogTrigger2, setLoadLogTrigger2] = useState(Number.MIN_SAFE_INTEGER);\n  const [openTitle, setOpenTitle] = useState(false);\n\n  const titleHeight = (openTitle ? 200 : 0 ) + titleHeaderHeight;\n\n  const loadLog = () => {\n    fetch(`${end_point}/text/all?${value.query}&$limit=${limit}`)\n      .then(httpToJson)\n      .then(setTexts).catch(console.error);\n  };\n\n  const handleClickLoadMore = () => {\n    setLimit(prev => prev + 20);\n  };\n\n  useEffect(() => {\n    setInterval(() => setLoadLogTrigger2(prev => prev + 1), 10_000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => loadLog(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [loadLogTrigger, loadLogTrigger2, limit]);\n\n  useEffect(() => setEditingPainValue(value),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [value]);\n\n  return (\n    <StyledLogs>\n      <StyledLogsTitle\n        titleHeight={titleHeight}\n      >\n        <StyledTitleHeader\n          className=\"clickable\"\n          onClick={() => {\n            setOpenTitle(prev => !prev);\n          }}\n        >\n          {value.name}\n        </StyledTitleHeader>\n        <div>\n          <form>\n            <div>\n              <input\n                name=\"name\"\n                type=\"text\"\n                value={editingPainValue.name}\n                onChange={e => {\n                  setEditingPainValue(prev => ({...prev, name: e.target.value}));\n                }}\n                onBlur={() => onChangePainValue(editingPainValue)}\n              />\n            </div>\n            <div>\n              <textarea\n                name=\"query\"\n                cols={30}\n                rows={5}\n                value={editingPainValue.query}\n                onChange={e => {\n                  setEditingPainValue(prev => ({...prev, query: e.target.value}));\n                }}\n                onBlur={() => onChangePainValue(editingPainValue)}\n              />\n            </div>\n            <div>\n              <input\n                name=\"limit\"\n                type=\"number\"\n                value={limit}\n                onChange={e => setLimit(Number(e.target.value))}\n              />\n            </div>\n          </form>\n        </div>\n      </StyledLogsTitle>\n      <StyledTexts titleHeight={titleHeight}>\n        {texts.map(text => (\n          <Log\n            key={text.id}\n            text={text}\n          />\n        ))}\n        <div className=\"clickable\" onClick={handleClickLoadMore}>load more</div>\n      </StyledTexts>\n    </StyledLogs>\n  );\n}\n\nconst StyledLogs = styled.div`\n  width: 320px;\n`;\n\nconst StyledLogsTitle = styled.div<{titleHeight: number}>`\n  height: ${(x) => x.titleHeight}px;\n  overflow: hidden;\n`;\n\nconst StyledTitleHeader = styled.div`\n  height: ${titleHeaderHeight}px;\n`;\n\nconst StyledTexts = styled.div<{titleHeight: number}>`\n  height: calc(100vh - ${(x) => composeHeight + x.titleHeight}px);\n  overflow-y: auto;\n`;\n","import styled from \"styled-components\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {zIndexes} from \"./Constants\";\n\nexport const PreviewImagesOverlay = ({open, onClose, images, index}: {open: boolean; onClose: () => void; images: string[], index: number}) => {\n  const [viewingIndex, setViewingIndex] = useState(index);\n  const [imageSize, setImageSize] = useState<{width: number, height: number} | undefined>();\n  const [keyup, setKeyup] = useState<string | undefined>();\n  const [offsetX, setOffsetX] = useState<number>(0);\n  const imgElementRef = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    setViewingIndex(index);\n  }, [index]);\n\n  useEffect(() => {\n    if (keyup === 'Escape') {\n      onClose();\n    } else if (keyup === 'ArrowLeft') {\n      setViewingIndex(prev => Math.max(prev - 1, 0));\n    } else if (keyup === 'ArrowRight') {\n      setViewingIndex(prev => Math.min(prev + 1, images.length - 1));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keyup, setViewingIndex]);\n\n  useEffect(() => {\n    const handleKeyup = (e: KeyboardEvent) => {\n      e.preventDefault();\n      setKeyup(e.key);\n    };\n    document.addEventListener('keyup', handleKeyup, false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const imageSrc = images[viewingIndex];\n\n  useEffect(() => {\n    if(imgElementRef.current && imgElementRef.current.complete ){\n      setImageSize({\n        width: imgElementRef.current.naturalWidth,\n        height: imgElementRef.current.naturalHeight,\n      });\n    } else {\n      setImageSize(undefined);\n    }\n  }, [imageSrc, imgElementRef.current?.complete]);\n\n  useEffect(() => {\n    const bodyElement = document.getElementsByTagName('body')[0];\n    bodyElement.style.overflow = open ? 'hidden' : 'initial';\n    if(open){\n      setOffsetX(window.pageXOffset);\n    }\n  }, [open]);\n\n  return (\n    <>\n      {open ?\n        <StyledMain left={offsetX}>\n          <StyledBackground onClick={() => onClose()} />\n          <StyledImageOverlay>\n            <img ref={imgElementRef} src={imageSrc} {...imageSize}  alt=\"画像\" />\n            {images.length > 0 &&\n              <StyledPoints>\n                {[...Array(images.length)].map((_, i) => (\n                  <StyledPoint key={i} current={i === viewingIndex} />\n                ))}\n              </StyledPoints>\n            }\n          </StyledImageOverlay>\n        </StyledMain>\n        : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{left: number}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n  left: ${(x) => x.left}px;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.previewImages};\n`;\n\nconst StyledPoints = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledPoint = styled.div<{current: boolean}>`\n  height: 30px;\n  width: 12px;\n  color: ${(x) => x.current ? 'black' : '#ccc'};\n  ::after {\n    content: '●';\n  }\n`;\n","import styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { zIndexes } from \"./Constants\";\n\nexport type NotificationContent = { text: string, type?: NotificationType };\n\ntype NotificationType = 'notification' | 'warning'  | 'error';\nconst NotificationTypeTable: Record<NotificationType, string> = {\n  notification : 'black',\n  warning: 'FFA500',\n  error: 'red',\n}\n\nconst notificationTypeMapping: (value?: NotificationType) => string = v => NotificationTypeTable[v || 'notification'];\n\ntype Props = { content?: NotificationContent };\n\nexport const NotificationBar = ({content}: Props) => {\n  const [notificationMessages, setNotificationMessages] = useState<({ id: string; content: NotificationContent })[]>([]);\n  const [counter, setCounter] = useState(Number.MIN_SAFE_INTEGER);\n\n  useEffect(() => {\n    if(!content) return;\n\n    const id = counter.toString();\n    setNotificationMessages(prev => [...prev, {...{content}, id}]);\n\n    setTimeout(() => {\n      setNotificationMessages(prev => prev.filter(x => x.id !== id));\n    }, 50_000);\n    setCounter(p => p + 1);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content]);\n\n  return (\n    <StyledMain2>\n      {notificationMessages.map((notificationMessage, index) => (\n        <StyledMain key={notificationMessage.id} type={notificationMessage.content?.type} >\n          {notificationMessage.content.text}\n        </StyledMain>\n      ))}\n    </StyledMain2>\n  );\n};\n\nconst StyledMain2 = styled.div`\n  position: absolute;\n  bottom: 50px;\n  left: 40px;\n`;\n\nconst StyledMain = styled.div<{type?: NotificationType}>`\n  z-index: ${zIndexes.notificationBar};\n  background: black;\n  color: white;\n  border-radius: 10px;\n  margin-top: 16px;\n  padding: 8px 16px;\n  color: ${x => notificationTypeMapping(x.type)};\n`;\n","import React, { createContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { Compose } from \"./Compose\";\nimport {end_point, User, Image, uploadImages, Return, Like, httpToJson} from \"./Api\";\nimport './index.css';\nimport styled from \"styled-components\";\nimport {Logs} from \"./Logs\";\nimport {PreviewImagesOverlay} from \"./PreviewImagesOverlay\";\nimport {NotificationBar, NotificationContent} from \"./NotificationBar\";\n\nexport type ComposeValue = { text: string, replyToTextId: string, replyToUserId: string; files?: File[]}\n\nexport const initialComposeValue: ComposeValue = {text: \"\", replyToTextId: \"\", replyToUserId: \"\"};\n\nexport const ComposeContext =\n  createContext<{ composeValue: ComposeValue, setComposeValue: (value: ComposeValue) => void }>(\n    {composeValue: initialComposeValue, setComposeValue: (_: ComposeValue) => {}}\n  );\n\n// TODO rename\nexport const ImageMapContext = createContext<{\n  imageMap: Record<string, Image[]>,\n  likeMap: Record<string, Like>,\n  userMap: Record<string, User>,\n  setNotificationContent: (value: NotificationContent) => void,\n}>({\n  imageMap: {},\n  likeMap: {},\n  userMap: {},\n  setNotificationContent: (_: NotificationContent) => {},\n});\n\nexport const LoadImagesContext = createContext<() => void>(() => {});\n\nexport const SetPreviewImagesContext = createContext<(params: {images: string[], index: number}) => void>(() => {});\n\nexport type PainValue = {\n  name: string;\n  query: string;\n};\n\nexport const MainPage = () => {\n  const [userList, setUserList] = useState<User[]>([]);\n  const [imageList, setImageList] = useState<Image[]>([]);\n  const [likeList, setLikeList] = useState<Like[]>([]);\n  const [composeValue, setComposeValue] = useState<ComposeValue>(initialComposeValue);\n  const [loadLogTrigger, setLoadLogTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [previewImages, setPreviewImages] = useState<{images: string[], index: number}>({images: [], index: 0});\n  const [openPreviewImagesOverlay, setOpenPreviewImagesOverlay] = useState(false);\n  const [notificationContent, setNotificationContent] = useState<NotificationContent>();\n  // TODO: localstorage?\n  const [painValues, setPainValues] = useState<PainValue[]>( [\n    {\n      name: 'All',\n      query: encodeURI(\"$filter=_user_id ne 'd9ecf9245defb6b07cb86fe92a6fde9e735fc9f9'&$orderby=_created_at desc\"),\n    },\n    {\n      name: 'To me',\n      query: encodeURI(\"$filter=in_reply_to_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc\")\n    },\n    {\n      name: 'Self',\n      query: encodeURI(\"$filter=_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc\")\n    },\n  ]);\n\n  const userMap: Record<string, User> = useMemo(() => userList.reduce((acc: any, cur: User) => ({\n    ...acc,\n    [cur._user_id]: acc[cur._user_id] || cur,\n  }), {}), [userList]);\n\n  const imageMap: Record<string, Image[]> = useMemo(() => imageList.reduce((acc: any, cur: Image) => ({\n    ...acc,\n    [cur.bind_text_id]: [...(acc[cur.bind_text_id] || []), cur],\n  }), {}), [imageList]);\n\n  const likeMap: Record<string, Like> = useMemo(() => likeList.reduce((acc: any, cur: Like) => ({\n    ...acc,\n    [cur.id]: cur,\n  }), {}), [likeList]);\n\n  const loadUser = () => {\n    fetch(`${end_point}/user/all?$orderby=_created_at desc`)\n      .then(httpToJson)\n      .then(setUserList);\n  };\n\n  const loadImages = async () => {\n    const loadImagesLimit = async (limit: number) => {\n      const newImageList: Image[] = await fetch(`${end_point}/image/all?$orderby=_created_at desc&$limit=${limit}`).then(httpToJson);\n\n      if(imageList.length ===0){\n        setImageList(newImageList);\n        return;\n      }\n\n      const newImageListIndex = newImageList.findIndex(newImage => newImage.id === imageList[0]?.id);\n      if(newImageListIndex !== -1){\n        setImageList(prev => [...newImageList.slice(0, newImageListIndex), ...prev]);\n        return;\n      }\n      await loadImagesLimit(limit + 100);\n    }\n    await loadImagesLimit(20);\n  };\n\n  const loadLikes = () => {\n    fetch(`${end_point}/like/all`)\n      .then(httpToJson)\n      .then(setLikeList);\n  };\n\n  const handleSubmit = async ({text, replyToUserId, replyToTextId, files}: ComposeValue) => {\n    const params = {\n      text,\n      ...(replyToUserId ? {in_reply_to_user_id: replyToUserId}: {}),\n      ...(replyToTextId ? {in_reply_to_text_id: replyToTextId}: {}),\n    };\n    // 以下コードにて、'を\"へ置換してるっぽいので、エスケープさせる（\\\"と認識させて、文字列の終端と認識されちゃうのを防止）\n    // https://github.com/HawkClaws/versatileapi/blob/6f7c8db356455f890662b525106d2e1270fa58e8/versatileapi/src/main/java/com/flex/versatileapi/service/VersatileService.java#L154\n    const postTextRes: Return = await fetch(`${end_point}/text`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(params).replaceAll(\"'\", String.raw`\\'`)\n    }).then(httpToJson);\n    files && await uploadImages({files, bindTextId: postTextRes.id});\n\n    await loadImages();\n    setLoadLogTrigger(prev => prev+1);\n  };\n\n  useEffect(() => {\n    loadUser();\n    setInterval(loadUser, 60_000 * 10);//10分\n\n    loadImages();\n    setInterval(loadImages, 10_000);\n\n    loadLikes();\n    setInterval(loadLikes, 60_000);//1minute\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  useEffect(() => {\n    if(previewImages.images.length){\n      setOpenPreviewImagesOverlay(true);\n    }\n  }, [previewImages]);\n\n  return (\n    <StyledMain>\n      <SetPreviewImagesContext.Provider value={setPreviewImages}>\n        <LoadImagesContext.Provider value={loadImages} >\n          <ImageMapContext.Provider value={{imageMap, likeMap, userMap, setNotificationContent }}>\n            <ComposeContext.Provider value={{composeValue, setComposeValue}}>\n              <Compose value={composeValue} onChange={setComposeValue} onSubmit={handleSubmit} userList={userList} />\n              <div className=\"flex\">\n                {painValues.map((list, index) => (\n                  <Logs\n                    key={list.name}\n                    value={list}\n                    loadLogTrigger={loadLogTrigger}\n                    onChangePainValue={value => {\n                      setPainValues(prev => {\n                        const newList = [...prev];\n                        newList[index] = value;\n                        return newList\n                      })\n                    }}\n                  />\n                ))}\n              </div>\n            </ComposeContext.Provider>\n          </ImageMapContext.Provider>\n        </LoadImagesContext.Provider>\n      </SetPreviewImagesContext.Provider>\n      <PreviewImagesOverlay\n        open={openPreviewImagesOverlay}\n        onClose={() => setOpenPreviewImagesOverlay(false)}\n        images={previewImages.images}\n        index={previewImages.index}\n      />\n      <NotificationBar content={notificationContent} />\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  ::-webkit-scrollbar {\n    display:none;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { MainPage } from \"./MainPage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}