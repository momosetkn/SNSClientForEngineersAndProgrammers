{"version":3,"sources":["reportWebVitals.ts","Compose.tsx","Api.ts","Log.tsx","MainPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Compose","value","onChange","onSubmit","userList","useState","send","setSend","inputRef","useRef","handleKeyup","useCallback","e","ctrlKey","key","useEffect","a","text","trim","initialComposeValue","current","console","log","removeEventListener","addEventListener","handleChangeComposeValue","event","target","name","type","placeholder","replyToTextId","replyToUserId","map","user","id","_user_id","slice","ref","rows","className","icon","faPaperPlane","title","onClick","preventDefault","end_point","Log","userMap","onReplyTo","onClose","Number","MIN_SAFE_INTEGER","updateTimeTrigger","setUpdateTimeTrigger","open","replyDestination","setReplyDestination","time","useMemo","now","Date","date","_created_at","diff","getTime","timeDiff","Math","floor","localizedTime","toLocaleString","setInterval","prev","getUser","userId","StyledMain","StyledMeta","description","dateTime","faTimesCircle","in_reply_to_text_id","fetch","res","json","x","in_reply_to_user_id","StyledText","faReply","textId","StyledReplyDestinationText","y","styled","div","MainPage","texts","setTexts","setUserList","composeValue","setComposeValue","reduce","acc","cur","loadLog","loadUser","handleSubmit","params","method","headers","Authorization","body","JSON","stringify","replaceAll","String","raw","ReactDOM","render","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.40c5328b.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { User } from \"./Api\";\nimport { ComposeValue, initialComposeValue } from \"./MainPage\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const Compose = ({\n  value,\n  onChange,\n  onSubmit,\n  userList\n}: {\n  value: ComposeValue,\n  onChange: (value: ComposeValue) => void,\n  onSubmit: (value: ComposeValue) => void;\n  userList: User[]\n}) => {\n  const [send, setSend] = useState(false);\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleKeyup = useCallback((e: KeyboardEvent) => {\n    // Ctrl + Enterで送信\n    if (e.ctrlKey && e.key === 'Enter' && !send) {\n      // ここで送信処理はせず、sendフラグの変更をuseEffectで察知させて、送ることで、古いデータを送らないようにする\n      setSend(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      if (send && value.text.trim()) {\n        setSend(false);\n        onSubmit(value);\n        onChange(initialComposeValue);\n      }\n    })();\n  }, [send, value, onChange, onSubmit]);\n  useEffect(() => {\n    if (inputRef.current) {\n      console.log('effect');\n      inputRef.current.removeEventListener(\"keyup\", handleKeyup, false);\n      inputRef.current.addEventListener(\"keyup\", handleKeyup, false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputRef.current]);\n\n  const handleChangeComposeValue = (event: any) => {\n    onChange({\n      ...value,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <form>\n      <div>\n        <input\n          type=\"text\"\n          name=\"replyToTextId\"\n          placeholder=\"ツイートへの返信\"\n          value={value.replyToTextId}\n          onChange={handleChangeComposeValue}\n        />\n      </div>\n      <div>\n        <select\n          name=\"replyToUserId\"\n          value={value.replyToUserId}\n          onChange={handleChangeComposeValue}\n        >\n          <option value=\"\">-</option>\n          {userList.map(user => (\n            <option key={user.id} value={user.id}>\n              {user.name || `匿名(${user._user_id.slice(0, 2)})`}\n            </option>\n          ))}\n        </select>\n      </div>\n      <textarea\n        name=\"text\"\n        ref={inputRef}\n        placeholder=\"今なにしてる？\"\n        rows={4}\n        value={value.text}\n        onChange={e => onChange({...value, text: e.target.value})}\n      />\n      <FontAwesomeIcon\n        className=\"clickable\"\n        icon={faPaperPlane}\n        title=\"post\"\n        onClick={(e) => {e.preventDefault();setSend(true);}}\n      />\n    </form>\n  );\n};\n","export const end_point = \"https://versatileapi.herokuapp.com/api\";\n\ntype Base = {\n  id: string;\n  _created_at: string;\n  _updated_at: string;\n  _user_id: string;\n}\n\nexport type Text = Base & {\n  text: string;\n  in_reply_to_user_id?: string; //返信対象のUserId\n  in_reply_to_text_id?: string; //返信対象のTextId\n}\n\nexport type User = Base & {\n  description: string;\n  name: string;\n}","import React, { useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { User, Text, end_point } from \"./Api\";\nimport { faReply, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './index.css';\nimport styled from \"styled-components\";\n\nexport const Log = ({\n  text,\n  userMap,\n  onReplyTo,\n  onClose,\n}: {\n  text: Text;\n  userMap: Record<string, User>,\n  onReplyTo: (value:{textId: string; userId: string}) => void\n  onClose?: () => void\n}) => {\n  const [updateTimeTrigger, setUpdateTimeTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [replyDestination, setReplyDestination] = useState<{\n    text?: Text;\n    open: boolean;\n  }>({open: false});\n\n  const time = useMemo(() => {\n    const now = new Date();\n    const date = new Date(text._created_at);\n    const diff = (now.getTime() - date.getTime()) / 1_000;\n    let timeDiff = \"\";\n    if (diff < 60) {\n      timeDiff = `${Math.floor(diff)}秒前`;\n    } else if (diff / 60 < 60) {\n      timeDiff = `${Math.floor(diff / 60)}分前`;\n    } else if (diff / 60 / 60 < 24) {\n      timeDiff = `${Math.floor(diff / 60 / 60)}時間前`;\n    } else {\n      timeDiff = `${Math.floor(diff / 60 / 60 / 24)}日前`;\n    }\n    return {\n      timeDiff,\n      time: text._created_at,\n      localizedTime: date.toLocaleString(\"ja-JP\"),\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text, userMap, updateTimeTrigger]);\n\n  useEffect(() => {\n    setInterval(() => setUpdateTimeTrigger(prev => prev + 1), 5_000);\n  }, []);\n\n  const getUser = (userId: string) => {\n    return userMap[userId]?.name || `匿名(${userId.slice(0, 2)})`;\n  };\n\n  return (\n    <StyledMain>\n      <StyledMeta>\n        <div\n          title={userMap[text._user_id]?.description || text._user_id}>\n          {getUser(text._user_id)}\n        </div>\n        <div>\n          <time dateTime={time.time} title={time.localizedTime}>\n            {time.timeDiff}\n          </time>\n          {onClose ?\n            <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={onClose}/>\n            : null\n          }\n        </div>\n      </StyledMeta>\n      <div>\n        <div\n          onClick={async () => {\n            if(!text.in_reply_to_text_id) return;\n            if(replyDestination.text){\n              setReplyDestination(prev => ({\n                ...prev,\n                open: true,\n              }))\n              return;\n            }\n            await fetch(`${end_point}/text/${text.in_reply_to_text_id}`)\n              .then((res) => (res.json()))\n              .then(x => {\n                setReplyDestination({\n                  text: x,\n                  open: true,\n                })\n              });\n          }\n        }\n          >\n          {text.in_reply_to_text_id ? `ReplyTo: ${text.in_reply_to_text_id} `: ''}\n        </div>\n        <div>\n          {text.in_reply_to_user_id ? `@${getUser(text.in_reply_to_user_id)} `: ''}\n        </div>\n        <StyledText>\n          {text.text}\n        </StyledText>\n      </div>\n      <div className=\"flex mt1\">\n        <FontAwesomeIcon\n          className=\"clickable\"\n          icon={faReply}\n          title=\"reply\"\n          onClick={() => onReplyTo({textId: text.id, userId: text._user_id})}\n        />\n      </div>\n      {\n        replyDestination.open && replyDestination.text?\n          (\n            <StyledReplyDestinationText\n              x={onClose ? 0 : 8}\n              y={16}\n            >\n              <Log\n                text={replyDestination.text}\n                userMap={userMap}\n                onReplyTo={onReplyTo}\n                onClose={() => setReplyDestination(prev => ({...prev, open: false}))}\n              />\n            </StyledReplyDestinationText>\n          )\n          : null\n      }\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  border: 1px solid #ccc;\n  padding: 8px;\n`;\n\nconst StyledMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledText = styled.div`\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  padding-top: 2px;\n`;\n\nconst StyledReplyDestinationText = styled.div<{x: number, y: number}>`\n  margin-left: ${({x}) => x}px;\n  margin-top: ${({y}) => y}px;\n`;\n","import React, { useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { Compose } from \"./Compose\";\nimport { end_point, User, Text } from \"./Api\";\nimport {Log} from \"./Log\";\nimport './index.css';\n\nexport type ComposeValue = { text: string, replyToTextId: string, replyToUserId: string }\n\nexport const initialComposeValue: ComposeValue = {text: \"\", replyToTextId: \"\", replyToUserId: \"\"};\n\nexport const MainPage = () => {\n  const [texts, setTexts] = useState<Text[]>([]);\n  const [userList, setUserList] = useState<User[]>([]);\n  const [composeValue, setComposeValue] = useState<ComposeValue>(initialComposeValue);\n\n  const userMap: Record<string, User> = useMemo(() => userList.reduce((acc: any, cur: { id: any; }) => ({\n    ...acc,\n    [cur.id]: cur\n  }), {}), [userList]);\n\n  const loadLog = () => {\n    fetch(`${end_point}/text/all?$orderby=_created_at%20desc&$limit=60`)\n      .then((res) => (res.json()))\n      .then(setTexts);\n  };\n\n  const loadUser = () => {\n    fetch(`${end_point}/user/all`)\n      .then((res) => (res.json()))\n      .then(setUserList);\n  };\n\n  const handleSubmit = async ({text, replyToUserId, replyToTextId}: { text: string, replyToUserId?: string, replyToTextId?: string} ) => {\n    const params = {\n      text,\n      ...(replyToUserId ? {in_reply_to_user_id: replyToUserId}: {}),\n      ...(replyToTextId ? {in_reply_to_text_id: replyToTextId}: {}),\n    };\n    // 以下コードにて、'を\"へ置換してるっぽいので、エスケープさせる（\\\"と認識させて、文字列の終端と認識されちゃうのを防止）\n    // https://github.com/HawkClaws/versatileapi/blob/6f7c8db356455f890662b525106d2e1270fa58e8/versatileapi/src/main/java/com/flex/versatileapi/service/VersatileService.java#L154\n    await fetch(`${end_point}/text`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(params).replaceAll(\"'\", String.raw`\\'`)\n    }).then((res) => res.json()).then(x => console.log(x));\n    loadLog();\n  };\n\n  useEffect(() => {\n    loadLog();\n    setInterval(loadLog, 30_000);\n    setInterval(loadUser, 60_000 * 10);//10分\n  }, []);\n\n  return (\n    <div>\n      <Compose value={composeValue} onChange={setComposeValue} onSubmit={handleSubmit} userList={userList} />\n      {texts.map(text => (\n        <Log\n          key={text.id}\n          text={text}\n          userMap={userMap}\n          onReplyTo={(x) =>\n            setComposeValue({...composeValue, replyToTextId: x.textId,  replyToUserId: x.userId})\n          }\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { MainPage } from \"./MainPage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}