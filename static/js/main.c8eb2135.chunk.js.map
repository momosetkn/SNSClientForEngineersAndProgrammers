{"version":3,"sources":["reportWebVitals.ts","DragDropOverlay.tsx","Compose.tsx","Api.ts","Log.tsx","Logs.tsx","Constants.ts","PreviewImagesOverlay.tsx","MainPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DragDropOverlay","onDropFile","useState","drag","setDrag","file","setFile","useEffect","undefined","document","addEventListener","ev","preventDefault","dataTransfer","items","i","length","kind","getAsFile","files","console","log","name","fromElement","StyledMain","enabled","styled","div","x","Compose","value","onChange","onSubmit","userList","send","setSend","inputRef","useRef","handleKeyup","useCallback","e","ctrlKey","key","a","text","trim","initialComposeValue","current","removeEventListener","handleChangeComposeValue","event","target","className","type","placeholder","replyToTextId","replyToUserId","map","user","id","_user_id","slice","StyledTextCounter","error","ref","rows","cols","icon","faPaperPlane","title","onClick","index","faTimesCircle","filter","_","end_point","uploadImages","bindTextId","fileUploader","convertBase64Promise","Promise","r","fr","FileReader","onload","result","readAsDataURL","base64","params","bind_text_id","fetch","method","headers","Authorization","body","JSON","stringify","res","json","all","Array","from","Log","userMap","onClose","Number","MIN_SAFE_INTEGER","updateTimeTrigger","setUpdateTimeTrigger","open","replyDestination","setReplyDestination","useContext","ComposeContext","composeValue","setComposeValue","imageMap","ImageMapContext","loadImages","LoadImagesContext","setPreviewImages","SetPreviewImagesContext","time","useMemo","now","Date","date","_created_at","diff","getTime","timeDiff","Math","floor","localizedTime","toLocaleString","setInterval","prev","getUser","userId","handleChangeImageFile","handleClickReply","in_reply_to_text_id","StyledMeta","description","dateTime","StyledReplyTo","in_reply_to_user_id","StyledText","image","StyledImg","src","alt","images","faReply","textId","htmlFor","faImages","accept","multiple","hidden","StyledReplyDestinationText","y","img","Logs","query","loadLogTrigger","texts","setTexts","loadLog","StyledLogs","StyledLogsTitle","StyledTexts","composeHeight","zIndexes","PreviewImagesOverlay","viewingIndex","setViewingIndex","imageSize","setImageSize","keyup","setKeyup","offsetX","setOffsetX","imgElementRef","max","min","imageSrc","complete","width","naturalWidth","height","naturalHeight","getElementsByTagName","style","overflow","window","pageXOffset","left","StyledBackground","StyledImageOverlay","StyledPoints","StyledPoint","createContext","lists","encodeURI","MainPage","setUserList","imageList","setImageList","setLoadLogTrigger","previewImages","openPreviewImagesOverlay","setOpenPreviewImagesOverlay","reduce","acc","cur","loadUser","handleSubmit","replaceAll","String","raw","postTextRes","Provider","list","ReactDOM","render","StrictMode","exact","path","getElementById"],"mappings":"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","file":"static/js/main.c8eb2135.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from \"styled-components\";\nimport {useEffect, useState} from \"react\";\n\nexport const DragDropOverlay = ({onDropFile}:{onDropFile: (file: File) => void}) => {\n  const [drag, setDrag] = useState(false);\n  // addEventListenerを都度貼り替えるのが面倒なため、state経由でuseEffectを発火させ、onDropFileさせる\n  const [file, setFile] = useState<File | undefined>();\n\n  useEffect(() => {\n    if(file){\n      onDropFile(file);\n      setFile(undefined);\n    }\n  }, [file, onDropFile]);\n\n  useEffect(() => {\n    const handleDrop =  (ev: any) => {\n      setDrag(false);\n      ev.preventDefault();\n\n      if (ev.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          if (ev.dataTransfer.items[i].kind === 'file') {\n            const file = ev.dataTransfer.items[i].getAsFile();\n            setFile(file);\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < ev.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + ev.dataTransfer.files[i].name);\n        }\n      }\n    };\n\n    const dragEnterHandler = (ev: any) =>  {\n      ev.preventDefault();\n      setDrag(true);\n    };\n\n    const dragOverHandler = (ev: any) =>  ev.preventDefault();\n\n    const handleDragLeave = (ev: any) =>  {\n      ev.preventDefault();\n      console.log('leave', ev);\n      if (!ev.fromElement){\n        setDrag(false);\n      }\n    };\n\n    document.addEventListener('drop', handleDrop);\n    document.addEventListener('dragenter', dragEnterHandler);\n    document.addEventListener('dragover', dragOverHandler);//kesu nokosu\n    document.addEventListener('dragleave', handleDragLeave);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <StyledMain enabled={drag} />\n  );\n};\n\nconst styledDragDropOverlayMargin = 16;\nconst styledDragDropOverlayBorderSize = 4;\n\nconst StyledMain = styled.div<{enabled: boolean}>`\n  position: absolute;\n  width: calc(100vw - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  height: calc(100vh - ${(styledDragDropOverlayMargin + styledDragDropOverlayBorderSize) * 2}px);\n  top: 0px;\n  margin: ${styledDragDropOverlayMargin}px;\n  border-radius: 32px;\n  background: gray;\n  border: ${styledDragDropOverlayBorderSize}px dashed black;\n  opacity: 0.5;\n  display:   ${(x) =>  x.enabled ? 'block' : 'none'};\n`;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { User } from \"./Api\";\nimport { ComposeValue, initialComposeValue } from \"./MainPage\";\nimport { faPaperPlane, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\nimport { DragDropOverlay } from \"./DragDropOverlay\";\n\nexport const composeHeight = 100;\n\nexport const Compose = ({\n  value,\n  onChange,\n  onSubmit,\n  userList\n}: {\n  value: ComposeValue,\n  onChange: (value: ComposeValue) => void,\n  onSubmit: (value: ComposeValue) => void;\n  userList: User[]\n}) => {\n  const [send, setSend] = useState(false);\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleKeyup = useCallback((e: KeyboardEvent) => {\n    // Ctrl + Enterで送信\n    if (e.ctrlKey && e.key === 'Enter' && !send) {\n      // ここで送信処理はせず、sendフラグの変更をuseEffectで察知させて、送ることで、古いデータを送らないようにする\n      setSend(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDropFile = (file: File) => {\n    onChange({...value, files: [...(value.files || []), file]});\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (send && value.text.trim()) {\n        setSend(false);\n        onSubmit(value);\n        onChange(initialComposeValue);\n      }\n    })();\n  }, [send, value, onChange, onSubmit]);\n  useEffect(() => {\n    if (inputRef.current) {\n      console.log('effect');\n      inputRef.current.removeEventListener(\"keyup\", handleKeyup, false);\n      inputRef.current.addEventListener(\"keyup\", handleKeyup, false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputRef.current]);\n\n  const handleChangeComposeValue = (event: any) => {\n    onChange({\n      ...value,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <StyledMain>\n      <form>\n        <div className=\"flex\">\n          <input\n            type=\"text\"\n            name=\"replyToTextId\"\n            placeholder=\"ツイートへの返信\"\n            value={value.replyToTextId}\n            onChange={handleChangeComposeValue}\n          />\n          <select\n            name=\"replyToUserId\"\n            value={value.replyToUserId}\n            onChange={handleChangeComposeValue}\n          >\n            <option value=\"\">-</option>\n            {userList.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name || `匿名(${user._user_id.slice(0, 2)})`}\n              </option>\n            ))}\n          </select>\n          <StyledTextCounter error={value.text.trim().length > 280}>\n            {`${value.text.trim().length}/280`}\n          </StyledTextCounter>\n        </div>\n        <div className=\"flex\">\n          <textarea\n            name=\"text\"\n            ref={inputRef}\n            placeholder=\"今なにしてる？\"\n            rows={4}\n            cols={50}\n            value={value.text}\n            onChange={e => onChange({...value, text: e.target.value})}\n          />\n          <FontAwesomeIcon\n            className=\"clickable\"\n            icon={faPaperPlane}\n            title=\"post\"\n            onClick={(e) => {e.preventDefault();setSend(true);}}\n          />\n          <div>\n            {value.files?.map((file, index) => (\n              <div>\n                {file.name}\n                <FontAwesomeIcon\n                  className=\"clickable ml1\"\n                  icon={faTimesCircle}\n                  onClick={() => onChange({...value, files: value.files?.filter((_, i) => i !== index)})}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </form>\n      <DragDropOverlay onDropFile={handleDropFile}/>\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  height: ${composeHeight}px;\n`;\n\nconst StyledTextCounter = styled.div<{error: boolean}>`\n  color: ${(x) => x.error ? 'red': 'black'};\n`;\n","export const end_point = \"https://versatileapi.herokuapp.com/api\";\n\ntype Base = {\n  id: string;\n  _created_at: string;\n  _updated_at: string;\n  _user_id: string;\n}\n\nexport type Text = Base & {\n  text: string;\n  in_reply_to_user_id?: string; //返信対象のUserId\n  in_reply_to_text_id?: string; //返信対象のTextId\n}\n\nexport type Image = Base & {\n  base64: string;\n  bind_text_id: string;\n}\n\nexport type User = Base & {\n  description: string;\n  name: string;\n}\n\nexport type Response = {\n  id: string;\n}\n\nexport const uploadImages = async ({files, bindTextId}:{files: File[] | FileList, bindTextId: string}) => {\n  const fileUploader = async (file: File) => {\n    const convertBase64Promise = new Promise((r) => {\n      const fr = new FileReader();\n      fr.onload = (e) => {\n        r(e.target?.result);\n      };\n      fr.readAsDataURL(file);\n    });\n    const base64 = (await convertBase64Promise) as any as string;\n    if (base64.length > 100_000) {\n      console.error(`base64 size is ${base64.length}`);\n    }\n    const params = {\n      base64,\n      bind_text_id: bindTextId,\n    }\n    await fetch(`${end_point}/image`, {\n      method: \"POST\",\n      headers: {Authorization: \"evolution\"},\n      body: JSON.stringify(params),\n    }).then((res) => res.json()).then(x => console.log(x));\n  };\n\n  await Promise.all(Array.from(files).map(fileUploader));\n};\n","import React, { ChangeEvent, useContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { User, Text, end_point, uploadImages } from \"./Api\";\nimport { faImages, faReply, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './index.css';\nimport styled from \"styled-components\";\nimport {\n  ComposeContext,\n  ImageMapContext,\n  LoadImagesContext,\n  SetPreviewImagesContext\n} from \"./MainPage\";\n\nexport const Log = ({\n  text,\n  userMap,\n  onClose,\n}: {\n  text: Text;\n  userMap: Record<string, User>,\n  onClose?: () => void\n}) => {\n  const [updateTimeTrigger, setUpdateTimeTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [replyDestination, setReplyDestination] = useState<{\n    text?: Text;\n    open: boolean;\n  }>({open: false});\n\n  const { composeValue, setComposeValue } = useContext(ComposeContext);\n  const imageMap = useContext(ImageMapContext);\n  const loadImages = useContext(LoadImagesContext);\n  const setPreviewImages = useContext(SetPreviewImagesContext);\n\n  const time = useMemo(() => {\n    const now = new Date();\n    const date = new Date(text._created_at);\n    const diff = (now.getTime() - date.getTime()) / 1_000;\n    let timeDiff = \"\";\n    if (diff < 60) {\n      timeDiff = `${Math.floor(diff)}秒前`;\n    } else if (diff / 60 < 60) {\n      timeDiff = `${Math.floor(diff / 60)}分前`;\n    } else if (diff / 60 / 60 < 24) {\n      timeDiff = `${Math.floor(diff / 60 / 60)}時間前`;\n    } else {\n      timeDiff = `${Math.floor(diff / 60 / 60 / 24)}日前`;\n    }\n    return {\n      timeDiff,\n      time: text._created_at,\n      localizedTime: date.toLocaleString(\"ja-JP\"),\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text, userMap, updateTimeTrigger]);\n\n  useEffect(() => {\n    setInterval(() => setUpdateTimeTrigger(prev => prev + 1), 5_000);\n  }, []);\n\n  const getUser = (userId: string) => {\n    return userMap[userId]?.name || `匿名(${userId.slice(0, 2)})`;\n  };\n\n  const handleReplyTo = (x: { textId: string, userId: string }) => {\n    setComposeValue({...composeValue, replyToTextId: x.textId,  replyToUserId: x.userId})\n  };\n\n  const handleChangeImageFile = async (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n\n    await uploadImages({files: e.target.files, bindTextId: text.id});\n\n    loadImages();\n  };\n\n  const handleClickReply = async () => {\n      if(!text.in_reply_to_text_id) return;\n\n      if(replyDestination.text){\n        setReplyDestination(prev => ({\n          ...prev,\n          open: true,\n        }))\n        return;\n      }\n      await fetch(`${end_point}/text/${text.in_reply_to_text_id}`)\n        .then((res) => (res.json()))\n        .then(x => {\n          setReplyDestination({\n            text: x,\n            open: true,\n          })\n        });\n    };\n\n  return (\n    <StyledMain>\n      <StyledMeta>\n        <div\n          title={userMap[text._user_id]?.description || text._user_id}>\n          {getUser(text._user_id)}\n        </div>\n        <div>\n          <time dateTime={time.time} title={time.localizedTime}>\n            {time.timeDiff}\n          </time>\n          {onClose ?\n            <FontAwesomeIcon className=\"clickable ml1\" icon={faTimesCircle} onClick={onClose}/>\n            : null\n          }\n        </div>\n      </StyledMeta>\n      <div>\n        <StyledReplyTo onClick={handleClickReply} >\n          {text.in_reply_to_text_id ? `To: ${text.in_reply_to_text_id} `: ''}\n        </StyledReplyTo>\n        <div>\n          {text.in_reply_to_user_id ? `@${getUser(text.in_reply_to_user_id)} `: ''}\n        </div>\n        <StyledText>\n          {text.text}\n        </StyledText>\n      </div>\n      {imageMap[text.id]?.length ?\n        imageMap[text.id].map((image, index) => (\n          <div>\n            <StyledImg\n              className=\"clickable\"\n              src={image.base64}\n              alt={`${getUser(text._user_id)}さんが貼り付けた画像`}\n              title={`${getUser(image._user_id)}さんが貼り付けた画像`}\n              onClick={() => setPreviewImages({images: imageMap[text.id].map(x => x.base64), index})}\n            />\n          </div>\n        ))\n        : null\n      }\n      <div className=\"flex mt1\">\n        <FontAwesomeIcon\n          className=\"clickable\"\n          icon={faReply}\n          title=\"reply\"\n          onClick={() => handleReplyTo({textId: text.id, userId: text._user_id})}\n        />\n        <label htmlFor={`image_upload_${text.id}`}>\n          <FontAwesomeIcon\n            className=\"clickable ml2\"\n            icon={faImages}\n            title=\"images\"\n          />\n          <input\n            id={`image_upload_${text.id}`}\n            type=\"file\"\n            accept=\"image/*\"\n            multiple\n            hidden\n            onChange={handleChangeImageFile}\n          />\n        </label>\n      </div>\n      {\n        replyDestination.open && replyDestination.text?\n          (\n            <StyledReplyDestinationText\n              x={onClose ? 0 : 8}\n              y={16}\n            >\n              <Log\n                text={replyDestination.text}\n                userMap={userMap}\n                onClose={() => setReplyDestination(prev => ({...prev, open: false}))}\n              />\n            </StyledReplyDestinationText>\n          )\n          : null\n      }\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  border: 1px solid #ccc;\n  padding: 8px;\n`;\n\nconst StyledMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledReplyTo = styled.div`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst StyledText = styled.div`\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  padding-top: 2px;\n`;\n\nconst StyledImg = styled.img`\n  width: 100%;\n`;\n\nconst StyledReplyDestinationText = styled.div<{x: number, y: number}>`\n  margin-left: ${({x}) => x}px;\n  margin-top: ${({y}) => y}px;\n`;\n","import {end_point, Text, User} from \"./Api\";\nimport React, {useEffect, useState} from \"react\";\nimport {Log} from \"./Log\";\nimport styled from \"styled-components\";\nimport {composeHeight} from \"./Compose\";\n\nexport const Logs = ({\n  name,\n  query,\n  userMap,\n  loadLogTrigger,\n} : {\n  name: string,\n  query: string,\n  userMap: Record<string, User>,\n  loadLogTrigger?: number,\n}) => {\n  const [texts, setTexts] = useState<Text[]>([]);\n\n  const loadLog = () => {\n    fetch(`${end_point}/text/all?${query}`)\n      .then((res) => (res.json()))\n      .then(setTexts);\n  };\n\n  useEffect(() => {\n    loadLog();\n    setInterval(loadLog, 10_000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => loadLog(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [loadLogTrigger]);\n\n  return (\n    <StyledLogs>\n      <StyledLogsTitle>\n        {name}\n      </StyledLogsTitle>\n      <StyledTexts>\n        {texts.map(text => (\n          <Log\n            key={text.id}\n            text={text}\n            userMap={userMap}\n          />\n        ))}\n      </StyledTexts>\n    </StyledLogs>\n  );\n}\n\nconst StyledLogs = styled.div`\n  width: 320px;\n`;\n\nconst styledLogsTitleHeight = 22;\n\nconst StyledLogsTitle = styled.div`\n  height: ${styledLogsTitleHeight}px;\n`;\n\nconst StyledTexts = styled.div`\n  height: calc(100vh - ${composeHeight + styledLogsTitleHeight}px);\n  overflow-y: auto;\n`;\n","export const zIndexes = {\n  dragDrop: 100,\n  previewImages: 300,\n  previewImagesBackground: 200,\n};\n","import styled from \"styled-components\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {zIndexes} from \"./Constants\";\n\nexport const PreviewImagesOverlay = ({open, onClose, images, index}: {open: boolean; onClose: () => void; images: string[], index: number}) => {\n  const [viewingIndex, setViewingIndex] = useState(index);\n  const [imageSize, setImageSize] = useState<{width: number, height: number} | undefined>();\n  const [keyup, setKeyup] = useState<string | undefined>();\n  const [offsetX, setOffsetX] = useState<number>(0);\n  const imgElementRef = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    setViewingIndex(index);\n  }, [index]);\n\n  useEffect(() => {\n    if (keyup === 'Escape') {\n      onClose();\n    } else if (keyup === 'ArrowLeft') {\n      setViewingIndex(prev => Math.max(prev - 1, 0));\n    } else if (keyup === 'ArrowRight') {\n      setViewingIndex(prev => Math.min(prev + 1, images.length - 1));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keyup, setViewingIndex]);\n\n  useEffect(() => {\n    const handleKeyup = (e: KeyboardEvent) => {\n      e.preventDefault();\n      setKeyup(e.key);\n    };\n    document.addEventListener('keyup', handleKeyup, false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const imageSrc = images[viewingIndex];\n\n  useEffect(() => {\n    if(imgElementRef.current && imgElementRef.current.complete ){\n      setImageSize({\n        width: imgElementRef.current.naturalWidth,\n        height: imgElementRef.current.naturalHeight,\n      });\n    } else {\n      setImageSize(undefined);\n    }\n  }, [imageSrc, imgElementRef.current?.complete]);\n\n  useEffect(() => {\n    const bodyElement = document.getElementsByTagName('body')[0];\n    bodyElement.style.overflow = open ? 'hidden' : 'initial';\n    if(open){\n      setOffsetX(window.pageXOffset);\n    }\n  }, [open]);\n\n  return (\n    <>\n      {open ?\n        <StyledMain left={offsetX}>\n          <StyledBackground onClick={() => onClose()} />\n          <StyledImageOverlay>\n            <img ref={imgElementRef} src={imageSrc} {...imageSize}  alt=\"画像\" />\n            {images.length > 0 &&\n              <StyledPoints>\n                {[...Array(images.length)].map((_, i) => (\n                  <StyledPoint key={i} current={i === viewingIndex} />\n                ))}\n              </StyledPoints>\n            }\n          </StyledImageOverlay>\n        </StyledMain>\n        : null\n      }\n    </>\n  );\n};\n\nconst StyledMain = styled.div<{left: number}>`\n  position: absolute;\n  top: 0px;\n  z-index: 300;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n  left: ${(x) => x.left}px;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${zIndexes.previewImagesBackground};\n  top: 0px;\n  background: gray;\n  opacity: 0.5;\n`;\n\nconst StyledImageOverlay = styled.div`\n  z-index: ${zIndexes.previewImages};\n`;\n\nconst StyledPoints = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledPoint = styled.div<{current: boolean}>`\n  height: 30px;\n  width: 12px;\n  color: ${(x) => x.current ? 'black' : '#ccc'};\n  ::after {\n    content: '●';\n  }\n`;\n","import React, { createContext, useEffect, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { Compose } from \"./Compose\";\nimport { end_point, User, Image, uploadImages, Response } from \"./Api\";\nimport './index.css';\nimport styled from \"styled-components\";\nimport {Logs} from \"./Logs\";\nimport {PreviewImagesOverlay} from \"./PreviewImagesOverlay\";\n\nexport type ComposeValue = { text: string, replyToTextId: string, replyToUserId: string; files?: File[]}\n\nexport const initialComposeValue: ComposeValue = {text: \"\", replyToTextId: \"\", replyToUserId: \"\"};\n\nexport const ComposeContext =\n  createContext<{ composeValue: ComposeValue, setComposeValue: (value: ComposeValue) => void }>(\n    {composeValue: initialComposeValue, setComposeValue: (_: ComposeValue) => {}}\n  );\n\nexport const ImageMapContext = createContext<Record<string, Image[]>>({});\n\nexport const LoadImagesContext = createContext<() => void>(() => {});\n\nexport const SetPreviewImagesContext = createContext<(params: {images: string[], index: number}) => void>(() => {});\n\nconst lists = [\n  {\n    name: 'All',\n    query: encodeURI(\"$filter=_user_id ne 'd9ecf9245defb6b07cb86fe92a6fde9e735fc9f9'&$orderby=_created_at desc&$limit=20\"),\n  },\n  {\n    name: 'To me',\n    query: encodeURI(\"$filter=in_reply_to_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc&$limit=20\")\n  },\n  {\n    name: 'Self',\n    query: encodeURI(\"$filter=_user_id eq '57039384a74e1fed39b1663b460b7e7f51f99bee'&$orderby=_created_at desc&$limit=20\")\n  },\n]\n\nexport const MainPage = () => {\n  const [userList, setUserList] = useState<User[]>([]);\n  const [imageList, setImageList] = useState<Image[]>([]);\n  const [composeValue, setComposeValue] = useState<ComposeValue>(initialComposeValue);\n  const [loadLogTrigger, setLoadLogTrigger] = useState(Number.MIN_SAFE_INTEGER);\n  const [previewImages, setPreviewImages] = useState<{images: string[], index: number}>({images: [], index: 0});\n  const [openPreviewImagesOverlay, setOpenPreviewImagesOverlay] = useState(false);\n\n  const userMap: Record<string, User> = useMemo(() => userList.reduce((acc: any, cur: { id: any; }) => ({\n    ...acc,\n    [cur.id]: cur\n  }), {}), [userList]);\n\n  const imageMap: Record<string, Image[]> = useMemo(() => imageList.reduce((acc: any, cur: Image) => ({\n    ...acc,\n    [cur.bind_text_id]: [...(acc[cur.bind_text_id] || []), cur],\n  }), {}), [imageList]);\n\n  const loadUser = () => {\n    fetch(`${end_point}/user/all`)\n      .then((res) => (res.json()))\n      .then(setUserList);\n  };\n\n  const loadImages = () => {\n    fetch(`${end_point}/image/all`)\n      .then((res) => (res.json()))\n      .then(setImageList);\n  };\n\n  const handleSubmit = async ({text, replyToUserId, replyToTextId, files}: ComposeValue) => {\n    const params = {\n      text,\n      ...(replyToUserId ? {in_reply_to_user_id: replyToUserId}: {}),\n      ...(replyToTextId ? {in_reply_to_text_id: replyToTextId}: {}),\n    };\n    // 以下コードにて、'を\"へ置換してるっぽいので、エスケープさせる（\\\"と認識させて、文字列の終端と認識されちゃうのを防止）\n    // https://github.com/HawkClaws/versatileapi/blob/6f7c8db356455f890662b525106d2e1270fa58e8/versatileapi/src/main/java/com/flex/versatileapi/service/VersatileService.java#L154\n    const postTextRes: Response = await fetch(`${end_point}/text`, {\n      method: \"POST\",\n      headers: {Authorization: \"HelloWorld\"},\n      body: JSON.stringify(params).replaceAll(\"'\", String.raw`\\'`)\n    }).then((res) => res.json());\n    files && await uploadImages({files, bindTextId: postTextRes.id});\n\n    loadImages();\n    setLoadLogTrigger(prev => prev+1);\n  };\n\n  useEffect(() => {\n    loadUser();\n    setInterval(loadUser, 60_000 * 10);//10分\n\n    loadImages();\n    setInterval(loadImages, 10_000);\n  }, []);\n\n\n  useEffect(() => {\n    if(previewImages.images.length){\n      setOpenPreviewImagesOverlay(true);\n    }\n  }, [previewImages]);\n\n  return (\n    <StyledMain>\n      <Compose value={composeValue} onChange={setComposeValue} onSubmit={handleSubmit} userList={userList} />\n      <SetPreviewImagesContext.Provider value={setPreviewImages}>\n        <LoadImagesContext.Provider value={loadImages}>\n          <ImageMapContext.Provider value={imageMap}>\n            <ComposeContext.Provider value={{composeValue, setComposeValue}}>\n              <div className=\"flex\">\n                {lists.map(list => (\n                  <Logs\n                    key={list.name}\n                    name={list.name}\n                    query={list.query}\n                    userMap={userMap}\n                    loadLogTrigger={loadLogTrigger}\n                  />\n                ))}\n              </div>\n            </ComposeContext.Provider>\n          </ImageMapContext.Provider>\n        </LoadImagesContext.Provider>\n      </SetPreviewImagesContext.Provider>\n      <PreviewImagesOverlay\n        open={openPreviewImagesOverlay}\n        onClose={() => setOpenPreviewImagesOverlay(false)}\n        images={previewImages.images}\n        index={previewImages.index}\n      />\n    </StyledMain>\n  );\n};\n\nconst StyledMain = styled.div`\n  ::-webkit-scrollbar {\n    display:none;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { MainPage } from \"./MainPage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}